{
	"id": "30ec97013ab446d3d651d4eb06ba2057",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"inviter_presell/stake.sol": {
				"content": "pragma solidity ^0.8.10;\r\n\r\n\r\nimport \"./adminable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StakingRewards is Adminable , ReentrancyGuard{\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public rewardsToken;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 public totalRewards = 168000 * 10 ** 18;\r\n    uint256 public startTime;\r\n    uint256 public rateInterval = 10 minutes;\r\n    uint256 public rateIntervalNumerator = 5;\r\n    uint256 public rateIntervalDenominator = 1000;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n    uint256 private _totalPowers;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public userLastUpdateTime;\r\n    mapping(address => uint256) private _balances;\r\n    mapping(address => uint256) public claimedBalances;\r\n\r\n\r\n\r\n    modifier updateReward(address account) {\r\n        uint256 time = userLastUpdateTime[account];\r\n        if(time <= startTime) {\r\n            time = startTime;\r\n        }\r\n        uint256 rate = getTimeWeightedAveRate(time, block.timestamp);\r\n        rewardPerTokenStored = rewardPerToken(rate);\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            userLastUpdateTime[account] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {\r\n        rateInterval = _rateInterval;\r\n        rateIntervalNumerator = _rateIntervalNumerator;\r\n        rateIntervalDenominator = _rateIntervalDenominator;\r\n    }\r\n\r\n    function setStartTime(uint256 time) external onlyAdmin {\r\n        startTime = time;\r\n        lastUpdateTime = time;\r\n    }\r\n\r\n    function totalPowers() external view returns (uint256) {\r\n        return _totalPowers;\r\n    }\r\n\r\n    function curTime() external  view  returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function powersOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getCurRewardPool() public view returns (uint256) {\r\n        return getRewardPool(block.timestamp);\r\n    }\r\n\r\n    function getRewardPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return totalRewards;\r\n        }\r\n        if(time < startTime) {\r\n            return 0;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        // TODO 精度问题\r\n        return value.mul(rateIntervalNumerator).div(rateIntervalDenominator);\r\n    }\r\n\r\n    function _getRemainPool(uint256 time) private view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return totalRewards;\r\n        }\r\n        if(time < startTime) {\r\n            return 0;\r\n        }\r\n\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getRemainPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n\r\n        if(time < startTime) {\r\n            return 0;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getCurRewardRate() public view returns (uint256) {\r\n        return _getRewardRate(block.timestamp);\r\n    }\r\n\r\n    function _getRewardRate(uint256 time) private view returns (uint256) {\r\n        uint256 curPoolAmount = getRewardPool(time);\r\n        uint256 rewardRate = curPoolAmount.div(rateInterval);\r\n        return rewardRate;\r\n    }\r\n\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function rewardPerToken(uint256 rewardRate) public view returns (uint256) {\r\n        if (_totalPowers == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    // Time-weighted average rate\r\n    function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){\r\n        \r\n        if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {\r\n            return 0;\r\n        }\r\n\r\n        if(leftTime < startTime) {\r\n            leftTime = startTime;\r\n        }\r\n\r\n        uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval;\r\n        uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval;\r\n\r\n        uint256 rightInterval = (rightTime - startTime) % rateInterval;\r\n        uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval;\r\n\r\n        if(leftTime + leftInterval > rightTime) {\r\n            return _getRewardRate(leftTime);\r\n        }\r\n\r\n        uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval;\r\n        uint256 startReward = _getRemainPool(leftTime); \r\n        uint256 midTotalReward = 0;\r\n        uint256 nextReward = 0;\r\n        uint256 value = startReward;\r\n        uint256 times = midInterval / rateInterval;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            nextReward = value * rateIntervalNumerator / rateIntervalDenominator;\r\n            value = value - nextReward;\r\n            midTotalReward += nextReward;\r\n        }\r\n        return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime);\r\n    }\r\n\r\n\r\n    function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalPowers = _totalPowers.add(amount);\r\n        _balances[user] = _balances[user].add(amount);\r\n        emit Staked(user, amount);\r\n    }\r\n\r\n\r\n\r\n    function getReward() external nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            claimedBalances[msg.sender] += reward;\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function setRewardToken(address token) external onlyOwner {\r\n        rewardsToken = IERC20(token);\r\n    }\r\n\r\n\r\n\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n    function emergencyWithdraw() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"inviter_presell/adminable.sol": {
				"content": "\r\npragma solidity ^0.8.16;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Adminable is Context {\r\n    mapping(address => bool) private _admins;\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ModificationAdmin(address indexed admin, bool oldState, bool newState);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Adminable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function isAdmin(address account) public view virtual returns (bool) {\r\n        return _admins[account];\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    function modificationAdmin(address admin, bool state) public virtual onlyOwner {\r\n        emit ModificationAdmin(admin,  _admins[admin], state);\r\n        _admins[admin] = state;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"inviter_presell/adminable.sol": {
				"Adminable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Adminable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/stake.sol": {
				"StakingRewards": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "claimedBalances",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "curTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRemainPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "leftTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rightTime",
									"type": "uint256"
								}
							],
							"name": "getTimeWeightedAveRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "powersOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalNumerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rateInterval",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rateIntervalNumerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rateIntervalDenominator",
									"type": "uint256"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPowers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/stake.sol\":371:7917  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n    /* \"inviter_presell/stake.sol\":581:598  168000 * 10 ** 18 */\n  0x23934c5a09da19000000\n    /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n  0x05\n  sstore\n    /* \"inviter_presell/stake.sol\":666:676  10 minutes */\n  0x0258\n    /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n  0x07\n  sstore\n    /* \"inviter_presell/stake.sol\":722:723  5 */\n  0x05\n    /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n  0x08\n  sstore\n    /* \"inviter_presell/stake.sol\":771:775  1000 */\n  0x03e8\n    /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n  0x09\n  sstore\n    /* \"inviter_presell/stake.sol\":371:7917  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  tag_6\n    /* \"inviter_presell/adminable.sol\":622:632  _msgSender */\n  shl(0x20, tag_7)\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"inviter_presell/adminable.sol\":603:621  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/stake.sol\":371:7917  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"inviter_presell/adminable.sol\":116:123  address */\n  0x00\n    /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n  caller\n    /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n  0x00\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n  0x01\n  0x00\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n  pop\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"inviter_presell/stake.sol\":371:7917  contract StakingRewards is Adminable , ReentrancyGuard{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/stake.sol\":371:7917  contract StakingRewards is Adminable , ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8107368b\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xb79ec812\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd42b779d\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xd42b779d\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xda4f8431\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0xb79ec812\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xcdda56e0\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_32\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9499c549\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9a5b17b0\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa4c3b091\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_28\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x8107368b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x874c120b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8aee8127\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x3e0a322d\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x6917c501\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x6917c501\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7a6fcee7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x3e0a322d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4dbdc4eb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5cfa91f4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6139d4b4\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x18e20ecf\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x18e20ecf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3c4045cf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x129ee21a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/stake.sol\":5005:5301  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      tag_48\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_5:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1737:2029  function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {... */\n    tag_6:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_7:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_8:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_9:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7044:7401  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_10:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"inviter_presell/stake.sol\":2037:2159  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_11:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"inviter_presell/stake.sol\":3687:4171  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_12:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2611:3182  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_13:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n    tag_14:\n      tag_88\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_90\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2167:2260  function totalPowers() external view returns (uint256) {... */\n    tag_15:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_94\n      tag_95\n      jump\t// in\n    tag_94:\n      stop\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_17:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_18:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4534:4641  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_19:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":961:1014  mapping(address => uint256) public userLastUpdateTime */\n    tag_20:\n      tag_105\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_108\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4649:4997  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_21:\n      tag_109\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_110\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_110:\n      tag_111\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      tag_112\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_112:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7409:7514  function setRewardToken(address token) external onlyOwner {... */\n    tag_22:\n      tag_113\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_114\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_114:\n      tag_115\n      jump\t// in\n    tag_113:\n      stop\n        /* \"inviter_presell/stake.sol\":897:954  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_23:\n      tag_116\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_117\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_117:\n      tag_118\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_24:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2489:2603  function getCurRewardPool() public view returns (uint256) {... */\n    tag_25:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2268:2362  function curTime() external  view  returns (uint256) {... */\n    tag_26:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7771:7914  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_27:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      tag_133\n      jump\t// in\n    tag_130:\n      stop\n        /* \"inviter_presell/stake.sol\":6738:7032  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_28:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"inviter_presell/stake.sol\":2370:2481  function powersOf(address account) external view returns (uint256) {... */\n    tag_29:\n      tag_137\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_138\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_138:\n      tag_139\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_30:\n      tag_141\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_143\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4179:4294  function getCurRewardRate() public view returns (uint256) {... */\n    tag_31:\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_32:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1073:1123  mapping(address => uint256) public claimedBalances */\n    tag_33:\n      tag_151\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_152\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":5344:6728  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_34:\n      tag_155\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_156\n      swap2\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      tag_158\n      jump\t// in\n    tag_155:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7648:7763  function emergencyWithdraw() external onlyOwner {... */\n    tag_35:\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n      stop\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_36:\n      tag_162\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      tag_164\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      tag_165\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_166:\n      tag_167\n      jump\t// in\n    tag_165:\n      stop\n        /* \"inviter_presell/stake.sol\":5005:5301  function earned(address account) public view returns (uint256) {... */\n    tag_48:\n        /* \"inviter_presell/stake.sol\":5059:5066  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5079:5091  uint256 rate */\n      dup1\n        /* \"inviter_presell/stake.sol\":5094:5162  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_169\n        /* \"inviter_presell/stake.sol\":5117:5135  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":5117:5144  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5136:5143  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":5117:5144  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5146:5161  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":5094:5116  getTimeWeightedAveRate */\n      tag_158\n        /* \"inviter_presell/stake.sol\":5094:5162  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_169:\n        /* \"inviter_presell/stake.sol\":5079:5162  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5180:5293  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_170\n        /* \"inviter_presell/stake.sol\":5276:5283  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":5276:5292  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5284:5291  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":5276:5292  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5180:5271  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_171\n        /* \"inviter_presell/stake.sol\":5266:5270  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":5180:5261  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      tag_172\n        /* \"inviter_presell/stake.sol\":5203:5260  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      tag_173\n        /* \"inviter_presell/stake.sol\":5228:5250  userRewardPerTokenPaid */\n      0x0d\n        /* \"inviter_presell/stake.sol\":5228:5259  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5251:5258  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":5228:5259  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5203:5223  rewardPerToken(rate) */\n      tag_174\n        /* \"inviter_presell/stake.sol\":5218:5222  rate */\n      dup9\n        /* \"inviter_presell/stake.sol\":5203:5217  rewardPerToken */\n      tag_111\n        /* \"inviter_presell/stake.sol\":5203:5223  rewardPerToken(rate) */\n      jump\t// in\n    tag_174:\n        /* \"inviter_presell/stake.sol\":5203:5227  rewardPerToken(rate).sub */\n      tag_175\n      swap1\n        /* \"inviter_presell/stake.sol\":5203:5260  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_173:\n        /* \"inviter_presell/stake.sol\":5180:5189  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":5180:5198  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5190:5197  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":5180:5198  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5180:5202  _balances[account].mul */\n      tag_176\n      swap1\n        /* \"inviter_presell/stake.sol\":5180:5261  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_172:\n        /* \"inviter_presell/stake.sol\":5180:5265  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div */\n      tag_177\n      swap1\n        /* \"inviter_presell/stake.sol\":5180:5271  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_171:\n        /* \"inviter_presell/stake.sol\":5180:5275  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_178\n      swap1\n        /* \"inviter_presell/stake.sol\":5180:5293  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_170:\n        /* \"inviter_presell/stake.sol\":5173:5293  return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":5005:5301  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_53:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_56:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1737:2029  function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {... */\n    tag_61:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_180\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_182\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_121\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_182:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \"inviter_presell/stake.sol\":1890:1903  _rateInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":1875:1887  rateInterval */\n      0x07\n        /* \"inviter_presell/stake.sol\":1875:1903  rateInterval = _rateInterval */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1938:1960  _rateIntervalNumerator */\n      dup2\n        /* \"inviter_presell/stake.sol\":1914:1935  rateIntervalNumerator */\n      0x08\n        /* \"inviter_presell/stake.sol\":1914:1960  rateIntervalNumerator = _rateIntervalNumerator */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1997:2021  _rateIntervalDenominator */\n      dup1\n        /* \"inviter_presell/stake.sol\":1971:1994  rateIntervalDenominator */\n      0x09\n        /* \"inviter_presell/stake.sol\":1971:2021  rateIntervalDenominator = _rateIntervalDenominator */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1737:2029  function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_65:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_188\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_188:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_189\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_121\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_189:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_190\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_191\n      swap1\n      tag_185\n      jump\t// in\n    tag_191:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_190:\n        /* \"inviter_presell/adminable.sol\":1755:1760  admin */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854\n        /* \"inviter_presell/adminable.sol\":1763:1770  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1771:1776  admin */\n      dup6\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1779:1784  state */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      mload(0x40)\n      tag_193\n      swap3\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/adminable.sol\":1813:1818  state */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1796:1803  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1804:1809  admin */\n      dup5\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1818  _admins[admin] = state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_68:\n        /* \"inviter_presell/adminable.sol\":1067:1071  bool */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1091:1098  _admins */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1099:1106  account */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1084:1107  return _admins[account] */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_72:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7044:7401  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_75:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7100:7110  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1186:1198  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1201:1219  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1201:1228  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1220:1227  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1201:1228  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1186:1228  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1250:1259  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1242:1246  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1242:1259  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1239:1304  if(time <= startTime) {... */\n      tag_201\n      jumpi\n        /* \"inviter_presell/stake.sol\":1283:1292  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1276:1292  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1239:1304  if(time <= startTime) {... */\n    tag_201:\n        /* \"inviter_presell/stake.sol\":1314:1326  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1329:1374  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_202\n        /* \"inviter_presell/stake.sol\":1352:1356  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1358:1373  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1329:1351  getTimeWeightedAveRate */\n      tag_158\n        /* \"inviter_presell/stake.sol\":1329:1374  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_202:\n        /* \"inviter_presell/stake.sol\":1314:1374  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1408:1428  rewardPerToken(rate) */\n      tag_203\n        /* \"inviter_presell/stake.sol\":1423:1427  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1408:1422  rewardPerToken */\n      tag_111\n        /* \"inviter_presell/stake.sol\":1408:1428  rewardPerToken(rate) */\n      jump\t// in\n    tag_203:\n        /* \"inviter_presell/stake.sol\":1385:1405  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1385:1428  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1456:1482  lastTimeRewardApplicable() */\n      tag_204\n        /* \"inviter_presell/stake.sol\":1456:1480  lastTimeRewardApplicable */\n      tag_103\n        /* \"inviter_presell/stake.sol\":1456:1482  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_204:\n        /* \"inviter_presell/stake.sol\":1439:1453  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1439:1482  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1516:1517  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1497:1518  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1497:1504  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1497:1518  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1493:1710  if (account != address(0)) {... */\n      tag_205\n      jumpi\n        /* \"inviter_presell/stake.sol\":1554:1569  earned(account) */\n      tag_206\n        /* \"inviter_presell/stake.sol\":1561:1568  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1554:1560  earned */\n      tag_48\n        /* \"inviter_presell/stake.sol\":1554:1569  earned(account) */\n      jump\t// in\n    tag_206:\n        /* \"inviter_presell/stake.sol\":1535:1542  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1535:1551  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1543:1550  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1535:1551  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1535:1569  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1618:1638  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1584:1606  userRewardPerTokenPaid */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1584:1615  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1607:1614  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1584:1615  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1584:1638  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1683:1698  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1653:1671  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1653:1680  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1672:1679  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1653:1680  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1653:1698  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1493:1710  if (account != address(0)) {... */\n    tag_205:\n        /* \"inviter_presell/stake.sol\":7123:7137  uint256 reward */\n      0x00\n        /* \"inviter_presell/stake.sol\":7140:7147  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":7140:7159  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":7148:7158  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7140:7159  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":7123:7159  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":7183:7184  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":7174:7180  reward */\n      dup2\n        /* \"inviter_presell/stake.sol\":7174:7184  reward > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":7170:7394  if (reward > 0) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"inviter_presell/stake.sol\":7232:7238  reward */\n      dup1\n        /* \"inviter_presell/stake.sol\":7201:7216  claimedBalances */\n      0x10\n        /* \"inviter_presell/stake.sol\":7201:7228  claimedBalances[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":7217:7227  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7201:7228  claimedBalances[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"inviter_presell/stake.sol\":7201:7238  claimedBalances[msg.sender] += reward */\n      dup3\n      dup3\n      sload\n      tag_209\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7275:7276  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":7253:7260  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":7253:7272  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":7261:7271  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7253:7272  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":7253:7276  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7291:7303  rewardsToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":7291:7312  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":7313:7323  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7325:7331  reward */\n      dup4\n        /* \"inviter_presell/stake.sol\":7291:7332  rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_214\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_214:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_215\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      pop\n        /* \"inviter_presell/stake.sol\":7363:7373  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7352:7382  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"inviter_presell/stake.sol\":7375:7381  reward */\n      dup3\n        /* \"inviter_presell/stake.sol\":7352:7382  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_217\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_217:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":7170:7394  if (reward > 0) {... */\n    tag_208:\n        /* \"inviter_presell/stake.sol\":7112:7401  {... */\n      pop\n        /* \"inviter_presell/stake.sol\":1175:1729  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2484:2485  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7044:7401  function getReward() external nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2037:2159  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_79:\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_219\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_220\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_220:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_68\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_219:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"inviter_presell/stake.sol\":2115:2119  time */\n      dup1\n        /* \"inviter_presell/stake.sol\":2103:2112  startTime */\n      0x06\n        /* \"inviter_presell/stake.sol\":2103:2119  startTime = time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":2147:2151  time */\n      dup1\n        /* \"inviter_presell/stake.sol\":2130:2144  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":2130:2151  lastUpdateTime = time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":2037:2159  function setStartTime(uint256 time) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3687:4171  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_82:\n        /* \"inviter_presell/stake.sol\":3745:3752  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3781:3782  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":3768:3777  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3768:3782  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":3765:3827  if(startTime == 0) {... */\n      tag_226\n      jumpi\n        /* \"inviter_presell/stake.sol\":3806:3815  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3799:3815  return startTime */\n      swap1\n      pop\n      jump(tag_225)\n        /* \"inviter_presell/stake.sol\":3765:3827  if(startTime == 0) {... */\n    tag_226:\n        /* \"inviter_presell/stake.sol\":3849:3858  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3842:3846  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":3842:3858  time < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":3839:3895  if(time < startTime) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"inviter_presell/stake.sol\":3882:3883  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3875:3883  return 0 */\n      swap1\n      pop\n      jump(tag_225)\n        /* \"inviter_presell/stake.sol\":3839:3895  if(time < startTime) {... */\n    tag_227:\n        /* \"inviter_presell/stake.sol\":3905:3918  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":3957:3958  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":3942:3954  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3929:3938  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3922:3926  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":3922:3938  time - startTime */\n      tag_228\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_228:\n        /* \"inviter_presell/stake.sol\":3921:3954  (time - startTime) / rateInterval */\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"inviter_presell/stake.sol\":3921:3958  (time - startTime) / rateInterval + 1 */\n      tag_232\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_232:\n        /* \"inviter_presell/stake.sol\":3905:3958  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3969:3982  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":3985:3997  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":3969:3997  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4012:4021  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":4008:4141  for(uint256 i = 0; i < times; ++i) {... */\n    tag_233:\n        /* \"inviter_presell/stake.sol\":4031:4036  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":4027:4028  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":4027:4036  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":4008:4141  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_234\n      jumpi\n        /* \"inviter_presell/stake.sol\":4106:4129  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":4082:4103  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":4074:4079  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":4074:4103  value * rateIntervalNumerator */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"inviter_presell/stake.sol\":4074:4129  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_238\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_238:\n        /* \"inviter_presell/stake.sol\":4066:4071  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":4066:4129  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_239\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_239:\n        /* \"inviter_presell/stake.sol\":4058:4129  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":4038:4041  ++i */\n      dup1\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4008:4141  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_233)\n    tag_234:\n      pop\n        /* \"inviter_presell/stake.sol\":4158:4163  value */\n      dup1\n        /* \"inviter_presell/stake.sol\":4151:4163  return value */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3687:4171  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_225:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2611:3182  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_86:\n        /* \"inviter_presell/stake.sol\":2669:2676  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2705:2706  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":2692:2701  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2692:2706  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2689:2754  if(startTime == 0) {... */\n      tag_243\n      jumpi\n        /* \"inviter_presell/stake.sol\":2730:2742  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2723:2742  return totalRewards */\n      swap1\n      pop\n      jump(tag_242)\n        /* \"inviter_presell/stake.sol\":2689:2754  if(startTime == 0) {... */\n    tag_243:\n        /* \"inviter_presell/stake.sol\":2774:2783  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2767:2771  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":2767:2783  time < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":2764:2820  if(time < startTime) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"inviter_presell/stake.sol\":2807:2808  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2800:2808  return 0 */\n      swap1\n      pop\n      jump(tag_242)\n        /* \"inviter_presell/stake.sol\":2764:2820  if(time < startTime) {... */\n    tag_244:\n        /* \"inviter_presell/stake.sol\":2830:2843  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2882:2883  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2867:2879  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2854:2863  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2847:2851  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":2847:2863  time - startTime */\n      tag_245\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_245:\n        /* \"inviter_presell/stake.sol\":2846:2879  (time - startTime) / rateInterval */\n      tag_246\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_246:\n        /* \"inviter_presell/stake.sol\":2846:2883  (time - startTime) / rateInterval + 1 */\n      tag_247\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_247:\n        /* \"inviter_presell/stake.sol\":2830:2883  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2894:2907  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2910:2922  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2894:2922  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2937:2946  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":2933:3066  for(uint256 i = 0; i < times; ++i) {... */\n    tag_248:\n        /* \"inviter_presell/stake.sol\":2956:2961  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2952:2953  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2952:2961  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2933:3066  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_249\n      jumpi\n        /* \"inviter_presell/stake.sol\":3031:3054  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3007:3028  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2999:3004  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2999:3028  value * rateIntervalNumerator */\n      tag_251\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_251:\n        /* \"inviter_presell/stake.sol\":2999:3054  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_252\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_252:\n        /* \"inviter_presell/stake.sol\":2991:2996  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2991:3054  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_253\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_253:\n        /* \"inviter_presell/stake.sol\":2983:3054  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2963:2966  ++i */\n      dup1\n      tag_254\n      swap1\n      tag_241\n      jump\t// in\n    tag_254:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2933:3066  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_248)\n    tag_249:\n      pop\n        /* \"inviter_presell/stake.sol\":3113:3174  value.mul(rateIntervalNumerator).div(rateIntervalDenominator) */\n      tag_255\n        /* \"inviter_presell/stake.sol\":3150:3173  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3113:3145  value.mul(rateIntervalNumerator) */\n      tag_256\n        /* \"inviter_presell/stake.sol\":3123:3144  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":3113:3118  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":3113:3122  value.mul */\n      tag_176\n      swap1\n        /* \"inviter_presell/stake.sol\":3113:3145  value.mul(rateIntervalNumerator) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"inviter_presell/stake.sol\":3113:3149  value.mul(rateIntervalNumerator).div */\n      tag_177\n      swap1\n        /* \"inviter_presell/stake.sol\":3113:3174  value.mul(rateIntervalNumerator).div(rateIntervalDenominator) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"inviter_presell/stake.sol\":3106:3174  return value.mul(rateIntervalNumerator).div(rateIntervalDenominator) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2611:3182  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_242:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n    tag_89:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2167:2260  function totalPowers() external view returns (uint256) {... */\n    tag_92:\n        /* \"inviter_presell/stake.sol\":2213:2220  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2240:2252  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":2233:2252  return _totalPowers */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2167:2260  function totalPowers() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_95:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_259\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_260\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_121\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_260:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_185\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      tag_264\n        /* \"inviter_presell/adminable.sol\":1215:1216  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1188:1206  _transferOwnership */\n      tag_265\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_264:\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_97:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_100:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4534:4641  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_103:\n        /* \"inviter_presell/stake.sol\":4591:4598  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4618:4633  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4611:4633  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4534:4641  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":961:1014  mapping(address => uint256) public userLastUpdateTime */\n    tag_107:\n      mstore(0x20, 0x0e)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4649:4997  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_111:\n        /* \"inviter_presell/stake.sol\":4714:4721  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4754:4755  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":4738:4750  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":4738:4755  _totalPowers == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":4734:4811  if (_totalPowers == 0) {... */\n      tag_268\n      jumpi\n        /* \"inviter_presell/stake.sol\":4779:4799  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4772:4799  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_267)\n        /* \"inviter_presell/stake.sol\":4734:4811  if (_totalPowers == 0) {... */\n    tag_268:\n        /* \"inviter_presell/stake.sol\":4841:4989  rewardPerTokenStored.add(... */\n      tag_269\n        /* \"inviter_presell/stake.sol\":4884:4974  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      tag_270\n        /* \"inviter_presell/stake.sol\":4961:4973  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":4884:4956  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_271\n        /* \"inviter_presell/stake.sol\":4951:4955  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":4884:4946  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_272\n        /* \"inviter_presell/stake.sol\":4935:4945  rewardRate */\n      dup8\n        /* \"inviter_presell/stake.sol\":4884:4930  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_273\n        /* \"inviter_presell/stake.sol\":4915:4929  lastUpdateTime */\n      sload(0x0a)\n        /* \"inviter_presell/stake.sol\":4884:4910  lastTimeRewardApplicable() */\n      tag_274\n        /* \"inviter_presell/stake.sol\":4884:4908  lastTimeRewardApplicable */\n      tag_103\n        /* \"inviter_presell/stake.sol\":4884:4910  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_274:\n        /* \"inviter_presell/stake.sol\":4884:4914  lastTimeRewardApplicable().sub */\n      tag_175\n      swap1\n        /* \"inviter_presell/stake.sol\":4884:4930  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_273:\n        /* \"inviter_presell/stake.sol\":4884:4934  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_176\n      swap1\n        /* \"inviter_presell/stake.sol\":4884:4946  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_272:\n        /* \"inviter_presell/stake.sol\":4884:4950  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_176\n      swap1\n        /* \"inviter_presell/stake.sol\":4884:4956  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_271:\n        /* \"inviter_presell/stake.sol\":4884:4960  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_177\n      swap1\n        /* \"inviter_presell/stake.sol\":4884:4974  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_270:\n        /* \"inviter_presell/stake.sol\":4841:4861  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4841:4865  rewardPerTokenStored.add */\n      tag_178\n      swap1\n        /* \"inviter_presell/stake.sol\":4841:4989  rewardPerTokenStored.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_269:\n        /* \"inviter_presell/stake.sol\":4821:4989  return... */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4649:4997  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_267:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7409:7514  function setRewardToken(address token) external onlyOwner {... */\n    tag_115:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_276\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_276:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_277\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_121\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_277:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_185\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"inviter_presell/stake.sol\":7500:7505  token */\n      dup1\n        /* \"inviter_presell/stake.sol\":7478:7490  rewardsToken */\n      0x03\n      0x00\n        /* \"inviter_presell/stake.sol\":7478:7506  rewardsToken = IERC20(token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7409:7514  function setRewardToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":897:954  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_118:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_121:\n        /* \"inviter_presell/adminable.sol\":955:962  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":975:988  return _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2489:2603  function getCurRewardPool() public view returns (uint256) {... */\n    tag_125:\n        /* \"inviter_presell/stake.sol\":2538:2545  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2565:2595  getRewardPool(block.timestamp) */\n      tag_283\n        /* \"inviter_presell/stake.sol\":2579:2594  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2565:2578  getRewardPool */\n      tag_86\n        /* \"inviter_presell/stake.sol\":2565:2595  getRewardPool(block.timestamp) */\n      jump\t// in\n    tag_283:\n        /* \"inviter_presell/stake.sol\":2558:2595  return getRewardPool(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2489:2603  function getCurRewardPool() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2268:2362  function curTime() external  view  returns (uint256) {... */\n    tag_128:\n        /* \"inviter_presell/stake.sol\":2312:2319  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2339:2354  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2332:2354  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2268:2362  function curTime() external  view  returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7771:7914  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_133:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_286\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_286:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_287\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_121\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_287:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_289\n      swap1\n      tag_185\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_288:\n        /* \"inviter_presell/stake.sol\":7871:7876  token */\n      dup2\n        /* \"inviter_presell/stake.sol\":7864:7886  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":7887:7897  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7899:7905  amount */\n      dup4\n        /* \"inviter_presell/stake.sol\":7864:7906  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_291:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_293\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_293:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_294\n      swap2\n      swap1\n      tag_216\n      jump\t// in\n    tag_294:\n      pop\n        /* \"inviter_presell/stake.sol\":7771:7914  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6738:7032  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_136:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_199\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_299\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_300\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_300:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_68\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_299:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_223\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"inviter_presell/stake.sol\":6828:6832  user */\n      dup2\n        /* \"inviter_presell/stake.sol\":1186:1198  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1201:1219  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1201:1228  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1220:1227  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1201:1228  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1186:1228  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1250:1259  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1242:1246  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1242:1259  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1239:1304  if(time <= startTime) {... */\n      tag_304\n      jumpi\n        /* \"inviter_presell/stake.sol\":1283:1292  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1276:1292  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1239:1304  if(time <= startTime) {... */\n    tag_304:\n        /* \"inviter_presell/stake.sol\":1314:1326  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1329:1374  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_305\n        /* \"inviter_presell/stake.sol\":1352:1356  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1358:1373  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1329:1351  getTimeWeightedAveRate */\n      tag_158\n        /* \"inviter_presell/stake.sol\":1329:1374  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_305:\n        /* \"inviter_presell/stake.sol\":1314:1374  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1408:1428  rewardPerToken(rate) */\n      tag_306\n        /* \"inviter_presell/stake.sol\":1423:1427  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1408:1422  rewardPerToken */\n      tag_111\n        /* \"inviter_presell/stake.sol\":1408:1428  rewardPerToken(rate) */\n      jump\t// in\n    tag_306:\n        /* \"inviter_presell/stake.sol\":1385:1405  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1385:1428  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1456:1482  lastTimeRewardApplicable() */\n      tag_307\n        /* \"inviter_presell/stake.sol\":1456:1480  lastTimeRewardApplicable */\n      tag_103\n        /* \"inviter_presell/stake.sol\":1456:1482  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_307:\n        /* \"inviter_presell/stake.sol\":1439:1453  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1439:1482  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1516:1517  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1497:1518  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1497:1504  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1497:1518  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1493:1710  if (account != address(0)) {... */\n      tag_308\n      jumpi\n        /* \"inviter_presell/stake.sol\":1554:1569  earned(account) */\n      tag_309\n        /* \"inviter_presell/stake.sol\":1561:1568  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1554:1560  earned */\n      tag_48\n        /* \"inviter_presell/stake.sol\":1554:1569  earned(account) */\n      jump\t// in\n    tag_309:\n        /* \"inviter_presell/stake.sol\":1535:1542  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1535:1551  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1543:1550  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1535:1551  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1535:1569  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1618:1638  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1584:1606  userRewardPerTokenPaid */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1584:1615  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1607:1614  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1584:1615  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1584:1638  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1683:1698  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1653:1671  userLastUpdateTime */\n      0x0e\n        /* \"inviter_presell/stake.sol\":1653:1680  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1672:1679  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1653:1680  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1653:1698  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1493:1710  if (account != address(0)) {... */\n    tag_308:\n        /* \"inviter_presell/stake.sol\":6862:6863  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6853:6859  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6853:6863  amount > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":6845:6882  require(amount > 0, \"Cannot stake 0\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_312\n      swap1\n      tag_313\n      jump\t// in\n    tag_312:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_311:\n        /* \"inviter_presell/stake.sol\":6908:6932  _totalPowers.add(amount) */\n      tag_314\n        /* \"inviter_presell/stake.sol\":6925:6931  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6908:6920  _totalPowers */\n      sload(0x0c)\n        /* \"inviter_presell/stake.sol\":6908:6924  _totalPowers.add */\n      tag_178\n      swap1\n        /* \"inviter_presell/stake.sol\":6908:6932  _totalPowers.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_314:\n        /* \"inviter_presell/stake.sol\":6893:6905  _totalPowers */\n      0x0c\n        /* \"inviter_presell/stake.sol\":6893:6932  _totalPowers = _totalPowers.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6961:6988  _balances[user].add(amount) */\n      tag_315\n        /* \"inviter_presell/stake.sol\":6981:6987  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6961:6970  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":6961:6976  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6971:6975  user */\n      dup9\n        /* \"inviter_presell/stake.sol\":6961:6976  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6961:6980  _balances[user].add */\n      tag_178\n      swap1\n        /* \"inviter_presell/stake.sol\":6961:6988  _balances[user].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_315:\n        /* \"inviter_presell/stake.sol\":6943:6952  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":6943:6958  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6953:6957  user */\n      dup8\n        /* \"inviter_presell/stake.sol\":6943:6958  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":6943:6988  _balances[user] = _balances[user].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7011:7015  user */\n      dup5\n        /* \"inviter_presell/stake.sol\":7004:7024  Staked(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"inviter_presell/stake.sol\":7017:7023  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":7004:7024  Staked(user, amount) */\n      mload(0x40)\n      tag_316\n      swap2\n      swap1\n      tag_50\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":1175:1729  {... */\n      pop\n      pop\n        /* \"inviter_presell/adminable.sol\":892:893  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6738:7032  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2370:2481  function powersOf(address account) external view returns (uint256) {... */\n    tag_139:\n        /* \"inviter_presell/stake.sol\":2428:2435  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2455:2464  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":2455:2473  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":2465:2472  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":2455:2473  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":2448:2473  return _balances[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2370:2481  function powersOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_142:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4179:4294  function getCurRewardRate() public view returns (uint256) {... */\n    tag_145:\n        /* \"inviter_presell/stake.sol\":4228:4235  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4255:4286  _getRewardRate(block.timestamp) */\n      tag_319\n        /* \"inviter_presell/stake.sol\":4270:4285  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4255:4269  _getRewardRate */\n      tag_320\n        /* \"inviter_presell/stake.sol\":4255:4286  _getRewardRate(block.timestamp) */\n      jump\t// in\n    tag_319:\n        /* \"inviter_presell/stake.sol\":4248:4286  return _getRewardRate(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4179:4294  function getCurRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_148:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1073:1123  mapping(address => uint256) public claimedBalances */\n    tag_153:\n      mstore(0x20, 0x10)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":5344:6728  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_158:\n        /* \"inviter_presell/stake.sol\":5434:5441  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5479:5480  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":5466:5475  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5466:5480  startTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":5466:5505  startTime == 0 || leftTime >= rightTime */\n      dup1\n      tag_322\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":5496:5505  rightTime */\n      dup2\n        /* \"inviter_presell/stake.sol\":5484:5492  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5484:5505  leftTime >= rightTime */\n      lt\n      iszero\n        /* \"inviter_presell/stake.sol\":5466:5505  startTime == 0 || leftTime >= rightTime */\n    tag_322:\n        /* \"inviter_presell/stake.sol\":5466:5522  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n      dup1\n      tag_323\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":5521:5522  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5509:5517  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5509:5522  leftTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":5466:5522  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n    tag_323:\n        /* \"inviter_presell/stake.sol\":5463:5559  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"inviter_presell/stake.sol\":5546:5547  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5539:5547  return 0 */\n      swap1\n      pop\n      jump(tag_321)\n        /* \"inviter_presell/stake.sol\":5463:5559  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n    tag_324:\n        /* \"inviter_presell/stake.sol\":5585:5594  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5574:5582  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5574:5594  leftTime < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":5571:5643  if(leftTime < startTime) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"inviter_presell/stake.sol\":5622:5631  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5611:5631  leftTime = startTime */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":5571:5643  if(leftTime < startTime) {... */\n    tag_325:\n        /* \"inviter_presell/stake.sol\":5655:5675  uint256 leftInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5735:5747  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5719:5731  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5706:5715  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5695:5703  leftTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5695:5715  leftTime - startTime */\n      tag_326\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_326:\n        /* \"inviter_presell/stake.sol\":5694:5731  (leftTime - startTime) % rateInterval */\n      tag_327\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_327:\n        /* \"inviter_presell/stake.sol\":5679:5691  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5679:5731  rateInterval - (leftTime - startTime) % rateInterval */\n      tag_329\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_329:\n        /* \"inviter_presell/stake.sol\":5678:5747  (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      tag_330\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_330:\n        /* \"inviter_presell/stake.sol\":5655:5747  uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5758:5776  uint256 leftReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5820:5832  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5805:5817  leftInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5779:5802  getRewardPool(leftTime) */\n      tag_331\n        /* \"inviter_presell/stake.sol\":5793:5801  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5779:5792  getRewardPool */\n      tag_86\n        /* \"inviter_presell/stake.sol\":5779:5802  getRewardPool(leftTime) */\n      jump\t// in\n    tag_331:\n        /* \"inviter_presell/stake.sol\":5779:5817  getRewardPool(leftTime) * leftInterval */\n      tag_332\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_332:\n        /* \"inviter_presell/stake.sol\":5779:5832  getRewardPool(leftTime) * leftInterval / rateInterval */\n      tag_333\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_333:\n        /* \"inviter_presell/stake.sol\":5758:5832  uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5845:5866  uint256 rightInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5895:5907  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5882:5891  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5870:5879  rightTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5870:5891  rightTime - startTime */\n      tag_334\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_334:\n        /* \"inviter_presell/stake.sol\":5869:5907  (rightTime - startTime) % rateInterval */\n      tag_335\n      swap2\n      swap1\n      tag_328\n      jump\t// in\n    tag_335:\n        /* \"inviter_presell/stake.sol\":5845:5907  uint256 rightInterval = (rightTime - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5918:5937  uint256 rightReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5983:5995  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5967:5980  rightInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5940:5964  getRewardPool(rightTime) */\n      tag_336\n        /* \"inviter_presell/stake.sol\":5954:5963  rightTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5940:5953  getRewardPool */\n      tag_86\n        /* \"inviter_presell/stake.sol\":5940:5964  getRewardPool(rightTime) */\n      jump\t// in\n    tag_336:\n        /* \"inviter_presell/stake.sol\":5940:5980  getRewardPool(rightTime) * rightInterval */\n      tag_337\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_337:\n        /* \"inviter_presell/stake.sol\":5940:5995  getRewardPool(rightTime) * rightInterval / rateInterval */\n      tag_338\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_338:\n        /* \"inviter_presell/stake.sol\":5918:5995  uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6037:6046  rightTime */\n      dup6\n        /* \"inviter_presell/stake.sol\":6022:6034  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":6011:6019  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":6011:6034  leftTime + leftInterval */\n      tag_339\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_339:\n        /* \"inviter_presell/stake.sol\":6011:6046  leftTime + leftInterval > rightTime */\n      gt\n        /* \"inviter_presell/stake.sol\":6008:6106  if(leftTime + leftInterval > rightTime) {... */\n      iszero\n      tag_340\n      jumpi\n        /* \"inviter_presell/stake.sol\":6070:6094  _getRewardRate(leftTime) */\n      tag_341\n        /* \"inviter_presell/stake.sol\":6085:6093  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":6070:6084  _getRewardRate */\n      tag_320\n        /* \"inviter_presell/stake.sol\":6070:6094  _getRewardRate(leftTime) */\n      jump\t// in\n    tag_341:\n        /* \"inviter_presell/stake.sol\":6063:6094  return _getRewardRate(leftTime) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_321)\n        /* \"inviter_presell/stake.sol\":6008:6106  if(leftTime + leftInterval > rightTime) {... */\n    tag_340:\n        /* \"inviter_presell/stake.sol\":6118:6137  uint256 midInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":6179:6191  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":6168:6176  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":6152:6165  rightInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":6140:6149  rightTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":6140:6165  rightTime - rightInterval */\n      tag_342\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_342:\n        /* \"inviter_presell/stake.sol\":6140:6176  rightTime - rightInterval - leftTime */\n      tag_343\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_343:\n        /* \"inviter_presell/stake.sol\":6140:6191  rightTime - rightInterval - leftTime - leftInterval */\n      tag_344\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_344:\n        /* \"inviter_presell/stake.sol\":6118:6191  uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6202:6221  uint256 startReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":6224:6248  _getRemainPool(leftTime) */\n      tag_345\n        /* \"inviter_presell/stake.sol\":6239:6247  leftTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":6224:6238  _getRemainPool */\n      tag_346\n        /* \"inviter_presell/stake.sol\":6224:6248  _getRemainPool(leftTime) */\n      jump\t// in\n    tag_345:\n        /* \"inviter_presell/stake.sol\":6202:6248  uint256 startReward = _getRemainPool(leftTime) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6260:6282  uint256 midTotalReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":6297:6315  uint256 nextReward */\n      dup1\n        /* \"inviter_presell/stake.sol\":6330:6343  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":6346:6357  startReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6330:6357  uint256 value = startReward */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6368:6381  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":6398:6410  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":6384:6395  midInterval */\n      dup7\n        /* \"inviter_presell/stake.sol\":6384:6410  midInterval / rateInterval */\n      tag_347\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_347:\n        /* \"inviter_presell/stake.sol\":6368:6410  uint256 times = midInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6425:6434  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":6421:6635  for(uint256 i = 0; i < times; ++i) {... */\n    tag_348:\n        /* \"inviter_presell/stake.sol\":6444:6449  times */\n      dup2\n        /* \"inviter_presell/stake.sol\":6440:6441  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":6440:6449  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":6421:6635  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_349\n      jumpi\n        /* \"inviter_presell/stake.sol\":6516:6539  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":6492:6513  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":6484:6489  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":6484:6513  value * rateIntervalNumerator */\n      tag_351\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_351:\n        /* \"inviter_presell/stake.sol\":6484:6539  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_352\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_352:\n        /* \"inviter_presell/stake.sol\":6471:6539  nextReward = value * rateIntervalNumerator / rateIntervalDenominator */\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":6570:6580  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6562:6567  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":6562:6580  value - nextReward */\n      tag_353\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_353:\n        /* \"inviter_presell/stake.sol\":6554:6580  value = value - nextReward */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":6613:6623  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6595:6623  midTotalReward += nextReward */\n      dup6\n      tag_354\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_354:\n      swap5\n      pop\n        /* \"inviter_presell/stake.sol\":6451:6454  ++i */\n      dup1\n      tag_355\n      swap1\n      tag_241\n      jump\t// in\n    tag_355:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6421:6635  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_348)\n    tag_349:\n      pop\n        /* \"inviter_presell/stake.sol\":6711:6719  leftTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6699:6708  rightTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6699:6719  rightTime - leftTime */\n      tag_356\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_356:\n        /* \"inviter_presell/stake.sol\":6683:6694  rightReward */\n      dup8\n        /* \"inviter_presell/stake.sol\":6670:6680  leftReward */\n      dup11\n        /* \"inviter_presell/stake.sol\":6653:6667  midTotalReward */\n      dup7\n        /* \"inviter_presell/stake.sol\":6653:6680  midTotalReward + leftReward */\n      tag_357\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_357:\n        /* \"inviter_presell/stake.sol\":6653:6694  midTotalReward + leftReward + rightReward */\n      tag_358\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_358:\n        /* \"inviter_presell/stake.sol\":6652:6720  (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      tag_359\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_359:\n        /* \"inviter_presell/stake.sol\":6645:6720  return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":5344:6728  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_321:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7648:7763  function emergencyWithdraw() external onlyOwner {... */\n    tag_161:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_361\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_361:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_362\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_121\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_362:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap1\n      tag_185\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_363:\n        /* \"inviter_presell/stake.sol\":7715:7722  owner() */\n      tag_366\n        /* \"inviter_presell/stake.sol\":7715:7720  owner */\n      tag_121\n        /* \"inviter_presell/stake.sol\":7715:7722  owner() */\n      jump\t// in\n    tag_366:\n        /* \"inviter_presell/stake.sol\":7707:7732  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":7707:7755  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"inviter_presell/stake.sol\":7733:7754  address(this).balance */\n      selfbalance\n        /* \"inviter_presell/stake.sol\":7707:7755  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_368\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_368:\n      pop\n        /* \"inviter_presell/stake.sol\":7648:7763  function emergencyWithdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_163:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_167:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_370\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_181\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_370:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_371\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_121\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_371:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_372\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_373\n      swap1\n      tag_185\n      jump\t// in\n    tag_373:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_372:\n        /* \"inviter_presell/adminable.sol\":1343:1344  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1323:1331  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_375\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_375:\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      tag_378\n        /* \"inviter_presell/adminable.sol\":1418:1426  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1399:1417  _transferOwnership */\n      tag_265\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_378:\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_175:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_380\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_380:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_176:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_382\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_382:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_177:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_384\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_384:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_178:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_386\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_386:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n    tag_181:\n        /* \"inviter_presell/adminable.sol\":116:123  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_265:\n        /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n      0x01\n      0x00\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4302:4524  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n    tag_320:\n        /* \"inviter_presell/stake.sol\":4362:4369  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4382:4403  uint256 curPoolAmount */\n      dup1\n        /* \"inviter_presell/stake.sol\":4406:4425  getRewardPool(time) */\n      tag_390\n        /* \"inviter_presell/stake.sol\":4420:4424  time */\n      dup4\n        /* \"inviter_presell/stake.sol\":4406:4419  getRewardPool */\n      tag_86\n        /* \"inviter_presell/stake.sol\":4406:4425  getRewardPool(time) */\n      jump\t// in\n    tag_390:\n        /* \"inviter_presell/stake.sol\":4382:4425  uint256 curPoolAmount = getRewardPool(time) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4436:4454  uint256 rewardRate */\n      0x00\n        /* \"inviter_presell/stake.sol\":4457:4488  curPoolAmount.div(rateInterval) */\n      tag_391\n        /* \"inviter_presell/stake.sol\":4475:4487  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4457:4470  curPoolAmount */\n      dup4\n        /* \"inviter_presell/stake.sol\":4457:4474  curPoolAmount.div */\n      tag_177\n      swap1\n        /* \"inviter_presell/stake.sol\":4457:4488  curPoolAmount.div(rateInterval) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_391:\n        /* \"inviter_presell/stake.sol\":4436:4488  uint256 rewardRate = curPoolAmount.div(rateInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4506:4516  rewardRate */\n      dup1\n        /* \"inviter_presell/stake.sol\":4499:4516  return rewardRate */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":4302:4524  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3190:3679  function _getRemainPool(uint256 time) private view returns (uint256) {... */\n    tag_346:\n        /* \"inviter_presell/stake.sol\":3250:3257  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3286:3287  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":3273:3282  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3273:3287  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":3270:3335  if(startTime == 0) {... */\n      tag_393\n      jumpi\n        /* \"inviter_presell/stake.sol\":3311:3323  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":3304:3323  return totalRewards */\n      swap1\n      pop\n      jump(tag_392)\n        /* \"inviter_presell/stake.sol\":3270:3335  if(startTime == 0) {... */\n    tag_393:\n        /* \"inviter_presell/stake.sol\":3355:3364  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3348:3352  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":3348:3364  time < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":3345:3401  if(time < startTime) {... */\n      iszero\n      tag_394\n      jumpi\n        /* \"inviter_presell/stake.sol\":3388:3389  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3381:3389  return 0 */\n      swap1\n      pop\n      jump(tag_392)\n        /* \"inviter_presell/stake.sol\":3345:3401  if(time < startTime) {... */\n    tag_394:\n        /* \"inviter_presell/stake.sol\":3413:3426  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":3465:3466  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":3450:3462  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3437:3446  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3430:3434  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":3430:3446  time - startTime */\n      tag_395\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_395:\n        /* \"inviter_presell/stake.sol\":3429:3462  (time - startTime) / rateInterval */\n      tag_396\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_396:\n        /* \"inviter_presell/stake.sol\":3429:3466  (time - startTime) / rateInterval + 1 */\n      tag_397\n      swap2\n      swap1\n      tag_210\n      jump\t// in\n    tag_397:\n        /* \"inviter_presell/stake.sol\":3413:3466  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3477:3490  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":3493:3505  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":3477:3505  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3520:3529  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":3516:3649  for(uint256 i = 0; i < times; ++i) {... */\n    tag_398:\n        /* \"inviter_presell/stake.sol\":3539:3544  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":3535:3536  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":3535:3544  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":3516:3649  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_399\n      jumpi\n        /* \"inviter_presell/stake.sol\":3614:3637  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3590:3611  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":3582:3587  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":3582:3611  value * rateIntervalNumerator */\n      tag_401\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_401:\n        /* \"inviter_presell/stake.sol\":3582:3637  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_402\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_402:\n        /* \"inviter_presell/stake.sol\":3574:3579  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":3574:3637  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_403\n      swap2\n      swap1\n      tag_229\n      jump\t// in\n    tag_403:\n        /* \"inviter_presell/stake.sol\":3566:3637  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":3546:3549  ++i */\n      dup1\n      tag_404\n      swap1\n      tag_241\n      jump\t// in\n    tag_404:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3516:3649  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_398)\n    tag_399:\n      pop\n        /* \"inviter_presell/stake.sol\":3666:3671  value */\n      dup1\n        /* \"inviter_presell/stake.sol\":3659:3671  return value */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3190:3679  function _getRemainPool(uint256 time) private view returns (uint256) {... */\n    tag_392:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_406:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_408:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_409:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_446\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_408\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_410:\n        /* \"#utility.yul\":641:665   */\n      tag_448\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_409\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_449\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_449:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_411:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_451\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_410\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_47:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_454\n      tag_406\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":917:1036   */\n    tag_453:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_455\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_411\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_412:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_413:\n        /* \"#utility.yul\":1346:1370   */\n      tag_458\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_412\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_50:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_460\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_413\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_414:\n        /* \"#utility.yul\":1684:1708   */\n      tag_462\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_412\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_463\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_463:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_415:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_465\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_414\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2503   */\n    tag_60:\n        /* \"#utility.yul\":1961:1967   */\n      0x00\n        /* \"#utility.yul\":1969:1975   */\n      dup1\n        /* \"#utility.yul\":1977:1983   */\n      0x00\n        /* \"#utility.yul\":2026:2028   */\n      0x60\n        /* \"#utility.yul\":2014:2023   */\n      dup5\n        /* \"#utility.yul\":2005:2012   */\n      dup7\n        /* \"#utility.yul\":2001:2024   */\n      sub\n        /* \"#utility.yul\":1997:2029   */\n      slt\n        /* \"#utility.yul\":1994:2113   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":2032:2111   */\n      tag_468\n      tag_406\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":1994:2113   */\n    tag_467:\n        /* \"#utility.yul\":2152:2153   */\n      0x00\n        /* \"#utility.yul\":2177:2230   */\n      tag_469\n        /* \"#utility.yul\":2222:2229   */\n      dup7\n        /* \"#utility.yul\":2213:2219   */\n      dup3\n        /* \"#utility.yul\":2202:2211   */\n      dup8\n        /* \"#utility.yul\":2198:2220   */\n      add\n        /* \"#utility.yul\":2177:2230   */\n      tag_415\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2167:2230   */\n      swap4\n      pop\n        /* \"#utility.yul\":2123:2240   */\n      pop\n        /* \"#utility.yul\":2279:2281   */\n      0x20\n        /* \"#utility.yul\":2305:2358   */\n      tag_470\n        /* \"#utility.yul\":2350:2357   */\n      dup7\n        /* \"#utility.yul\":2341:2347   */\n      dup3\n        /* \"#utility.yul\":2330:2339   */\n      dup8\n        /* \"#utility.yul\":2326:2348   */\n      add\n        /* \"#utility.yul\":2305:2358   */\n      tag_415\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":2295:2358   */\n      swap3\n      pop\n        /* \"#utility.yul\":2250:2368   */\n      pop\n        /* \"#utility.yul\":2407:2409   */\n      0x40\n        /* \"#utility.yul\":2433:2486   */\n      tag_471\n        /* \"#utility.yul\":2478:2485   */\n      dup7\n        /* \"#utility.yul\":2469:2475   */\n      dup3\n        /* \"#utility.yul\":2458:2467   */\n      dup8\n        /* \"#utility.yul\":2454:2476   */\n      add\n        /* \"#utility.yul\":2433:2486   */\n      tag_415\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":2423:2486   */\n      swap2\n      pop\n        /* \"#utility.yul\":2378:2496   */\n      pop\n        /* \"#utility.yul\":1884:2503   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2509:2599   */\n    tag_416:\n        /* \"#utility.yul\":2543:2550   */\n      0x00\n        /* \"#utility.yul\":2586:2591   */\n      dup2\n        /* \"#utility.yul\":2579:2592   */\n      iszero\n        /* \"#utility.yul\":2572:2593   */\n      iszero\n        /* \"#utility.yul\":2561:2593   */\n      swap1\n      pop\n        /* \"#utility.yul\":2509:2599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2605:2721   */\n    tag_417:\n        /* \"#utility.yul\":2675:2696   */\n      tag_474\n        /* \"#utility.yul\":2690:2695   */\n      dup2\n        /* \"#utility.yul\":2675:2696   */\n      tag_416\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2665:2697   */\n      eq\n        /* \"#utility.yul\":2655:2715   */\n      tag_475\n      jumpi\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2708:2709   */\n      dup1\n        /* \"#utility.yul\":2701:2713   */\n      revert\n        /* \"#utility.yul\":2655:2715   */\n    tag_475:\n        /* \"#utility.yul\":2605:2721   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:2860   */\n    tag_418:\n        /* \"#utility.yul\":2770:2775   */\n      0x00\n        /* \"#utility.yul\":2808:2814   */\n      dup2\n        /* \"#utility.yul\":2795:2815   */\n      calldataload\n        /* \"#utility.yul\":2786:2815   */\n      swap1\n      pop\n        /* \"#utility.yul\":2824:2854   */\n      tag_477\n        /* \"#utility.yul\":2848:2853   */\n      dup2\n        /* \"#utility.yul\":2824:2854   */\n      tag_417\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2727:2860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2866:3334   */\n    tag_64:\n        /* \"#utility.yul\":2931:2937   */\n      0x00\n        /* \"#utility.yul\":2939:2945   */\n      dup1\n        /* \"#utility.yul\":2988:2990   */\n      0x40\n        /* \"#utility.yul\":2976:2985   */\n      dup4\n        /* \"#utility.yul\":2967:2974   */\n      dup6\n        /* \"#utility.yul\":2963:2986   */\n      sub\n        /* \"#utility.yul\":2959:2991   */\n      slt\n        /* \"#utility.yul\":2956:3075   */\n      iszero\n      tag_479\n      jumpi\n        /* \"#utility.yul\":2994:3073   */\n      tag_480\n      tag_406\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":2956:3075   */\n    tag_479:\n        /* \"#utility.yul\":3114:3115   */\n      0x00\n        /* \"#utility.yul\":3139:3192   */\n      tag_481\n        /* \"#utility.yul\":3184:3191   */\n      dup6\n        /* \"#utility.yul\":3175:3181   */\n      dup3\n        /* \"#utility.yul\":3164:3173   */\n      dup7\n        /* \"#utility.yul\":3160:3182   */\n      add\n        /* \"#utility.yul\":3139:3192   */\n      tag_411\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":3129:3192   */\n      swap3\n      pop\n        /* \"#utility.yul\":3085:3202   */\n      pop\n        /* \"#utility.yul\":3241:3243   */\n      0x20\n        /* \"#utility.yul\":3267:3317   */\n      tag_482\n        /* \"#utility.yul\":3309:3316   */\n      dup6\n        /* \"#utility.yul\":3300:3306   */\n      dup3\n        /* \"#utility.yul\":3289:3298   */\n      dup7\n        /* \"#utility.yul\":3285:3307   */\n      add\n        /* \"#utility.yul\":3267:3317   */\n      tag_418\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3257:3317   */\n      swap2\n      pop\n        /* \"#utility.yul\":3212:3327   */\n      pop\n        /* \"#utility.yul\":2866:3334   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3340:3449   */\n    tag_419:\n        /* \"#utility.yul\":3421:3442   */\n      tag_484\n        /* \"#utility.yul\":3436:3441   */\n      dup2\n        /* \"#utility.yul\":3421:3442   */\n      tag_416\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3409:3443   */\n      mstore\n        /* \"#utility.yul\":3340:3449   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3455:3665   */\n    tag_70:\n        /* \"#utility.yul\":3542:3546   */\n      0x00\n        /* \"#utility.yul\":3580:3582   */\n      0x20\n        /* \"#utility.yul\":3569:3578   */\n      dup3\n        /* \"#utility.yul\":3565:3583   */\n      add\n        /* \"#utility.yul\":3557:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3593:3658   */\n      tag_486\n        /* \"#utility.yul\":3655:3656   */\n      0x00\n        /* \"#utility.yul\":3644:3653   */\n      dup4\n        /* \"#utility.yul\":3640:3657   */\n      add\n        /* \"#utility.yul\":3631:3637   */\n      dup5\n        /* \"#utility.yul\":3593:3658   */\n      tag_419\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":3455:3665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3671:4000   */\n    tag_78:\n        /* \"#utility.yul\":3730:3736   */\n      0x00\n        /* \"#utility.yul\":3779:3781   */\n      0x20\n        /* \"#utility.yul\":3767:3776   */\n      dup3\n        /* \"#utility.yul\":3758:3765   */\n      dup5\n        /* \"#utility.yul\":3754:3777   */\n      sub\n        /* \"#utility.yul\":3750:3782   */\n      slt\n        /* \"#utility.yul\":3747:3866   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":3785:3864   */\n      tag_489\n      tag_406\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":3747:3866   */\n    tag_488:\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3930:3983   */\n      tag_490\n        /* \"#utility.yul\":3975:3982   */\n      dup5\n        /* \"#utility.yul\":3966:3972   */\n      dup3\n        /* \"#utility.yul\":3955:3964   */\n      dup6\n        /* \"#utility.yul\":3951:3973   */\n      add\n        /* \"#utility.yul\":3930:3983   */\n      tag_415\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3920:3983   */\n      swap2\n      pop\n        /* \"#utility.yul\":3876:3993   */\n      pop\n        /* \"#utility.yul\":3671:4000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4006:4124   */\n    tag_420:\n        /* \"#utility.yul\":4093:4117   */\n      tag_492\n        /* \"#utility.yul\":4111:4116   */\n      dup2\n        /* \"#utility.yul\":4093:4117   */\n      tag_409\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":4088:4091   */\n      dup3\n        /* \"#utility.yul\":4081:4118   */\n      mstore\n        /* \"#utility.yul\":4006:4124   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4130:4352   */\n    tag_123:\n        /* \"#utility.yul\":4223:4227   */\n      0x00\n        /* \"#utility.yul\":4261:4263   */\n      0x20\n        /* \"#utility.yul\":4250:4259   */\n      dup3\n        /* \"#utility.yul\":4246:4264   */\n      add\n        /* \"#utility.yul\":4238:4264   */\n      swap1\n      pop\n        /* \"#utility.yul\":4274:4345   */\n      tag_494\n        /* \"#utility.yul\":4342:4343   */\n      0x00\n        /* \"#utility.yul\":4331:4340   */\n      dup4\n        /* \"#utility.yul\":4327:4344   */\n      add\n        /* \"#utility.yul\":4318:4324   */\n      dup5\n        /* \"#utility.yul\":4274:4345   */\n      tag_420\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4130:4352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4358:4832   */\n    tag_132:\n        /* \"#utility.yul\":4426:4432   */\n      0x00\n        /* \"#utility.yul\":4434:4440   */\n      dup1\n        /* \"#utility.yul\":4483:4485   */\n      0x40\n        /* \"#utility.yul\":4471:4480   */\n      dup4\n        /* \"#utility.yul\":4462:4469   */\n      dup6\n        /* \"#utility.yul\":4458:4481   */\n      sub\n        /* \"#utility.yul\":4454:4486   */\n      slt\n        /* \"#utility.yul\":4451:4570   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":4489:4568   */\n      tag_497\n      tag_406\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":4451:4570   */\n    tag_496:\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4634:4687   */\n      tag_498\n        /* \"#utility.yul\":4679:4686   */\n      dup6\n        /* \"#utility.yul\":4670:4676   */\n      dup3\n        /* \"#utility.yul\":4659:4668   */\n      dup7\n        /* \"#utility.yul\":4655:4677   */\n      add\n        /* \"#utility.yul\":4634:4687   */\n      tag_411\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":4624:4687   */\n      swap3\n      pop\n        /* \"#utility.yul\":4580:4697   */\n      pop\n        /* \"#utility.yul\":4736:4738   */\n      0x20\n        /* \"#utility.yul\":4762:4815   */\n      tag_499\n        /* \"#utility.yul\":4807:4814   */\n      dup6\n        /* \"#utility.yul\":4798:4804   */\n      dup3\n        /* \"#utility.yul\":4787:4796   */\n      dup7\n        /* \"#utility.yul\":4783:4805   */\n      add\n        /* \"#utility.yul\":4762:4815   */\n      tag_415\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":4752:4815   */\n      swap2\n      pop\n        /* \"#utility.yul\":4707:4825   */\n      pop\n        /* \"#utility.yul\":4358:4832   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4838:4898   */\n    tag_421:\n        /* \"#utility.yul\":4866:4869   */\n      0x00\n        /* \"#utility.yul\":4887:4892   */\n      dup2\n        /* \"#utility.yul\":4880:4892   */\n      swap1\n      pop\n        /* \"#utility.yul\":4838:4898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4904:5046   */\n    tag_422:\n        /* \"#utility.yul\":4954:4963   */\n      0x00\n        /* \"#utility.yul\":4987:5040   */\n      tag_502\n        /* \"#utility.yul\":5005:5039   */\n      tag_503\n        /* \"#utility.yul\":5014:5038   */\n      tag_504\n        /* \"#utility.yul\":5032:5037   */\n      dup5\n        /* \"#utility.yul\":5014:5038   */\n      tag_408\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":5005:5039   */\n      tag_421\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":4987:5040   */\n      tag_408\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":4974:5040   */\n      swap1\n      pop\n        /* \"#utility.yul\":4904:5046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5052:5178   */\n    tag_423:\n        /* \"#utility.yul\":5102:5111   */\n      0x00\n        /* \"#utility.yul\":5135:5172   */\n      tag_506\n        /* \"#utility.yul\":5166:5171   */\n      dup3\n        /* \"#utility.yul\":5135:5172   */\n      tag_422\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5122:5172   */\n      swap1\n      pop\n        /* \"#utility.yul\":5052:5178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5184:5325   */\n    tag_424:\n        /* \"#utility.yul\":5249:5258   */\n      0x00\n        /* \"#utility.yul\":5282:5319   */\n      tag_508\n        /* \"#utility.yul\":5313:5318   */\n      dup3\n        /* \"#utility.yul\":5282:5319   */\n      tag_423\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":5269:5319   */\n      swap1\n      pop\n        /* \"#utility.yul\":5184:5325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5331:5492   */\n    tag_425:\n        /* \"#utility.yul\":5433:5485   */\n      tag_510\n        /* \"#utility.yul\":5479:5484   */\n      dup2\n        /* \"#utility.yul\":5433:5485   */\n      tag_424\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":5428:5431   */\n      dup3\n        /* \"#utility.yul\":5421:5486   */\n      mstore\n        /* \"#utility.yul\":5331:5492   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5498:5750   */\n    tag_150:\n        /* \"#utility.yul\":5606:5610   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5633:5642   */\n      dup3\n        /* \"#utility.yul\":5629:5647   */\n      add\n        /* \"#utility.yul\":5621:5647   */\n      swap1\n      pop\n        /* \"#utility.yul\":5657:5743   */\n      tag_512\n        /* \"#utility.yul\":5740:5741   */\n      0x00\n        /* \"#utility.yul\":5729:5738   */\n      dup4\n        /* \"#utility.yul\":5725:5742   */\n      add\n        /* \"#utility.yul\":5716:5722   */\n      dup5\n        /* \"#utility.yul\":5657:5743   */\n      tag_425\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":5498:5750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5756:6230   */\n    tag_157:\n        /* \"#utility.yul\":5824:5830   */\n      0x00\n        /* \"#utility.yul\":5832:5838   */\n      dup1\n        /* \"#utility.yul\":5881:5883   */\n      0x40\n        /* \"#utility.yul\":5869:5878   */\n      dup4\n        /* \"#utility.yul\":5860:5867   */\n      dup6\n        /* \"#utility.yul\":5856:5879   */\n      sub\n        /* \"#utility.yul\":5852:5884   */\n      slt\n        /* \"#utility.yul\":5849:5968   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":5887:5966   */\n      tag_515\n      tag_406\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":5849:5968   */\n    tag_514:\n        /* \"#utility.yul\":6007:6008   */\n      0x00\n        /* \"#utility.yul\":6032:6085   */\n      tag_516\n        /* \"#utility.yul\":6077:6084   */\n      dup6\n        /* \"#utility.yul\":6068:6074   */\n      dup3\n        /* \"#utility.yul\":6057:6066   */\n      dup7\n        /* \"#utility.yul\":6053:6075   */\n      add\n        /* \"#utility.yul\":6032:6085   */\n      tag_415\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":6022:6085   */\n      swap3\n      pop\n        /* \"#utility.yul\":5978:6095   */\n      pop\n        /* \"#utility.yul\":6134:6136   */\n      0x20\n        /* \"#utility.yul\":6160:6213   */\n      tag_517\n        /* \"#utility.yul\":6205:6212   */\n      dup6\n        /* \"#utility.yul\":6196:6202   */\n      dup3\n        /* \"#utility.yul\":6185:6194   */\n      dup7\n        /* \"#utility.yul\":6181:6203   */\n      add\n        /* \"#utility.yul\":6160:6213   */\n      tag_415\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":6150:6213   */\n      swap2\n      pop\n        /* \"#utility.yul\":6105:6223   */\n      pop\n        /* \"#utility.yul\":5756:6230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6236:6405   */\n    tag_426:\n        /* \"#utility.yul\":6320:6331   */\n      0x00\n        /* \"#utility.yul\":6354:6360   */\n      dup3\n        /* \"#utility.yul\":6349:6352   */\n      dup3\n        /* \"#utility.yul\":6342:6361   */\n      mstore\n        /* \"#utility.yul\":6394:6398   */\n      0x20\n        /* \"#utility.yul\":6389:6392   */\n      dup3\n        /* \"#utility.yul\":6385:6399   */\n      add\n        /* \"#utility.yul\":6370:6399   */\n      swap1\n      pop\n        /* \"#utility.yul\":6236:6405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6411:6632   */\n    tag_427:\n        /* \"#utility.yul\":6551:6585   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e\n        /* \"#utility.yul\":6547:6548   */\n      0x00\n        /* \"#utility.yul\":6539:6545   */\n      dup3\n        /* \"#utility.yul\":6535:6549   */\n      add\n        /* \"#utility.yul\":6528:6586   */\n      mstore\n        /* \"#utility.yul\":6620:6624   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"#utility.yul\":6607:6613   */\n      dup3\n        /* \"#utility.yul\":6603:6618   */\n      add\n        /* \"#utility.yul\":6596:6625   */\n      mstore\n        /* \"#utility.yul\":6411:6632   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6638:7004   */\n    tag_428:\n        /* \"#utility.yul\":6780:6783   */\n      0x00\n        /* \"#utility.yul\":6801:6868   */\n      tag_521\n        /* \"#utility.yul\":6865:6867   */\n      0x22\n        /* \"#utility.yul\":6860:6863   */\n      dup4\n        /* \"#utility.yul\":6801:6868   */\n      tag_426\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":6794:6868   */\n      swap2\n      pop\n        /* \"#utility.yul\":6877:6970   */\n      tag_522\n        /* \"#utility.yul\":6966:6969   */\n      dup3\n        /* \"#utility.yul\":6877:6970   */\n      tag_427\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6995:6997   */\n      0x40\n        /* \"#utility.yul\":6990:6993   */\n      dup3\n        /* \"#utility.yul\":6986:6998   */\n      add\n        /* \"#utility.yul\":6979:6998   */\n      swap1\n      pop\n        /* \"#utility.yul\":6638:7004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7010:7429   */\n    tag_185:\n        /* \"#utility.yul\":7176:7180   */\n      0x00\n        /* \"#utility.yul\":7214:7216   */\n      0x20\n        /* \"#utility.yul\":7203:7212   */\n      dup3\n        /* \"#utility.yul\":7199:7217   */\n      add\n        /* \"#utility.yul\":7191:7217   */\n      swap1\n      pop\n        /* \"#utility.yul\":7263:7272   */\n      dup2\n        /* \"#utility.yul\":7257:7261   */\n      dup2\n        /* \"#utility.yul\":7253:7273   */\n      sub\n        /* \"#utility.yul\":7249:7250   */\n      0x00\n        /* \"#utility.yul\":7238:7247   */\n      dup4\n        /* \"#utility.yul\":7234:7251   */\n      add\n        /* \"#utility.yul\":7227:7274   */\n      mstore\n        /* \"#utility.yul\":7291:7422   */\n      tag_524\n        /* \"#utility.yul\":7417:7421   */\n      dup2\n        /* \"#utility.yul\":7291:7422   */\n      tag_428\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7283:7422   */\n      swap1\n      pop\n        /* \"#utility.yul\":7010:7429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7743   */\n    tag_194:\n        /* \"#utility.yul\":7544:7548   */\n      0x00\n        /* \"#utility.yul\":7582:7584   */\n      0x40\n        /* \"#utility.yul\":7571:7580   */\n      dup3\n        /* \"#utility.yul\":7567:7585   */\n      add\n        /* \"#utility.yul\":7559:7585   */\n      swap1\n      pop\n        /* \"#utility.yul\":7595:7660   */\n      tag_526\n        /* \"#utility.yul\":7657:7658   */\n      0x00\n        /* \"#utility.yul\":7646:7655   */\n      dup4\n        /* \"#utility.yul\":7642:7659   */\n      add\n        /* \"#utility.yul\":7633:7639   */\n      dup6\n        /* \"#utility.yul\":7595:7660   */\n      tag_419\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":7670:7736   */\n      tag_527\n        /* \"#utility.yul\":7732:7734   */\n      0x20\n        /* \"#utility.yul\":7721:7730   */\n      dup4\n        /* \"#utility.yul\":7717:7735   */\n      add\n        /* \"#utility.yul\":7708:7714   */\n      dup5\n        /* \"#utility.yul\":7670:7736   */\n      tag_419\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":7435:7743   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7749:7930   */\n    tag_429:\n        /* \"#utility.yul\":7889:7922   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7885:7886   */\n      0x00\n        /* \"#utility.yul\":7877:7883   */\n      dup3\n        /* \"#utility.yul\":7873:7887   */\n      add\n        /* \"#utility.yul\":7866:7923   */\n      mstore\n        /* \"#utility.yul\":7749:7930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7936:8302   */\n    tag_430:\n        /* \"#utility.yul\":8078:8081   */\n      0x00\n        /* \"#utility.yul\":8099:8166   */\n      tag_530\n        /* \"#utility.yul\":8163:8165   */\n      0x1f\n        /* \"#utility.yul\":8158:8161   */\n      dup4\n        /* \"#utility.yul\":8099:8166   */\n      tag_426\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8092:8166   */\n      swap2\n      pop\n        /* \"#utility.yul\":8175:8268   */\n      tag_531\n        /* \"#utility.yul\":8264:8267   */\n      dup3\n        /* \"#utility.yul\":8175:8268   */\n      tag_429\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":8293:8295   */\n      0x20\n        /* \"#utility.yul\":8288:8291   */\n      dup3\n        /* \"#utility.yul\":8284:8296   */\n      add\n        /* \"#utility.yul\":8277:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":7936:8302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8308:8727   */\n    tag_199:\n        /* \"#utility.yul\":8474:8478   */\n      0x00\n        /* \"#utility.yul\":8512:8514   */\n      0x20\n        /* \"#utility.yul\":8501:8510   */\n      dup3\n        /* \"#utility.yul\":8497:8515   */\n      add\n        /* \"#utility.yul\":8489:8515   */\n      swap1\n      pop\n        /* \"#utility.yul\":8561:8570   */\n      dup2\n        /* \"#utility.yul\":8555:8559   */\n      dup2\n        /* \"#utility.yul\":8551:8571   */\n      sub\n        /* \"#utility.yul\":8547:8548   */\n      0x00\n        /* \"#utility.yul\":8536:8545   */\n      dup4\n        /* \"#utility.yul\":8532:8549   */\n      add\n        /* \"#utility.yul\":8525:8572   */\n      mstore\n        /* \"#utility.yul\":8589:8720   */\n      tag_533\n        /* \"#utility.yul\":8715:8719   */\n      dup2\n        /* \"#utility.yul\":8589:8720   */\n      tag_430\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":8581:8720   */\n      swap1\n      pop\n        /* \"#utility.yul\":8308:8727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8733:8913   */\n    tag_431:\n        /* \"#utility.yul\":8781:8858   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8778:8779   */\n      0x00\n        /* \"#utility.yul\":8771:8859   */\n      mstore\n        /* \"#utility.yul\":8878:8882   */\n      0x11\n        /* \"#utility.yul\":8875:8876   */\n      0x04\n        /* \"#utility.yul\":8868:8883   */\n      mstore\n        /* \"#utility.yul\":8902:8906   */\n      0x24\n        /* \"#utility.yul\":8899:8900   */\n      0x00\n        /* \"#utility.yul\":8892:8907   */\n      revert\n        /* \"#utility.yul\":8919:9110   */\n    tag_210:\n        /* \"#utility.yul\":8959:8962   */\n      0x00\n        /* \"#utility.yul\":8978:8998   */\n      tag_536\n        /* \"#utility.yul\":8996:8997   */\n      dup3\n        /* \"#utility.yul\":8978:8998   */\n      tag_412\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":8973:8998   */\n      swap2\n      pop\n        /* \"#utility.yul\":9012:9032   */\n      tag_537\n        /* \"#utility.yul\":9030:9031   */\n      dup4\n        /* \"#utility.yul\":9012:9032   */\n      tag_412\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":9007:9032   */\n      swap3\n      pop\n        /* \"#utility.yul\":9055:9056   */\n      dup3\n        /* \"#utility.yul\":9052:9053   */\n      dup3\n        /* \"#utility.yul\":9048:9057   */\n      add\n        /* \"#utility.yul\":9041:9057   */\n      swap1\n      pop\n        /* \"#utility.yul\":9076:9079   */\n      dup1\n        /* \"#utility.yul\":9073:9074   */\n      dup3\n        /* \"#utility.yul\":9070:9080   */\n      gt\n        /* \"#utility.yul\":9067:9103   */\n      iszero\n      tag_538\n      jumpi\n        /* \"#utility.yul\":9083:9101   */\n      tag_539\n      tag_431\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":9067:9103   */\n    tag_538:\n        /* \"#utility.yul\":8919:9110   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9116:9448   */\n    tag_212:\n        /* \"#utility.yul\":9237:9241   */\n      0x00\n        /* \"#utility.yul\":9275:9277   */\n      0x40\n        /* \"#utility.yul\":9264:9273   */\n      dup3\n        /* \"#utility.yul\":9260:9278   */\n      add\n        /* \"#utility.yul\":9252:9278   */\n      swap1\n      pop\n        /* \"#utility.yul\":9288:9359   */\n      tag_541\n        /* \"#utility.yul\":9356:9357   */\n      0x00\n        /* \"#utility.yul\":9345:9354   */\n      dup4\n        /* \"#utility.yul\":9341:9358   */\n      add\n        /* \"#utility.yul\":9332:9338   */\n      dup6\n        /* \"#utility.yul\":9288:9359   */\n      tag_420\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":9369:9441   */\n      tag_542\n        /* \"#utility.yul\":9437:9439   */\n      0x20\n        /* \"#utility.yul\":9426:9435   */\n      dup4\n        /* \"#utility.yul\":9422:9440   */\n      add\n        /* \"#utility.yul\":9413:9419   */\n      dup5\n        /* \"#utility.yul\":9369:9441   */\n      tag_413\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":9116:9448   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9454:9591   */\n    tag_432:\n        /* \"#utility.yul\":9508:9513   */\n      0x00\n        /* \"#utility.yul\":9539:9545   */\n      dup2\n        /* \"#utility.yul\":9533:9546   */\n      mload\n        /* \"#utility.yul\":9524:9546   */\n      swap1\n      pop\n        /* \"#utility.yul\":9555:9585   */\n      tag_544\n        /* \"#utility.yul\":9579:9584   */\n      dup2\n        /* \"#utility.yul\":9555:9585   */\n      tag_417\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":9454:9591   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9597:9942   */\n    tag_216:\n        /* \"#utility.yul\":9664:9670   */\n      0x00\n        /* \"#utility.yul\":9713:9715   */\n      0x20\n        /* \"#utility.yul\":9701:9710   */\n      dup3\n        /* \"#utility.yul\":9692:9699   */\n      dup5\n        /* \"#utility.yul\":9688:9711   */\n      sub\n        /* \"#utility.yul\":9684:9716   */\n      slt\n        /* \"#utility.yul\":9681:9800   */\n      iszero\n      tag_546\n      jumpi\n        /* \"#utility.yul\":9719:9798   */\n      tag_547\n      tag_406\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":9681:9800   */\n    tag_546:\n        /* \"#utility.yul\":9839:9840   */\n      0x00\n        /* \"#utility.yul\":9864:9925   */\n      tag_548\n        /* \"#utility.yul\":9917:9924   */\n      dup5\n        /* \"#utility.yul\":9908:9914   */\n      dup3\n        /* \"#utility.yul\":9897:9906   */\n      dup6\n        /* \"#utility.yul\":9893:9915   */\n      add\n        /* \"#utility.yul\":9864:9925   */\n      tag_432\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":9854:9925   */\n      swap2\n      pop\n        /* \"#utility.yul\":9810:9935   */\n      pop\n        /* \"#utility.yul\":9597:9942   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9948:10169   */\n    tag_433:\n        /* \"#utility.yul\":10088:10122   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d\n        /* \"#utility.yul\":10084:10085   */\n      0x00\n        /* \"#utility.yul\":10076:10082   */\n      dup3\n        /* \"#utility.yul\":10072:10086   */\n      add\n        /* \"#utility.yul\":10065:10123   */\n      mstore\n        /* \"#utility.yul\":10157:10161   */\n      0x696e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10152:10154   */\n      0x20\n        /* \"#utility.yul\":10144:10150   */\n      dup3\n        /* \"#utility.yul\":10140:10155   */\n      add\n        /* \"#utility.yul\":10133:10162   */\n      mstore\n        /* \"#utility.yul\":9948:10169   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10175:10541   */\n    tag_434:\n        /* \"#utility.yul\":10317:10320   */\n      0x00\n        /* \"#utility.yul\":10338:10405   */\n      tag_551\n        /* \"#utility.yul\":10402:10404   */\n      0x22\n        /* \"#utility.yul\":10397:10400   */\n      dup4\n        /* \"#utility.yul\":10338:10405   */\n      tag_426\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":10331:10405   */\n      swap2\n      pop\n        /* \"#utility.yul\":10414:10507   */\n      tag_552\n        /* \"#utility.yul\":10503:10506   */\n      dup3\n        /* \"#utility.yul\":10414:10507   */\n      tag_433\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":10532:10534   */\n      0x40\n        /* \"#utility.yul\":10527:10530   */\n      dup3\n        /* \"#utility.yul\":10523:10535   */\n      add\n        /* \"#utility.yul\":10516:10535   */\n      swap1\n      pop\n        /* \"#utility.yul\":10175:10541   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10547:10966   */\n    tag_223:\n        /* \"#utility.yul\":10713:10717   */\n      0x00\n        /* \"#utility.yul\":10751:10753   */\n      0x20\n        /* \"#utility.yul\":10740:10749   */\n      dup3\n        /* \"#utility.yul\":10736:10754   */\n      add\n        /* \"#utility.yul\":10728:10754   */\n      swap1\n      pop\n        /* \"#utility.yul\":10800:10809   */\n      dup2\n        /* \"#utility.yul\":10794:10798   */\n      dup2\n        /* \"#utility.yul\":10790:10810   */\n      sub\n        /* \"#utility.yul\":10786:10787   */\n      0x00\n        /* \"#utility.yul\":10775:10784   */\n      dup4\n        /* \"#utility.yul\":10771:10788   */\n      add\n        /* \"#utility.yul\":10764:10811   */\n      mstore\n        /* \"#utility.yul\":10828:10959   */\n      tag_554\n        /* \"#utility.yul\":10954:10958   */\n      dup2\n        /* \"#utility.yul\":10828:10959   */\n      tag_434\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":10820:10959   */\n      swap1\n      pop\n        /* \"#utility.yul\":10547:10966   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10972:11166   */\n    tag_229:\n        /* \"#utility.yul\":11012:11016   */\n      0x00\n        /* \"#utility.yul\":11032:11052   */\n      tag_556\n        /* \"#utility.yul\":11050:11051   */\n      dup3\n        /* \"#utility.yul\":11032:11052   */\n      tag_412\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":11027:11052   */\n      swap2\n      pop\n        /* \"#utility.yul\":11066:11086   */\n      tag_557\n        /* \"#utility.yul\":11084:11085   */\n      dup4\n        /* \"#utility.yul\":11066:11086   */\n      tag_412\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":11061:11086   */\n      swap3\n      pop\n        /* \"#utility.yul\":11110:11111   */\n      dup3\n        /* \"#utility.yul\":11107:11108   */\n      dup3\n        /* \"#utility.yul\":11103:11112   */\n      sub\n        /* \"#utility.yul\":11095:11112   */\n      swap1\n      pop\n        /* \"#utility.yul\":11134:11135   */\n      dup2\n        /* \"#utility.yul\":11128:11132   */\n      dup2\n        /* \"#utility.yul\":11125:11136   */\n      gt\n        /* \"#utility.yul\":11122:11159   */\n      iszero\n      tag_558\n      jumpi\n        /* \"#utility.yul\":11139:11157   */\n      tag_559\n      tag_431\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":11122:11159   */\n    tag_558:\n        /* \"#utility.yul\":10972:11166   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11172:11352   */\n    tag_435:\n        /* \"#utility.yul\":11220:11297   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11217:11218   */\n      0x00\n        /* \"#utility.yul\":11210:11298   */\n      mstore\n        /* \"#utility.yul\":11317:11321   */\n      0x12\n        /* \"#utility.yul\":11314:11315   */\n      0x04\n        /* \"#utility.yul\":11307:11322   */\n      mstore\n        /* \"#utility.yul\":11341:11345   */\n      0x24\n        /* \"#utility.yul\":11338:11339   */\n      0x00\n        /* \"#utility.yul\":11331:11346   */\n      revert\n        /* \"#utility.yul\":11358:11543   */\n    tag_231:\n        /* \"#utility.yul\":11398:11399   */\n      0x00\n        /* \"#utility.yul\":11415:11435   */\n      tag_562\n        /* \"#utility.yul\":11433:11434   */\n      dup3\n        /* \"#utility.yul\":11415:11435   */\n      tag_412\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":11410:11435   */\n      swap2\n      pop\n        /* \"#utility.yul\":11449:11469   */\n      tag_563\n        /* \"#utility.yul\":11467:11468   */\n      dup4\n        /* \"#utility.yul\":11449:11469   */\n      tag_412\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":11444:11469   */\n      swap3\n      pop\n        /* \"#utility.yul\":11488:11489   */\n      dup3\n        /* \"#utility.yul\":11478:11513   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":11493:11511   */\n      tag_565\n      tag_435\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11478:11513   */\n    tag_564:\n        /* \"#utility.yul\":11535:11536   */\n      dup3\n        /* \"#utility.yul\":11532:11533   */\n      dup3\n        /* \"#utility.yul\":11528:11537   */\n      div\n        /* \"#utility.yul\":11523:11537   */\n      swap1\n      pop\n        /* \"#utility.yul\":11358:11543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11549:11959   */\n    tag_237:\n        /* \"#utility.yul\":11589:11596   */\n      0x00\n        /* \"#utility.yul\":11612:11632   */\n      tag_567\n        /* \"#utility.yul\":11630:11631   */\n      dup3\n        /* \"#utility.yul\":11612:11632   */\n      tag_412\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":11607:11632   */\n      swap2\n      pop\n        /* \"#utility.yul\":11646:11666   */\n      tag_568\n        /* \"#utility.yul\":11664:11665   */\n      dup4\n        /* \"#utility.yul\":11646:11666   */\n      tag_412\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":11641:11666   */\n      swap3\n      pop\n        /* \"#utility.yul\":11701:11702   */\n      dup3\n        /* \"#utility.yul\":11698:11699   */\n      dup3\n        /* \"#utility.yul\":11694:11703   */\n      mul\n        /* \"#utility.yul\":11723:11753   */\n      tag_569\n        /* \"#utility.yul\":11741:11752   */\n      dup2\n        /* \"#utility.yul\":11723:11753   */\n      tag_412\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":11712:11753   */\n      swap2\n      pop\n        /* \"#utility.yul\":11902:11903   */\n      dup3\n        /* \"#utility.yul\":11893:11900   */\n      dup3\n        /* \"#utility.yul\":11889:11904   */\n      div\n        /* \"#utility.yul\":11886:11887   */\n      dup5\n        /* \"#utility.yul\":11883:11905   */\n      eq\n        /* \"#utility.yul\":11863:11864   */\n      dup4\n        /* \"#utility.yul\":11856:11865   */\n      iszero\n        /* \"#utility.yul\":11836:11919   */\n      or\n        /* \"#utility.yul\":11813:11952   */\n      tag_570\n      jumpi\n        /* \"#utility.yul\":11932:11950   */\n      tag_571\n      tag_431\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":11813:11952   */\n    tag_570:\n        /* \"#utility.yul\":11597:11959   */\n      pop\n        /* \"#utility.yul\":11549:11959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11965:12198   */\n    tag_241:\n        /* \"#utility.yul\":12004:12007   */\n      0x00\n        /* \"#utility.yul\":12027:12051   */\n      tag_573\n        /* \"#utility.yul\":12045:12050   */\n      dup3\n        /* \"#utility.yul\":12027:12051   */\n      tag_412\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":12018:12051   */\n      swap2\n      pop\n        /* \"#utility.yul\":12073:12139   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12066:12071   */\n      dup3\n        /* \"#utility.yul\":12063:12140   */\n      sub\n        /* \"#utility.yul\":12060:12163   */\n      tag_574\n      jumpi\n        /* \"#utility.yul\":12143:12161   */\n      tag_575\n      tag_431\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":12060:12163   */\n    tag_574:\n        /* \"#utility.yul\":12190:12191   */\n      0x01\n        /* \"#utility.yul\":12183:12188   */\n      dup3\n        /* \"#utility.yul\":12179:12192   */\n      add\n        /* \"#utility.yul\":12172:12192   */\n      swap1\n      pop\n        /* \"#utility.yul\":11965:12198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12204:12368   */\n    tag_436:\n        /* \"#utility.yul\":12344:12360   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":12340:12341   */\n      0x00\n        /* \"#utility.yul\":12332:12338   */\n      dup3\n        /* \"#utility.yul\":12328:12342   */\n      add\n        /* \"#utility.yul\":12321:12361   */\n      mstore\n        /* \"#utility.yul\":12204:12368   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12374:12740   */\n    tag_437:\n        /* \"#utility.yul\":12516:12519   */\n      0x00\n        /* \"#utility.yul\":12537:12604   */\n      tag_578\n        /* \"#utility.yul\":12601:12603   */\n      0x0e\n        /* \"#utility.yul\":12596:12599   */\n      dup4\n        /* \"#utility.yul\":12537:12604   */\n      tag_426\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":12530:12604   */\n      swap2\n      pop\n        /* \"#utility.yul\":12613:12706   */\n      tag_579\n        /* \"#utility.yul\":12702:12705   */\n      dup3\n        /* \"#utility.yul\":12613:12706   */\n      tag_436\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":12731:12733   */\n      0x20\n        /* \"#utility.yul\":12726:12729   */\n      dup3\n        /* \"#utility.yul\":12722:12734   */\n      add\n        /* \"#utility.yul\":12715:12734   */\n      swap1\n      pop\n        /* \"#utility.yul\":12374:12740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12746:13165   */\n    tag_313:\n        /* \"#utility.yul\":12912:12916   */\n      0x00\n        /* \"#utility.yul\":12950:12952   */\n      0x20\n        /* \"#utility.yul\":12939:12948   */\n      dup3\n        /* \"#utility.yul\":12935:12953   */\n      add\n        /* \"#utility.yul\":12927:12953   */\n      swap1\n      pop\n        /* \"#utility.yul\":12999:13008   */\n      dup2\n        /* \"#utility.yul\":12993:12997   */\n      dup2\n        /* \"#utility.yul\":12989:13009   */\n      sub\n        /* \"#utility.yul\":12985:12986   */\n      0x00\n        /* \"#utility.yul\":12974:12983   */\n      dup4\n        /* \"#utility.yul\":12970:12987   */\n      add\n        /* \"#utility.yul\":12963:13010   */\n      mstore\n        /* \"#utility.yul\":13027:13158   */\n      tag_581\n        /* \"#utility.yul\":13153:13157   */\n      dup2\n        /* \"#utility.yul\":13027:13158   */\n      tag_437\n      jump\t// in\n    tag_581:\n        /* \"#utility.yul\":13019:13158   */\n      swap1\n      pop\n        /* \"#utility.yul\":12746:13165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13171:13347   */\n    tag_328:\n        /* \"#utility.yul\":13203:13204   */\n      0x00\n        /* \"#utility.yul\":13220:13240   */\n      tag_583\n        /* \"#utility.yul\":13238:13239   */\n      dup3\n        /* \"#utility.yul\":13220:13240   */\n      tag_412\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":13215:13240   */\n      swap2\n      pop\n        /* \"#utility.yul\":13254:13274   */\n      tag_584\n        /* \"#utility.yul\":13272:13273   */\n      dup4\n        /* \"#utility.yul\":13254:13274   */\n      tag_412\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":13249:13274   */\n      swap3\n      pop\n        /* \"#utility.yul\":13293:13294   */\n      dup3\n        /* \"#utility.yul\":13283:13318   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":13298:13316   */\n      tag_586\n      tag_435\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":13283:13318   */\n    tag_585:\n        /* \"#utility.yul\":13339:13340   */\n      dup3\n        /* \"#utility.yul\":13336:13337   */\n      dup3\n        /* \"#utility.yul\":13332:13341   */\n      mod\n        /* \"#utility.yul\":13327:13341   */\n      swap1\n      pop\n        /* \"#utility.yul\":13171:13347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13353:13578   */\n    tag_438:\n        /* \"#utility.yul\":13493:13527   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13489:13490   */\n      0x00\n        /* \"#utility.yul\":13481:13487   */\n      dup3\n        /* \"#utility.yul\":13477:13491   */\n      add\n        /* \"#utility.yul\":13470:13528   */\n      mstore\n        /* \"#utility.yul\":13562:13570   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13557:13559   */\n      0x20\n        /* \"#utility.yul\":13549:13555   */\n      dup3\n        /* \"#utility.yul\":13545:13560   */\n      add\n        /* \"#utility.yul\":13538:13571   */\n      mstore\n        /* \"#utility.yul\":13353:13578   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13584:13950   */\n    tag_439:\n        /* \"#utility.yul\":13726:13729   */\n      0x00\n        /* \"#utility.yul\":13747:13814   */\n      tag_589\n        /* \"#utility.yul\":13811:13813   */\n      0x26\n        /* \"#utility.yul\":13806:13809   */\n      dup4\n        /* \"#utility.yul\":13747:13814   */\n      tag_426\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":13740:13814   */\n      swap2\n      pop\n        /* \"#utility.yul\":13823:13916   */\n      tag_590\n        /* \"#utility.yul\":13912:13915   */\n      dup3\n        /* \"#utility.yul\":13823:13916   */\n      tag_438\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":13941:13943   */\n      0x40\n        /* \"#utility.yul\":13936:13939   */\n      dup3\n        /* \"#utility.yul\":13932:13944   */\n      add\n        /* \"#utility.yul\":13925:13944   */\n      swap1\n      pop\n        /* \"#utility.yul\":13584:13950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13956:14375   */\n    tag_377:\n        /* \"#utility.yul\":14122:14126   */\n      0x00\n        /* \"#utility.yul\":14160:14162   */\n      0x20\n        /* \"#utility.yul\":14149:14158   */\n      dup3\n        /* \"#utility.yul\":14145:14163   */\n      add\n        /* \"#utility.yul\":14137:14163   */\n      swap1\n      pop\n        /* \"#utility.yul\":14209:14218   */\n      dup2\n        /* \"#utility.yul\":14203:14207   */\n      dup2\n        /* \"#utility.yul\":14199:14219   */\n      sub\n        /* \"#utility.yul\":14195:14196   */\n      0x00\n        /* \"#utility.yul\":14184:14193   */\n      dup4\n        /* \"#utility.yul\":14180:14197   */\n      add\n        /* \"#utility.yul\":14173:14220   */\n      mstore\n        /* \"#utility.yul\":14237:14368   */\n      tag_592\n        /* \"#utility.yul\":14363:14367   */\n      dup2\n        /* \"#utility.yul\":14237:14368   */\n      tag_439\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":14229:14368   */\n      swap1\n      pop\n        /* \"#utility.yul\":13956:14375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e178807f9d05823ed5145f7dad8c0919ec3a1de009b03ea856b90046f228d23664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1033": {
									"entryPoint": null,
									"id": 1033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 95,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 103,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526923934c5a09da1900000060055561025860075560056008556103e86009553480156200003057600080fd5b5062000051620000456200005f60201b60201c565b6200006760201b60201c565b60016002819055506200012d565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6125ab806200013d6000396000f3fe608060405234801561001057600080fd5b50600436106102105760003560e01c80638107368b11610125578063b79ec812116100ad578063d42b779d1161007c578063d42b779d14610607578063da4f843114610637578063db2e21bc14610667578063df136d6514610671578063f2fde38b1461068f57610210565b8063b79ec8121461057d578063c8f33c91146105ad578063cdda56e0146105cb578063d1af0c7d146105e957610210565b80638da5cb5b116100f45780638da5cb5b146104eb5780639499c549146105095780639a5b17b014610527578063a4c3b09114610545578063adc9772e1461056157610210565b80638107368b1461043f578063874c120b1461046f5780638aee81271461049f5780638b876347146104bb57610210565b80633e0a322d116101a85780636917c501116101775780636917c501146103bd578063715018a6146103db57806378e97925146103e55780637a6fcee71461040357806380faa57d1461042157610210565b80633e0a322d146103235780634dbdc4eb1461033f5780635cfa91f41461036f5780636139d4b41461039f57610210565b806318e20ecf116101e457806318e20ecf146102af57806324d7806c146102cb5780633c4045cf146102fb5780633d18b9121461031957610210565b80628cc262146102155780630700037d146102455780630e15561a14610275578063129ee21a14610293575b600080fd5b61022f600480360381019061022a9190611dbd565b6106ab565b60405161023c9190611e03565b60405180910390f35b61025f600480360381019061025a9190611dbd565b610817565b60405161026c9190611e03565b60405180910390f35b61027d61082f565b60405161028a9190611e03565b60405180910390f35b6102ad60048036038101906102a89190611e4a565b610835565b005b6102c960048036038101906102c49190611ed5565b6108cb565b005b6102e560048036038101906102e09190611dbd565b610a3c565b6040516102f29190611f24565b60405180910390f35b610303610a91565b6040516103109190611e03565b60405180910390f35b610321610a97565b005b61033d60048036038101906103389190611f3f565b610e52565b005b61035960048036038101906103549190611f3f565b610eb2565b6040516103669190611e03565b60405180910390f35b61038960048036038101906103849190611f3f565b610f5c565b6040516103969190611e03565b60405180910390f35b6103a761102e565b6040516103b49190611e03565b60405180910390f35b6103c5611034565b6040516103d29190611e03565b60405180910390f35b6103e361103e565b005b6103ed6110c6565b6040516103fa9190611e03565b60405180910390f35b61040b6110cc565b6040516104189190611e03565b60405180910390f35b6104296110d2565b6040516104369190611e03565b60405180910390f35b61045960048036038101906104549190611dbd565b6110da565b6040516104669190611e03565b60405180910390f35b61048960048036038101906104849190611f3f565b6110f2565b6040516104969190611e03565b60405180910390f35b6104b960048036038101906104b49190611dbd565b61117f565b005b6104d560048036038101906104d09190611dbd565b61123f565b6040516104e29190611e03565b60405180910390f35b6104f3611257565b6040516105009190611f7b565b60405180910390f35b610511611281565b60405161051e9190611e03565b60405180910390f35b61052f611291565b60405161053c9190611e03565b60405180910390f35b61055f600480360381019061055a9190611f96565b611299565b005b61057b60048036038101906105769190611f96565b611398565b005b61059760048036038101906105929190611dbd565b61170c565b6040516105a49190611e03565b60405180910390f35b6105b5611755565b6040516105c29190611e03565b60405180910390f35b6105d361175b565b6040516105e09190611e03565b60405180910390f35b6105f161176b565b6040516105fe9190612035565b60405180910390f35b610621600480360381019061061c9190611dbd565b611791565b60405161062e9190611e03565b60405180910390f35b610651600480360381019061064c9190612050565b6117a9565b60405161065e9190611e03565b60405180910390f35b61066f611990565b005b610679611a5c565b6040516106869190611e03565b60405180910390f35b6106a960048036038101906106a49190611dbd565b611a62565b005b6000806106f7600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426117a9565b905061080f600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610801670de0b6b3a76400006107f36107a5600d60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610797886110f2565b611b5990919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b6f90919063ffffffff16565b611b8590919063ffffffff16565b611b9b90919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b61083d611bb1565b73ffffffffffffffffffffffffffffffffffffffff1661085b611257565b73ffffffffffffffffffffffffffffffffffffffff16146108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890612113565b60405180910390fd5b826007819055508160088190555080600981905550505050565b6108d3611bb1565b73ffffffffffffffffffffffffffffffffffffffff166108f1611257565b73ffffffffffffffffffffffffffffffffffffffff1614610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e90612113565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16836040516109da929190612133565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b6002805403610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad2906121a8565b60405180910390fd5b60028081905550336000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610b365760065490505b6000610b4282426117a9565b9050610b4d816110f2565b600b81905550610b5b6110d2565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c6c57610b9e836106ab565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610e445780601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d0891906121f7565b925050819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610db192919061222b565b6020604051808303816000875af1158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df49190612269565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610e3b9190611e03565b60405180910390a25b505050506001600281905550565b610e62610e5d611bb1565b610a3c565b610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9890612308565b60405180910390fd5b8060068190555080600a8190555050565b60008060065403610ec7576006549050610f57565b600654821015610eda5760009050610f57565b6000600160075460065485610eef9190612328565b610ef9919061238b565b610f0391906121f7565b90506000600554905060005b82811015610f505760095460085483610f2891906123bc565b610f32919061238b565b82610f3d9190612328565b915080610f49906123fe565b9050610f0f565b5080925050505b919050565b60008060065403610f71576005549050611029565b600654821015610f845760009050611029565b6000600160075460065485610f999190612328565b610fa3919061238b565b610fad91906121f7565b90506000600554905060005b82811015610ffa5760095460085483610fd291906123bc565b610fdc919061238b565b82610fe79190612328565b915080610ff3906123fe565b9050610fb9565b5061102460095461101660085484611b6f90919063ffffffff16565b611b8590919063ffffffff16565b925050505b919050565b60075481565b6000600c54905090565b611046611bb1565b73ffffffffffffffffffffffffffffffffffffffff16611064611257565b73ffffffffffffffffffffffffffffffffffffffff16146110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b190612113565b60405180910390fd5b6110c46000611bb9565b565b60065481565b60095481565b600042905090565b600e6020528060005260406000206000915090505481565b600080600c540361110757600b54905061117a565b611177611166600c54611158670de0b6b3a764000061114a8761113c600a5461112e6110d2565b611b5990919063ffffffff16565b611b6f90919063ffffffff16565b611b6f90919063ffffffff16565b611b8590919063ffffffff16565b600b54611b9b90919063ffffffff16565b90505b919050565b611187611bb1565b73ffffffffffffffffffffffffffffffffffffffff166111a5611257565b73ffffffffffffffffffffffffffffffffffffffff16146111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f290612113565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061128c42610f5c565b905090565b600042905090565b6112a1611bb1565b73ffffffffffffffffffffffffffffffffffffffff166112bf611257565b73ffffffffffffffffffffffffffffffffffffffff1614611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130c90612113565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161135092919061222b565b6020604051808303816000875af115801561136f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113939190612269565b505050565b60028054036113dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d3906121a8565b60405180910390fd5b600280819055506113f36113ee611bb1565b610a3c565b611432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142990612308565b60405180910390fd5b816000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060065481116114865760065490505b600061149282426117a9565b905061149d816110f2565b600b819055506114ab6110d2565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146115bc576114ee836106ab565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084116115ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f690612492565b60405180910390fd5b61161484600c54611b9b90919063ffffffff16565b600c8190555061166c84600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9b90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516116f59190611e03565b60405180910390a250505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b600061176642611c7f565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60106020528060005260406000206000915090505481565b60008060065414806117bb5750818310155b806117c65750600083145b156117d4576000905061198a565b6006548310156117e45760065492505b6000600754600754600654866117fa9190612328565b61180491906124b2565b6007546118119190612328565b61181b91906124b2565b905060006007548261182c87610f5c565b61183691906123bc565b611840919061238b565b90506000600754600654866118559190612328565b61185f91906124b2565b905060006007548261187088610f5c565b61187a91906123bc565b611884919061238b565b905085848861189391906121f7565b11156118ad576118a287611c7f565b94505050505061198a565b6000848884896118bd9190612328565b6118c79190612328565b6118d19190612328565b905060006118de89611cb0565b905060008060008390506000600754866118f8919061238b565b905060005b8181101561194f576009546008548461191691906123bc565b611920919061238b565b9350838361192e9190612328565b9250838561193c91906121f7565b945080611948906123fe565b90506118fd565b508c8c61195c9190612328565b878a8661196991906121f7565b61197391906121f7565b61197d919061238b565b9a50505050505050505050505b92915050565b611998611bb1565b73ffffffffffffffffffffffffffffffffffffffff166119b6611257565b73ffffffffffffffffffffffffffffffffffffffff1614611a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0390612113565b60405180910390fd5b611a14611257565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015611a59573d6000803e3d6000fd5b50565b600b5481565b611a6a611bb1565b73ffffffffffffffffffffffffffffffffffffffff16611a88611257565b73ffffffffffffffffffffffffffffffffffffffff1614611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590612113565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4490612555565b60405180910390fd5b611b5681611bb9565b50565b60008183611b679190612328565b905092915050565b60008183611b7d91906123bc565b905092915050565b60008183611b93919061238b565b905092915050565b60008183611ba991906121f7565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611c8b83610f5c565b90506000611ca460075483611b8590919063ffffffff16565b90508092505050919050565b60008060065403611cc5576005549050611d55565b600654821015611cd85760009050611d55565b6000600160075460065485611ced9190612328565b611cf7919061238b565b611d0191906121f7565b90506000600554905060005b82811015611d4e5760095460085483611d2691906123bc565b611d30919061238b565b82611d3b9190612328565b915080611d47906123fe565b9050611d0d565b5080925050505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d8a82611d5f565b9050919050565b611d9a81611d7f565b8114611da557600080fd5b50565b600081359050611db781611d91565b92915050565b600060208284031215611dd357611dd2611d5a565b5b6000611de184828501611da8565b91505092915050565b6000819050919050565b611dfd81611dea565b82525050565b6000602082019050611e186000830184611df4565b92915050565b611e2781611dea565b8114611e3257600080fd5b50565b600081359050611e4481611e1e565b92915050565b600080600060608486031215611e6357611e62611d5a565b5b6000611e7186828701611e35565b9350506020611e8286828701611e35565b9250506040611e9386828701611e35565b9150509250925092565b60008115159050919050565b611eb281611e9d565b8114611ebd57600080fd5b50565b600081359050611ecf81611ea9565b92915050565b60008060408385031215611eec57611eeb611d5a565b5b6000611efa85828601611da8565b9250506020611f0b85828601611ec0565b9150509250929050565b611f1e81611e9d565b82525050565b6000602082019050611f396000830184611f15565b92915050565b600060208284031215611f5557611f54611d5a565b5b6000611f6384828501611e35565b91505092915050565b611f7581611d7f565b82525050565b6000602082019050611f906000830184611f6c565b92915050565b60008060408385031215611fad57611fac611d5a565b5b6000611fbb85828601611da8565b9250506020611fcc85828601611e35565b9150509250929050565b6000819050919050565b6000611ffb611ff6611ff184611d5f565b611fd6565b611d5f565b9050919050565b600061200d82611fe0565b9050919050565b600061201f82612002565b9050919050565b61202f81612014565b82525050565b600060208201905061204a6000830184612026565b92915050565b6000806040838503121561206757612066611d5a565b5b600061207585828601611e35565b925050602061208685828601611e35565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006120fd602283612090565b9150612108826120a1565b604082019050919050565b6000602082019050818103600083015261212c816120f0565b9050919050565b60006040820190506121486000830185611f15565b6121556020830184611f15565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612192601f83612090565b915061219d8261215c565b602082019050919050565b600060208201905081810360008301526121c181612185565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220282611dea565b915061220d83611dea565b9250828201905080821115612225576122246121c8565b5b92915050565b60006040820190506122406000830185611f6c565b61224d6020830184611df4565b9392505050565b60008151905061226381611ea9565b92915050565b60006020828403121561227f5761227e611d5a565b5b600061228d84828501612254565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b60006122f2602283612090565b91506122fd82612296565b604082019050919050565b60006020820190508181036000830152612321816122e5565b9050919050565b600061233382611dea565b915061233e83611dea565b9250828203905081811115612356576123556121c8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061239682611dea565b91506123a183611dea565b9250826123b1576123b061235c565b5b828204905092915050565b60006123c782611dea565b91506123d283611dea565b92508282026123e081611dea565b915082820484148315176123f7576123f66121c8565b5b5092915050565b600061240982611dea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361243b5761243a6121c8565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b600061247c600e83612090565b915061248782612446565b602082019050919050565b600060208201905081810360008301526124ab8161246f565b9050919050565b60006124bd82611dea565b91506124c883611dea565b9250826124d8576124d761235c565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061253f602683612090565b915061254a826124e3565b604082019050919050565b6000602082019050818103600083015261256e81612532565b905091905056fea2646970667358221220e178807f9d05823ed5145f7dad8c0919ec3a1de009b03ea856b90046f228d23664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0x23934C5A09DA19000000 PUSH1 0x5 SSTORE PUSH2 0x258 PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x30 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x51 PUSH3 0x45 PUSH3 0x5F PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x67 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH3 0x12D JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x25AB DUP1 PUSH3 0x13D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x210 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8107368B GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD42B779D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD42B779D EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x68F JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5E9 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x561 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x8107368B EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x4BB JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x421 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x39F JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x18E20ECF GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x319 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x129EE21A EQ PUSH2 0x293 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH2 0x103E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3ED PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x117F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F3 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x1299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x1398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x621 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x651 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66F PUSH2 0x1990 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x679 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x1A62 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6F7 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x80F PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x801 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7F3 PUSH2 0x7A5 PUSH1 0xD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x797 DUP9 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x1B59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x83D PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x85B PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8F1 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DA SWAP3 SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xB36 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xB42 DUP3 TIMESTAMP PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB5B PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6C JUMPI PUSH2 0xB9E DUP4 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB1 SWAP3 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE62 PUSH2 0xE5D PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xEC7 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0xEF9 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST DUP3 PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xF49 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0xF0F JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xF71 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xF99 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0xFA3 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST DUP3 PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xFF3 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0xFB9 JUMP JUMPDEST POP PUSH2 0x1024 PUSH1 0x9 SLOAD PUSH2 0x1016 PUSH1 0x8 SLOAD DUP5 PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1064 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C4 PUSH1 0x0 PUSH2 0x1BB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD SUB PUSH2 0x1107 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x117A JUMP JUMPDEST PUSH2 0x1177 PUSH2 0x1166 PUSH1 0xC SLOAD PUSH2 0x1158 PUSH8 0xDE0B6B3A7640000 PUSH2 0x114A DUP8 PUSH2 0x113C PUSH1 0xA SLOAD PUSH2 0x112E PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x1B59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1187 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11A5 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128C TIMESTAMP PUSH2 0xF5C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12A1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BF PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP3 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x13F3 PUSH2 0x13EE PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1429 SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x1486 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1492 DUP3 TIMESTAMP PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x149D DUP2 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x14AB PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15BC JUMPI PUSH2 0x14EE DUP4 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F6 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1614 DUP5 PUSH1 0xC SLOAD PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x166C DUP5 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1766 TIMESTAMP PUSH2 0x1C7F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x17BB JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x17C6 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x198A JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x17E4 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x181B SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x182C DUP8 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1855 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1870 DUP9 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x187A SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1884 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST GT ISZERO PUSH2 0x18AD JUMPI PUSH2 0x18A2 DUP8 PUSH2 0x1C7F JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x198A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x18BD SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x18C7 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18DE DUP10 PUSH2 0x1CB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x18F8 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x194F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x1916 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1920 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x192E SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x193C SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x1948 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0x18FD JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x195C SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x1969 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x1973 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1998 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B6 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A14 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A6A PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A88 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ADE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B44 SWAP1 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1BB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B67 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B7D SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B93 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BA9 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C8B DUP4 PUSH2 0xF5C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CA4 PUSH1 0x7 SLOAD DUP4 PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0x1CC5 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1CD8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0x1CED SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x1CF7 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0x1D01 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D4E JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0x1D26 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1D30 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST DUP3 PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1D47 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0D JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8A DUP3 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9A DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DB7 DUP2 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD3 JUMPI PUSH2 0x1DD2 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFD DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E27 DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP2 EQ PUSH2 0x1E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E44 DUP2 PUSH2 0x1E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP7 DUP3 DUP8 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E82 DUP7 DUP3 DUP8 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E93 DUP7 DUP3 DUP8 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB2 DUP2 PUSH2 0x1E9D JUMP JUMPDEST DUP2 EQ PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ECF DUP2 PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP6 DUP3 DUP7 ADD PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F0B DUP6 DUP3 DUP7 ADD PUSH2 0x1EC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1E9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F63 DUP5 DUP3 DUP6 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F75 DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FAD JUMPI PUSH2 0x1FAC PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBB DUP6 DUP3 DUP7 ADD PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FCC DUP6 DUP3 DUP7 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFB PUSH2 0x1FF6 PUSH2 0x1FF1 DUP5 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200D DUP3 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201F DUP3 PUSH2 0x2002 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202F DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2075 DUP6 DUP3 DUP7 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2086 DUP6 DUP3 DUP7 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FD PUSH1 0x22 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2108 DUP3 PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212C DUP2 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2148 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F15 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2192 PUSH1 0x1F DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x219D DUP3 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C1 DUP2 PUSH2 0x2185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x220D DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2225 JUMPI PUSH2 0x2224 PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2240 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x224D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DF4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2263 DUP2 PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227F JUMPI PUSH2 0x227E PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228D DUP5 DUP3 DUP6 ADD PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F2 PUSH1 0x22 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x22FD DUP3 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2321 DUP2 PUSH2 0x22E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2333 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x233E DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2356 JUMPI PUSH2 0x2355 PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2396 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23A1 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x235C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C7 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23D2 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x23E0 DUP2 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x23F7 JUMPI PUSH2 0x23F6 PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2409 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x243B JUMPI PUSH2 0x243A PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247C PUSH1 0xE DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2487 DUP3 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24AB DUP2 PUSH2 0x246F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BD DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x24C8 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24D8 JUMPI PUSH2 0x24D7 PUSH2 0x235C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253F PUSH1 0x26 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x254A DUP3 PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x256E DUP2 PUSH2 0x2532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH25 0x807F9D05823ED5145F7DAD8C0919EC3A1DE009B03EA856B900 CHAINID CALLCODE 0x28 0xD2 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "371:7546:1:-:0;;;581:17;551:47;;666:10;636:40;;722:1;683:40;;771:4;730:45;;371:7546;;;;;;;;;;603:32:0;622:12;:10;;;:12;;:::i;:::-;603:18;;;:32;;:::i;:::-;1701:1:2;1806:7;:22;;;;371:7546:1;;63:98:0;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;371:7546:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getRemainPool_513": {
									"entryPoint": 7344,
									"id": 513,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getRewardRate_608": {
									"entryPoint": 7295,
									"id": 608,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_10": {
									"entryPoint": 7089,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 7097,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1829": {
									"entryPoint": 7067,
									"id": 1829,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimedBalances_236": {
									"entryPoint": 6033,
									"id": 236,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@curTime_362": {
									"entryPoint": 4753,
									"id": 362,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1874": {
									"entryPoint": 7045,
									"id": 1874,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_690": {
									"entryPoint": 1707,
									"id": 690,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@emergencyWithdrawToken_1013": {
									"entryPoint": 4761,
									"id": 1013,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_994": {
									"entryPoint": 6544,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurRewardPool_385": {
									"entryPoint": 4737,
									"id": 385,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurRewardRate_585": {
									"entryPoint": 5979,
									"id": 585,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainPool_574": {
									"entryPoint": 3762,
									"id": 574,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardPool_452": {
									"entryPoint": 3932,
									"id": 452,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReward_949": {
									"entryPoint": 2711,
									"id": 949,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTimeWeightedAveRate_854": {
									"entryPoint": 6057,
									"id": 854,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAdmin_96": {
									"entryPoint": 2620,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_617": {
									"entryPoint": 4306,
									"id": 617,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_216": {
									"entryPoint": 5973,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@modificationAdmin_174": {
									"entryPoint": 2251,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1859": {
									"entryPoint": 7023,
									"id": 1859,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_84": {
									"entryPoint": 4695,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powersOf_374": {
									"entryPoint": 5900,
									"id": 374,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rateIntervalDenominator_214": {
									"entryPoint": 4300,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateIntervalNumerator_211": {
									"entryPoint": 2705,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateInterval_208": {
									"entryPoint": 4142,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_109": {
									"entryPoint": 4158,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_218": {
									"entryPoint": 6748,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_650": {
									"entryPoint": 4338,
									"id": 650,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardsToken_192": {
									"entryPoint": 5995,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_196": {
									"entryPoint": 2071,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setConfig_329": {
									"entryPoint": 2101,
									"id": 329,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRewardToken_963": {
									"entryPoint": 4479,
									"id": 963,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStartTime_345": {
									"entryPoint": 3666,
									"id": 345,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_899": {
									"entryPoint": 5016,
									"id": 899,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_205": {
									"entryPoint": 4294,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1844": {
									"entryPoint": 7001,
									"id": 1844,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalPowers_353": {
									"entryPoint": 4148,
									"id": 353,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_203": {
									"entryPoint": 2095,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_131": {
									"entryPoint": 6754,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLastUpdateTime_228": {
									"entryPoint": 4314,
									"id": 228,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_224": {
									"entryPoint": 4671,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7872,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8788,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 8086,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 8272,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 7754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8044,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1132_to_t_address_fromStack": {
									"entryPoint": 8230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8432,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8581,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8747,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7972,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 8499,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1132__to_t_address__fromStack_reversed": {
									"entryPoint": 8245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 8336,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8695,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9099,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7519,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7658,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1132_to_t_address": {
									"entryPoint": 8212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8160,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 8150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9214,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9394,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8648,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9052,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 9286,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb": {
									"entryPoint": 8353,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045": {
									"entryPoint": 8854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8540,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7849,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7710,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14378:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:7"
															},
															"nodeType": "YulIf",
															"src": "1664:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:7",
														"type": ""
													}
												],
												"src": "1611:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:7",
														"type": ""
													}
												],
												"src": "1739:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2032:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2032:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2005:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2001:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:7"
															},
															"nodeType": "YulIf",
															"src": "1994:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2123:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2138:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2142:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2167:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2202:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2213:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2198:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2198:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2222:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2177:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2177:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2167:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2250:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2265:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2269:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2295:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2330:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2341:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2326:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2326:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2305:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2295:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2378:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2393:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2407:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2397:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2423:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2433:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2423:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1938:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1949:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1969:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1977:6:7",
														"type": ""
													}
												],
												"src": "1884:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2561:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2586:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2579:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2579:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2561:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2543:7:7",
														"type": ""
													}
												],
												"src": "2509:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2699:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2708:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2711:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2701:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2701:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2668:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2690:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2675:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2675:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2665:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2665:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:40:7"
															},
															"nodeType": "YulIf",
															"src": "2655:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2638:5:7",
														"type": ""
													}
												],
												"src": "2605:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2776:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2786:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2808:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2795:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2786:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2848:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2824:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2824:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2754:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2762:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2770:5:7",
														"type": ""
													}
												],
												"src": "2727:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2992:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2994:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2994:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2994:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2976:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2963:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2988:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2959:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:32:7"
															},
															"nodeType": "YulIf",
															"src": "2956:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3085:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3100:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3104:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3129:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3164:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3175:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3160:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3160:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3184:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3139:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3139:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3129:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3212:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3227:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3241:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3231:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3257:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3289:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3300:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3285:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3285:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3309:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3267:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3267:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3257:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2908:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2919:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2931:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2939:6:7",
														"type": ""
													}
												],
												"src": "2866:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3399:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3436:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3421:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3421:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3409:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3387:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3394:3:7",
														"type": ""
													}
												],
												"src": "3340:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3557:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3569:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3557:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3631:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3655:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3640:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3640:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3593:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3593:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3519:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3531:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3542:4:7",
														"type": ""
													}
												],
												"src": "3455:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3737:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3783:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3785:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3785:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3785:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3758:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3767:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3754:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3754:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3779:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3750:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:32:7"
															},
															"nodeType": "YulIf",
															"src": "3747:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3876:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3891:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3905:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3895:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3920:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3955:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3966:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3951:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3951:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3975:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3930:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3930:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3920:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3707:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3718:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3730:6:7",
														"type": ""
													}
												],
												"src": "3671:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4071:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4088:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4111:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4093:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4093:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4081:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4059:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4066:3:7",
														"type": ""
													}
												],
												"src": "4006:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4238:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4250:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4238:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4318:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4331:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4342:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4327:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4327:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4274:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4274:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4200:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4212:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4223:4:7",
														"type": ""
													}
												],
												"src": "4130:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4441:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4487:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4489:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4489:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4489:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4462:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4471:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4458:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4483:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4454:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:32:7"
															},
															"nodeType": "YulIf",
															"src": "4451:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4580:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4595:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4599:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4624:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4659:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4670:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4655:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4655:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4679:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4634:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4624:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4707:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4722:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4736:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4726:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4752:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4787:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4798:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4783:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4783:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4807:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4762:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4762:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4752:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4403:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4414:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4426:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4434:6:7",
														"type": ""
													}
												],
												"src": "4358:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4870:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4880:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4887:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4856:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4866:3:7",
														"type": ""
													}
												],
												"src": "4838:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4964:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4974:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5032:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5014:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5014:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5005:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4987:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4974:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4944:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4954:9:7",
														"type": ""
													}
												],
												"src": "4904:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5166:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5135:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5122:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5092:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5102:9:7",
														"type": ""
													}
												],
												"src": "5052:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5259:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5269:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5313:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5282:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1132_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5239:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5249:9:7",
														"type": ""
													}
												],
												"src": "5184:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5411:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5428:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5479:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1132_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5433:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5421:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5421:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5421:65:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1132_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5399:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5406:3:7",
														"type": ""
													}
												],
												"src": "5331:161:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5611:139:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5621:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5633:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5629:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5621:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5716:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5729:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5740:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5725:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1132_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5657:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:86:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5657:86:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1132__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5583:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5606:4:7",
														"type": ""
													}
												],
												"src": "5498:252:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5839:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5885:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5887:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5887:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5887:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5860:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5869:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5881:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5852:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:32:7"
															},
															"nodeType": "YulIf",
															"src": "5849:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5978:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5993:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6007:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5997:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6022:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6057:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6068:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6053:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6053:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6077:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6032:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6032:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6022:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6105:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6120:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6134:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6124:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6150:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6185:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6196:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6181:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6181:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6205:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6160:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6150:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5801:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5812:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5824:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5832:6:7",
														"type": ""
													}
												],
												"src": "5756:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6332:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6349:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6354:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6342:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6370:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6389:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6385:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6370:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6304:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6309:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6320:11:7",
														"type": ""
													}
												],
												"src": "6236:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6517:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6539:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6547:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6535:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6535:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6551:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6528:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6528:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6528:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6607:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6603:15:7"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6620:4:7",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6596:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6596:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6509:6:7",
														"type": ""
													}
												],
												"src": "6411:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6784:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6794:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6860:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6865:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6801:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6966:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																	"nodeType": "YulIdentifier",
																	"src": "6877:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6877:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6979:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6990:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6995:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6986:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6986:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6979:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6772:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6780:3:7",
														"type": ""
													}
												],
												"src": "6638:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7181:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7191:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7203:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7199:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7199:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7191:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7238:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7249:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7234:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7234:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7257:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7263:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7253:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7253:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7227:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7227:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7227:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7283:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7417:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7291:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7283:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7161:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7176:4:7",
														"type": ""
													}
												],
												"src": "7010:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7549:194:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7559:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7571:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7582:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7567:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7559:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7633:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7646:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7657:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7595:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7595:65:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7708:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7721:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7732:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7717:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7717:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7670:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7513:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7525:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7533:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7544:4:7",
														"type": ""
													}
												],
												"src": "7435:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7855:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7877:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7885:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7873:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7873:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7889:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7866:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7847:6:7",
														"type": ""
													}
												],
												"src": "7749:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8082:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8092:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8158:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8163:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8099:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8099:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8092:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8264:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "8175:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8175:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8175:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8277:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8288:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8293:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8284:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8284:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8277:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8070:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8078:3:7",
														"type": ""
													}
												],
												"src": "7936:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8479:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8489:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8501:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8512:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8489:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8536:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8547:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8532:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8532:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8555:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8551:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8525:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8525:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8581:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8715:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8589:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8581:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8459:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8474:4:7",
														"type": ""
													}
												],
												"src": "8308:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8761:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8778:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8781:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8771:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8771:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8771:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8875:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8878:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8868:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8868:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8868:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8899:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8902:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8892:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8892:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8892:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8733:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8963:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8973:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "8996:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8978:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8978:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "8973:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9007:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9030:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9012:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9012:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9007:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9041:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9052:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9055:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9048:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9048:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9041:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9081:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9083:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9083:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9083:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9073:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "9076:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9070:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9070:10:7"
															},
															"nodeType": "YulIf",
															"src": "9067:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "8950:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "8953:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "8959:3:7",
														"type": ""
													}
												],
												"src": "8919:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9242:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9252:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9264:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9275:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9260:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9260:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9252:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9332:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9345:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9356:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9341:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9341:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9288:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9288:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9288:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9413:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9426:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9437:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9422:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9422:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9369:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9369:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9369:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9206:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9218:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9226:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9237:4:7",
														"type": ""
													}
												],
												"src": "9116:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9514:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9524:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9539:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9533:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9533:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9524:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9579:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9555:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9555:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9555:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9492:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9500:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9508:5:7",
														"type": ""
													}
												],
												"src": "9454:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9671:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9717:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9719:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9719:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9719:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9692:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9701:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9688:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9688:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9713:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9684:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9684:32:7"
															},
															"nodeType": "YulIf",
															"src": "9681:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "9810:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9825:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9829:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9854:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9897:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9908:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9893:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9893:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9917:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9864:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9864:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9854:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9641:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9652:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9664:6:7",
														"type": ""
													}
												],
												"src": "9597:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10054:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10076:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10084:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10072:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10072:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10088:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10065:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10065:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10065:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10144:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10152:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10140:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10140:15:7"
																	},
																	{
																		"hexValue": "696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10157:4:7",
																		"type": "",
																		"value": "in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10133:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10133:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10133:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10046:6:7",
														"type": ""
													}
												],
												"src": "9948:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10321:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10331:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10397:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10402:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10338:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10338:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10331:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10503:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																	"nodeType": "YulIdentifier",
																	"src": "10414:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10414:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10414:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10516:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10527:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10532:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10523:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10523:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10516:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10309:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10317:3:7",
														"type": ""
													}
												],
												"src": "10175:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10718:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10728:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10740:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10751:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10736:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10736:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10728:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10775:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10786:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10771:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10771:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10794:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10800:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10790:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10790:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10764:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10764:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10764:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10820:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10954:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10828:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10828:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10820:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10698:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10713:4:7",
														"type": ""
													}
												],
												"src": "10547:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11017:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11027:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11050:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11032:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11032:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11027:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11061:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11084:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11066:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11066:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11061:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11095:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11107:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11110:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11103:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11103:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11095:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11137:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11139:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11139:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11139:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "11128:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11134:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11125:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11125:11:7"
															},
															"nodeType": "YulIf",
															"src": "11122:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11003:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11006:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11012:4:7",
														"type": ""
													}
												],
												"src": "10972:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11200:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11217:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11220:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11210:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11210:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11210:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11314:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11317:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11307:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11307:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11307:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11338:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11341:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11331:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11331:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11331:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11172:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11400:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11410:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11433:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11415:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11415:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11410:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11444:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11467:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11449:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11449:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11444:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11491:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11493:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11493:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11493:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11488:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11481:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:9:7"
															},
															"nodeType": "YulIf",
															"src": "11478:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11523:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11532:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11535:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11528:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11528:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11523:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11389:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11392:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11398:1:7",
														"type": ""
													}
												],
												"src": "11358:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11597:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11607:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11630:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11612:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11612:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11607:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11641:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11664:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11646:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11646:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11641:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11675:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11698:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11701:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11694:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11694:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11679:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11712:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11741:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11723:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11723:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11712:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11930:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11932:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11932:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11932:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11863:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11856:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11856:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11886:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11893:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11902:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11889:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11889:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11883:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11883:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11836:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11836:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11816:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11816:113:7"
															},
															"nodeType": "YulIf",
															"src": "11813:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11580:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11583:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11589:7:7",
														"type": ""
													}
												],
												"src": "11549:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12008:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12018:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12045:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12027:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12027:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12018:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12141:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12143:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12143:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12143:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12066:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12073:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12063:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12063:77:7"
															},
															"nodeType": "YulIf",
															"src": "12060:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12172:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12183:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12190:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12179:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12172:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11994:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12004:3:7",
														"type": ""
													}
												],
												"src": "11965:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12310:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12332:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12340:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12328:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12328:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12344:16:7",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12321:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12321:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12321:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12302:6:7",
														"type": ""
													}
												],
												"src": "12204:164:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12520:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12530:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12596:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12601:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12537:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12530:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12702:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nodeType": "YulIdentifier",
																	"src": "12613:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12613:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12613:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12715:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12726:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12731:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12722:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12722:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12715:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12508:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12516:3:7",
														"type": ""
													}
												],
												"src": "12374:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12917:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12927:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12939:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12950:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12935:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12927:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12985:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12970:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12993:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12999:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12989:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12989:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12963:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13019:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13153:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13027:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13019:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12897:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12912:4:7",
														"type": ""
													}
												],
												"src": "12746:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13205:142:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13215:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13238:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13220:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13220:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13215:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13249:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13272:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13254:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13254:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13249:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13296:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13298:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13298:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13298:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13293:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13286:9:7"
															},
															"nodeType": "YulIf",
															"src": "13283:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13327:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13336:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13339:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "13332:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13327:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13194:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13197:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13203:1:7",
														"type": ""
													}
												],
												"src": "13171:176:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13459:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13481:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13489:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13477:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13493:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13470:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13470:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13470:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13549:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13557:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13545:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13545:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13562:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13538:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13538:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13538:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13451:6:7",
														"type": ""
													}
												],
												"src": "13353:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13730:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13740:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13806:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13811:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13747:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13747:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13740:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13912:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13823:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13823:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13823:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13925:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13936:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13941:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13932:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13925:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13718:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13726:3:7",
														"type": ""
													}
												],
												"src": "13584:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14127:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14137:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14149:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14160:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14145:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14137:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14184:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14195:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14180:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14180:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14203:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14209:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14199:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14173:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14173:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14173:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14229:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14363:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14237:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14237:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14229:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14107:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14122:4:7",
														"type": ""
													}
												],
												"src": "13956:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1132_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1132_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1132_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1132__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1132_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the adm\")\n\n        mstore(add(memPtr, 32), \"in\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102105760003560e01c80638107368b11610125578063b79ec812116100ad578063d42b779d1161007c578063d42b779d14610607578063da4f843114610637578063db2e21bc14610667578063df136d6514610671578063f2fde38b1461068f57610210565b8063b79ec8121461057d578063c8f33c91146105ad578063cdda56e0146105cb578063d1af0c7d146105e957610210565b80638da5cb5b116100f45780638da5cb5b146104eb5780639499c549146105095780639a5b17b014610527578063a4c3b09114610545578063adc9772e1461056157610210565b80638107368b1461043f578063874c120b1461046f5780638aee81271461049f5780638b876347146104bb57610210565b80633e0a322d116101a85780636917c501116101775780636917c501146103bd578063715018a6146103db57806378e97925146103e55780637a6fcee71461040357806380faa57d1461042157610210565b80633e0a322d146103235780634dbdc4eb1461033f5780635cfa91f41461036f5780636139d4b41461039f57610210565b806318e20ecf116101e457806318e20ecf146102af57806324d7806c146102cb5780633c4045cf146102fb5780633d18b9121461031957610210565b80628cc262146102155780630700037d146102455780630e15561a14610275578063129ee21a14610293575b600080fd5b61022f600480360381019061022a9190611dbd565b6106ab565b60405161023c9190611e03565b60405180910390f35b61025f600480360381019061025a9190611dbd565b610817565b60405161026c9190611e03565b60405180910390f35b61027d61082f565b60405161028a9190611e03565b60405180910390f35b6102ad60048036038101906102a89190611e4a565b610835565b005b6102c960048036038101906102c49190611ed5565b6108cb565b005b6102e560048036038101906102e09190611dbd565b610a3c565b6040516102f29190611f24565b60405180910390f35b610303610a91565b6040516103109190611e03565b60405180910390f35b610321610a97565b005b61033d60048036038101906103389190611f3f565b610e52565b005b61035960048036038101906103549190611f3f565b610eb2565b6040516103669190611e03565b60405180910390f35b61038960048036038101906103849190611f3f565b610f5c565b6040516103969190611e03565b60405180910390f35b6103a761102e565b6040516103b49190611e03565b60405180910390f35b6103c5611034565b6040516103d29190611e03565b60405180910390f35b6103e361103e565b005b6103ed6110c6565b6040516103fa9190611e03565b60405180910390f35b61040b6110cc565b6040516104189190611e03565b60405180910390f35b6104296110d2565b6040516104369190611e03565b60405180910390f35b61045960048036038101906104549190611dbd565b6110da565b6040516104669190611e03565b60405180910390f35b61048960048036038101906104849190611f3f565b6110f2565b6040516104969190611e03565b60405180910390f35b6104b960048036038101906104b49190611dbd565b61117f565b005b6104d560048036038101906104d09190611dbd565b61123f565b6040516104e29190611e03565b60405180910390f35b6104f3611257565b6040516105009190611f7b565b60405180910390f35b610511611281565b60405161051e9190611e03565b60405180910390f35b61052f611291565b60405161053c9190611e03565b60405180910390f35b61055f600480360381019061055a9190611f96565b611299565b005b61057b60048036038101906105769190611f96565b611398565b005b61059760048036038101906105929190611dbd565b61170c565b6040516105a49190611e03565b60405180910390f35b6105b5611755565b6040516105c29190611e03565b60405180910390f35b6105d361175b565b6040516105e09190611e03565b60405180910390f35b6105f161176b565b6040516105fe9190612035565b60405180910390f35b610621600480360381019061061c9190611dbd565b611791565b60405161062e9190611e03565b60405180910390f35b610651600480360381019061064c9190612050565b6117a9565b60405161065e9190611e03565b60405180910390f35b61066f611990565b005b610679611a5c565b6040516106869190611e03565b60405180910390f35b6106a960048036038101906106a49190611dbd565b611a62565b005b6000806106f7600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426117a9565b905061080f600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610801670de0b6b3a76400006107f36107a5600d60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610797886110f2565b611b5990919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b6f90919063ffffffff16565b611b8590919063ffffffff16565b611b9b90919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b61083d611bb1565b73ffffffffffffffffffffffffffffffffffffffff1661085b611257565b73ffffffffffffffffffffffffffffffffffffffff16146108b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a890612113565b60405180910390fd5b826007819055508160088190555080600981905550505050565b6108d3611bb1565b73ffffffffffffffffffffffffffffffffffffffff166108f1611257565b73ffffffffffffffffffffffffffffffffffffffff1614610947576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161093e90612113565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16836040516109da929190612133565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b6002805403610adb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ad2906121a8565b60405180910390fd5b60028081905550336000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610b365760065490505b6000610b4282426117a9565b9050610b4d816110f2565b600b81905550610b5b6110d2565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c6c57610b9e836106ab565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610e445780601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d0891906121f7565b925050819055506000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610db192919061222b565b6020604051808303816000875af1158015610dd0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610df49190612269565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610e3b9190611e03565b60405180910390a25b505050506001600281905550565b610e62610e5d611bb1565b610a3c565b610ea1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9890612308565b60405180910390fd5b8060068190555080600a8190555050565b60008060065403610ec7576006549050610f57565b600654821015610eda5760009050610f57565b6000600160075460065485610eef9190612328565b610ef9919061238b565b610f0391906121f7565b90506000600554905060005b82811015610f505760095460085483610f2891906123bc565b610f32919061238b565b82610f3d9190612328565b915080610f49906123fe565b9050610f0f565b5080925050505b919050565b60008060065403610f71576005549050611029565b600654821015610f845760009050611029565b6000600160075460065485610f999190612328565b610fa3919061238b565b610fad91906121f7565b90506000600554905060005b82811015610ffa5760095460085483610fd291906123bc565b610fdc919061238b565b82610fe79190612328565b915080610ff3906123fe565b9050610fb9565b5061102460095461101660085484611b6f90919063ffffffff16565b611b8590919063ffffffff16565b925050505b919050565b60075481565b6000600c54905090565b611046611bb1565b73ffffffffffffffffffffffffffffffffffffffff16611064611257565b73ffffffffffffffffffffffffffffffffffffffff16146110ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110b190612113565b60405180910390fd5b6110c46000611bb9565b565b60065481565b60095481565b600042905090565b600e6020528060005260406000206000915090505481565b600080600c540361110757600b54905061117a565b611177611166600c54611158670de0b6b3a764000061114a8761113c600a5461112e6110d2565b611b5990919063ffffffff16565b611b6f90919063ffffffff16565b611b6f90919063ffffffff16565b611b8590919063ffffffff16565b600b54611b9b90919063ffffffff16565b90505b919050565b611187611bb1565b73ffffffffffffffffffffffffffffffffffffffff166111a5611257565b73ffffffffffffffffffffffffffffffffffffffff16146111fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f290612113565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600061128c42610f5c565b905090565b600042905090565b6112a1611bb1565b73ffffffffffffffffffffffffffffffffffffffff166112bf611257565b73ffffffffffffffffffffffffffffffffffffffff1614611315576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130c90612113565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161135092919061222b565b6020604051808303816000875af115801561136f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113939190612269565b505050565b60028054036113dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d3906121a8565b60405180910390fd5b600280819055506113f36113ee611bb1565b610a3c565b611432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161142990612308565b60405180910390fd5b816000600e60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060065481116114865760065490505b600061149282426117a9565b905061149d816110f2565b600b819055506114ab6110d2565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146115bc576114ee836106ab565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600e60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b600084116115ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f690612492565b60405180910390fd5b61161484600c54611b9b90919063ffffffff16565b600c8190555061166c84600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611b9b90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d856040516116f59190611e03565b60405180910390a250505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b600061176642611c7f565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60106020528060005260406000206000915090505481565b60008060065414806117bb5750818310155b806117c65750600083145b156117d4576000905061198a565b6006548310156117e45760065492505b6000600754600754600654866117fa9190612328565b61180491906124b2565b6007546118119190612328565b61181b91906124b2565b905060006007548261182c87610f5c565b61183691906123bc565b611840919061238b565b90506000600754600654866118559190612328565b61185f91906124b2565b905060006007548261187088610f5c565b61187a91906123bc565b611884919061238b565b905085848861189391906121f7565b11156118ad576118a287611c7f565b94505050505061198a565b6000848884896118bd9190612328565b6118c79190612328565b6118d19190612328565b905060006118de89611cb0565b905060008060008390506000600754866118f8919061238b565b905060005b8181101561194f576009546008548461191691906123bc565b611920919061238b565b9350838361192e9190612328565b9250838561193c91906121f7565b945080611948906123fe565b90506118fd565b508c8c61195c9190612328565b878a8661196991906121f7565b61197391906121f7565b61197d919061238b565b9a50505050505050505050505b92915050565b611998611bb1565b73ffffffffffffffffffffffffffffffffffffffff166119b6611257565b73ffffffffffffffffffffffffffffffffffffffff1614611a0c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0390612113565b60405180910390fd5b611a14611257565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015611a59573d6000803e3d6000fd5b50565b600b5481565b611a6a611bb1565b73ffffffffffffffffffffffffffffffffffffffff16611a88611257565b73ffffffffffffffffffffffffffffffffffffffff1614611ade576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ad590612113565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b4490612555565b60405180910390fd5b611b5681611bb9565b50565b60008183611b679190612328565b905092915050565b60008183611b7d91906123bc565b905092915050565b60008183611b93919061238b565b905092915050565b60008183611ba991906121f7565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611c8b83610f5c565b90506000611ca460075483611b8590919063ffffffff16565b90508092505050919050565b60008060065403611cc5576005549050611d55565b600654821015611cd85760009050611d55565b6000600160075460065485611ced9190612328565b611cf7919061238b565b611d0191906121f7565b90506000600554905060005b82811015611d4e5760095460085483611d2691906123bc565b611d30919061238b565b82611d3b9190612328565b915080611d47906123fe565b9050611d0d565b5080925050505b919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611d8a82611d5f565b9050919050565b611d9a81611d7f565b8114611da557600080fd5b50565b600081359050611db781611d91565b92915050565b600060208284031215611dd357611dd2611d5a565b5b6000611de184828501611da8565b91505092915050565b6000819050919050565b611dfd81611dea565b82525050565b6000602082019050611e186000830184611df4565b92915050565b611e2781611dea565b8114611e3257600080fd5b50565b600081359050611e4481611e1e565b92915050565b600080600060608486031215611e6357611e62611d5a565b5b6000611e7186828701611e35565b9350506020611e8286828701611e35565b9250506040611e9386828701611e35565b9150509250925092565b60008115159050919050565b611eb281611e9d565b8114611ebd57600080fd5b50565b600081359050611ecf81611ea9565b92915050565b60008060408385031215611eec57611eeb611d5a565b5b6000611efa85828601611da8565b9250506020611f0b85828601611ec0565b9150509250929050565b611f1e81611e9d565b82525050565b6000602082019050611f396000830184611f15565b92915050565b600060208284031215611f5557611f54611d5a565b5b6000611f6384828501611e35565b91505092915050565b611f7581611d7f565b82525050565b6000602082019050611f906000830184611f6c565b92915050565b60008060408385031215611fad57611fac611d5a565b5b6000611fbb85828601611da8565b9250506020611fcc85828601611e35565b9150509250929050565b6000819050919050565b6000611ffb611ff6611ff184611d5f565b611fd6565b611d5f565b9050919050565b600061200d82611fe0565b9050919050565b600061201f82612002565b9050919050565b61202f81612014565b82525050565b600060208201905061204a6000830184612026565b92915050565b6000806040838503121561206757612066611d5a565b5b600061207585828601611e35565b925050602061208685828601611e35565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006120fd602283612090565b9150612108826120a1565b604082019050919050565b6000602082019050818103600083015261212c816120f0565b9050919050565b60006040820190506121486000830185611f15565b6121556020830184611f15565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612192601f83612090565b915061219d8261215c565b602082019050919050565b600060208201905081810360008301526121c181612185565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061220282611dea565b915061220d83611dea565b9250828201905080821115612225576122246121c8565b5b92915050565b60006040820190506122406000830185611f6c565b61224d6020830184611df4565b9392505050565b60008151905061226381611ea9565b92915050565b60006020828403121561227f5761227e611d5a565b5b600061228d84828501612254565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b60006122f2602283612090565b91506122fd82612296565b604082019050919050565b60006020820190508181036000830152612321816122e5565b9050919050565b600061233382611dea565b915061233e83611dea565b9250828203905081811115612356576123556121c8565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061239682611dea565b91506123a183611dea565b9250826123b1576123b061235c565b5b828204905092915050565b60006123c782611dea565b91506123d283611dea565b92508282026123e081611dea565b915082820484148315176123f7576123f66121c8565b5b5092915050565b600061240982611dea565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361243b5761243a6121c8565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b600061247c600e83612090565b915061248782612446565b602082019050919050565b600060208201905081810360008301526124ab8161246f565b9050919050565b60006124bd82611dea565b91506124c883611dea565b9250826124d8576124d761235c565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061253f602683612090565b915061254a826124e3565b604082019050919050565b6000602082019050818103600083015261256e81612532565b905091905056fea2646970667358221220e178807f9d05823ed5145f7dad8c0919ec3a1de009b03ea856b90046f228d23664736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x210 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8107368B GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD42B779D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD42B779D EQ PUSH2 0x607 JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x637 JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x667 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x671 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x68F JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5E9 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x509 JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x527 JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x545 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x561 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x8107368B EQ PUSH2 0x43F JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x4BB JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x3BD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3DB JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x403 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x421 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x323 JUMPI DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x33F JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x39F JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH4 0x18E20ECF GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2FB JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x319 JUMPI PUSH2 0x210 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x215 JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x245 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x275 JUMPI DUP1 PUSH4 0x129EE21A EQ PUSH2 0x293 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22A SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25A SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x817 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH2 0x82F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AD PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x1E4A JUMP JUMPDEST PUSH2 0x835 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F2 SWAP2 SWAP1 PUSH2 0x1F24 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH2 0xA91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x310 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x321 PUSH2 0xA97 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x338 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xE52 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x359 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x354 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xEB2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x366 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x389 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x384 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0xF5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x396 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A7 PUSH2 0x102E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B4 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C5 PUSH2 0x1034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D2 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E3 PUSH2 0x103E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3ED PUSH2 0x10C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3FA SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x40B PUSH2 0x10CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x418 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x429 PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x436 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x459 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x454 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x466 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x489 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x484 SWAP2 SWAP1 PUSH2 0x1F3F JUMP JUMPDEST PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x117F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x123F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4F3 PUSH2 0x1257 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x500 SWAP2 SWAP1 PUSH2 0x1F7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x511 PUSH2 0x1281 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51E SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52F PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53C SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x55F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x55A SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x1299 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x1F96 JUMP JUMPDEST PUSH2 0x1398 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x170C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0x1755 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5D3 PUSH2 0x175B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5F1 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5FE SWAP2 SWAP1 PUSH2 0x2035 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x621 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x61C SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x1791 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x651 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x64C SWAP2 SWAP1 PUSH2 0x2050 JUMP JUMPDEST PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x65E SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66F PUSH2 0x1990 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x679 PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x686 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6A9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6A4 SWAP2 SWAP1 PUSH2 0x1DBD JUMP JUMPDEST PUSH2 0x1A62 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6F7 PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x80F PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x801 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7F3 PUSH2 0x7A5 PUSH1 0xD PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x797 DUP9 PUSH2 0x10F2 JUMP JUMPDEST PUSH2 0x1B59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x83D PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x85B PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8B1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A8 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8F1 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x947 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x93E SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x9DA SWAP3 SWAP2 SWAP1 PUSH2 0x2133 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xADB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAD2 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xB36 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xB42 DUP3 TIMESTAMP PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP PUSH2 0xB4D DUP2 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB5B PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC6C JUMPI PUSH2 0xB9E DUP4 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xE44 JUMPI DUP1 PUSH1 0x10 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD08 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB1 SWAP3 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xDD0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDF4 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE3B SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xE62 PUSH2 0xE5D PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH2 0xEA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE98 SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xEC7 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xEDA JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF57 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xEEF SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0xEF9 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0xF03 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF50 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xF28 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0xF32 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST DUP3 PUSH2 0xF3D SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xF49 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0xF0F JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xF71 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xF84 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1029 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xF99 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0xFA3 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0xFAD SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xFFA JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0xFDC SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST DUP3 PUSH2 0xFE7 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xFF3 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0xFB9 JUMP JUMPDEST POP PUSH2 0x1024 PUSH1 0x9 SLOAD PUSH2 0x1016 PUSH1 0x8 SLOAD DUP5 PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1046 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1064 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10B1 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10C4 PUSH1 0x0 PUSH2 0x1BB9 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xC SLOAD SUB PUSH2 0x1107 JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x117A JUMP JUMPDEST PUSH2 0x1177 PUSH2 0x1166 PUSH1 0xC SLOAD PUSH2 0x1158 PUSH8 0xDE0B6B3A7640000 PUSH2 0x114A DUP8 PUSH2 0x113C PUSH1 0xA SLOAD PUSH2 0x112E PUSH2 0x10D2 JUMP JUMPDEST PUSH2 0x1B59 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B6F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1187 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11A5 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F2 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x128C TIMESTAMP PUSH2 0xF5C JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x12A1 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BF PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1315 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x130C SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1350 SWAP3 SWAP2 SWAP1 PUSH2 0x222B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x136F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1393 SWAP2 SWAP1 PUSH2 0x2269 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x13DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D3 SWAP1 PUSH2 0x21A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x13F3 PUSH2 0x13EE PUSH2 0x1BB1 JUMP JUMPDEST PUSH2 0xA3C JUMP JUMPDEST PUSH2 0x1432 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1429 SWAP1 PUSH2 0x2308 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x1486 JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x1492 DUP3 TIMESTAMP PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP PUSH2 0x149D DUP2 PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x14AB PUSH2 0x10D2 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x15BC JUMPI PUSH2 0x14EE DUP4 PUSH2 0x6AB JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xE PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F6 SWAP1 PUSH2 0x2492 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1614 DUP5 PUSH1 0xC SLOAD PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xC DUP2 SWAP1 SSTORE POP PUSH2 0x166C DUP5 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1B9B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x1E03 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1766 TIMESTAMP PUSH2 0x1C7F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x10 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x17BB JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x17C6 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x17D4 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x198A JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x17E4 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x17FA SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1811 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x181B SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x182C DUP8 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x1836 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1840 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1855 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x185F SWAP2 SWAP1 PUSH2 0x24B2 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1870 DUP9 PUSH2 0xF5C JUMP JUMPDEST PUSH2 0x187A SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1884 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x1893 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST GT ISZERO PUSH2 0x18AD JUMPI PUSH2 0x18A2 DUP8 PUSH2 0x1C7F JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x198A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x18BD SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x18C7 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x18D1 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x18DE DUP10 PUSH2 0x1CB0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x18F8 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x194F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x1916 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1920 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x192E SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x193C SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x1948 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0x18FD JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x195C SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x1969 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x1973 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST PUSH2 0x197D SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1998 PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B6 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A0C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A03 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A14 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1A59 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A6A PUSH2 0x1BB1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A88 PUSH2 0x1257 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1ADE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AD5 SWAP1 PUSH2 0x2113 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B44 SWAP1 PUSH2 0x2555 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1BB9 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B67 SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B7D SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1B93 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1BA9 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1C8B DUP4 PUSH2 0xF5C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1CA4 PUSH1 0x7 SLOAD DUP4 PUSH2 0x1B85 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0x1CC5 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0x1CD8 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x1D55 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0x1CED SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST PUSH2 0x1CF7 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST PUSH2 0x1D01 SWAP2 SWAP1 PUSH2 0x21F7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D4E JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0x1D26 SWAP2 SWAP1 PUSH2 0x23BC JUMP JUMPDEST PUSH2 0x1D30 SWAP2 SWAP1 PUSH2 0x238B JUMP JUMPDEST DUP3 PUSH2 0x1D3B SWAP2 SWAP1 PUSH2 0x2328 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1D47 SWAP1 PUSH2 0x23FE JUMP JUMPDEST SWAP1 POP PUSH2 0x1D0D JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D8A DUP3 PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D9A DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP2 EQ PUSH2 0x1DA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1DB7 DUP2 PUSH2 0x1D91 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DD3 JUMPI PUSH2 0x1DD2 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE1 DUP5 DUP3 DUP6 ADD PUSH2 0x1DA8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DFD DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E18 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E27 DUP2 PUSH2 0x1DEA JUMP JUMPDEST DUP2 EQ PUSH2 0x1E32 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E44 DUP2 PUSH2 0x1E1E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1E63 JUMPI PUSH2 0x1E62 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E71 DUP7 DUP3 DUP8 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1E82 DUP7 DUP3 DUP8 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1E93 DUP7 DUP3 DUP8 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB2 DUP2 PUSH2 0x1E9D JUMP JUMPDEST DUP2 EQ PUSH2 0x1EBD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ECF DUP2 PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP6 DUP3 DUP7 ADD PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F0B DUP6 DUP3 DUP7 ADD PUSH2 0x1EC0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F1E DUP2 PUSH2 0x1E9D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F39 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F15 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F55 JUMPI PUSH2 0x1F54 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F63 DUP5 DUP3 DUP6 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F75 DUP2 PUSH2 0x1D7F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F90 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1F6C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FAD JUMPI PUSH2 0x1FAC PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FBB DUP6 DUP3 DUP7 ADD PUSH2 0x1DA8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FCC DUP6 DUP3 DUP7 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFB PUSH2 0x1FF6 PUSH2 0x1FF1 DUP5 PUSH2 0x1D5F JUMP JUMPDEST PUSH2 0x1FD6 JUMP JUMPDEST PUSH2 0x1D5F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x200D DUP3 PUSH2 0x1FE0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x201F DUP3 PUSH2 0x2002 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x202F DUP2 PUSH2 0x2014 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x204A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2026 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2067 JUMPI PUSH2 0x2066 PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2075 DUP6 DUP3 DUP7 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2086 DUP6 DUP3 DUP7 ADD PUSH2 0x1E35 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20FD PUSH1 0x22 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2108 DUP3 PUSH2 0x20A1 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x212C DUP2 PUSH2 0x20F0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2148 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F15 JUMP JUMPDEST PUSH2 0x2155 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1F15 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2192 PUSH1 0x1F DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x219D DUP3 PUSH2 0x215C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x21C1 DUP2 PUSH2 0x2185 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2202 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x220D DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2225 JUMPI PUSH2 0x2224 PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2240 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1F6C JUMP JUMPDEST PUSH2 0x224D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1DF4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2263 DUP2 PUSH2 0x1EA9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x227F JUMPI PUSH2 0x227E PUSH2 0x1D5A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x228D DUP5 DUP3 DUP6 ADD PUSH2 0x2254 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22F2 PUSH1 0x22 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x22FD DUP3 PUSH2 0x2296 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2321 DUP2 PUSH2 0x22E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2333 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x233E DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2356 JUMPI PUSH2 0x2355 PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2396 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23A1 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x23B1 JUMPI PUSH2 0x23B0 PUSH2 0x235C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C7 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x23D2 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x23E0 DUP2 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x23F7 JUMPI PUSH2 0x23F6 PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2409 DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x243B JUMPI PUSH2 0x243A PUSH2 0x21C8 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x247C PUSH1 0xE DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x2487 DUP3 PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x24AB DUP2 PUSH2 0x246F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24BD DUP3 PUSH2 0x1DEA JUMP JUMPDEST SWAP2 POP PUSH2 0x24C8 DUP4 PUSH2 0x1DEA JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x24D8 JUMPI PUSH2 0x24D7 PUSH2 0x235C JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x253F PUSH1 0x26 DUP4 PUSH2 0x2090 JUMP JUMPDEST SWAP2 POP PUSH2 0x254A DUP3 PUSH2 0x24E3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x256E DUP2 PUSH2 0x2532 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH25 0x807F9D05823ED5145F7DAD8C0919EC3A1DE009B03EA856B900 CHAINID CALLCODE 0x28 0xD2 CALLDATASIZE PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "371:7546:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5005:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1737:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1642:184:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1004:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;683:40:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7044:357;;;:::i;:::-;;2037:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3687:484;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2611:571;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2167:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1123:103:0;;;:::i;:::-;;605:24:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;730:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4534:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;961:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4649:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7409:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;897:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2489:114:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2268:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7771:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6738:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2370:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;782:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4179:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1073:50;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5344:1384;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7648:115;;;:::i;:::-;;818:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:201:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5005:296:1;5059:7;5079:12;5094:68;5117:18;:27;5136:7;5117:27;;;;;;;;;;;;;;;;5146:15;5094:22;:68::i;:::-;5079:83;;5180:113;5276:7;:16;5284:7;5276:16;;;;;;;;;;;;;;;;5180:91;5266:4;5180:81;5203:57;5228:22;:31;5251:7;5228:31;;;;;;;;;;;;;;;;5203:20;5218:4;5203:14;:20::i;:::-;:24;;:57;;;;:::i;:::-;5180:9;:18;5190:7;5180:18;;;;;;;;;;;;;;;;:22;;:81;;;;:::i;:::-;:85;;:91;;;;:::i;:::-;:95;;:113;;;;:::i;:::-;5173:120;;;5005:296;;;:::o;500:42::-;;;;;;;;;;;;;;;;;:::o;551:47::-;;;;:::o;1737:292::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1890:13:1::1;1875:12;:28;;;;1938:22;1914:21;:46;;;;1997:24;1971:23;:50;;;;1737:292:::0;;;:::o;1642:184:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1755:5:::1;1737:48;;;1763:7;:14:::0;1771:5:::1;1763:14;;;;;;;;;;;;;;;;;;;;;;;;;1779:5;1737:48;;;;;;;:::i;:::-;;;;;;;;1813:5;1796:7;:14:::0;1804:5:::1;1796:14;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1642:184:::0;;:::o;1004:111::-;1067:4;1091:7;:16;1099:7;1091:16;;;;;;;;;;;;;;;;;;;;;;;;;1084:23;;1004:111;;;:::o;683:40:1:-;;;;:::o;7044:357::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;7100:10:1::1;1186:12;1201:18;:27;1220:7;1201:27;;;;;;;;;;;;;;;;1186:42;;1250:9;;1242:4;:17;1239:65;;1283:9;;1276:16;;1239:65;1314:12;1329:45;1352:4;1358:15;1329:22;:45::i;:::-;1314:60;;1408:20;1423:4;1408:14;:20::i;:::-;1385;:43;;;;1456:26;:24;:26::i;:::-;1439:14;:43;;;;1516:1;1497:21;;:7;:21;;;1493:217;;1554:15;1561:7;1554:6;:15::i;:::-;1535:7;:16;1543:7;1535:16;;;;;;;;;;;;;;;:34;;;;1618:20;;1584:22;:31;1607:7;1584:31;;;;;;;;;;;;;;;:54;;;;1683:15;1653:18;:27;1672:7;1653:27;;;;;;;;;;;;;;;:45;;;;1493:217;7123:14:::2;7140:7;:19;7148:10;7140:19;;;;;;;;;;;;;;;;7123:36;;7183:1;7174:6;:10;7170:224;;;7232:6;7201:15;:27;7217:10;7201:27;;;;;;;;;;;;;;;;:37;;;;;;;:::i;:::-;;;;;;;;7275:1;7253:7;:19;7261:10;7253:19;;;;;;;;;;;;;;;:23;;;;7291:12;;;;;;;;;;;:21;;;7313:10;7325:6;7291:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7363:10;7352:30;;;7375:6;7352:30;;;;;;:::i;:::-;;;;;;;;7170:224;7112:289;1175:554:::1;;2484:1:2;1701::::0;2628:7;:22;;;;7044:357:1:o;2037:122::-;821:21:0;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2115:4:1::1;2103:9;:16;;;;2147:4;2130:14;:21;;;;2037:122:::0;:::o;3687:484::-;3745:7;3781:1;3768:9;;:14;3765:62;;3806:9;;3799:16;;;;3765:62;3849:9;;3842:4;:16;3839:56;;;3882:1;3875:8;;;;3839:56;3905:13;3957:1;3942:12;;3929:9;;3922:4;:16;;;;:::i;:::-;3921:33;;;;:::i;:::-;:37;;;;:::i;:::-;3905:53;;3969:13;3985:12;;3969:28;;4012:9;4008:133;4031:5;4027:1;:9;4008:133;;;4106:23;;4082:21;;4074:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;4066:5;:63;;;;:::i;:::-;4058:71;;4038:3;;;;:::i;:::-;;;4008:133;;;;4158:5;4151:12;;;;3687:484;;;;:::o;2611:571::-;2669:7;2705:1;2692:9;;:14;2689:65;;2730:12;;2723:19;;;;2689:65;2774:9;;2767:4;:16;2764:56;;;2807:1;2800:8;;;;2764:56;2830:13;2882:1;2867:12;;2854:9;;2847:4;:16;;;;:::i;:::-;2846:33;;;;:::i;:::-;:37;;;;:::i;:::-;2830:53;;2894:13;2910:12;;2894:28;;2937:9;2933:133;2956:5;2952:1;:9;2933:133;;;3031:23;;3007:21;;2999:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2991:5;:63;;;;:::i;:::-;2983:71;;2963:3;;;;:::i;:::-;;;2933:133;;;;3113:61;3150:23;;3113:32;3123:21;;3113:5;:9;;:32;;;;:::i;:::-;:36;;:61;;;;:::i;:::-;3106:68;;;;2611:571;;;;:::o;636:40::-;;;;:::o;2167:93::-;2213:7;2240:12;;2233:19;;2167:93;:::o;1123:103:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1188:30:::1;1215:1;1188:18;:30::i;:::-;1123:103::o:0;605:24:1:-;;;;:::o;730:45::-;;;;:::o;4534:107::-;4591:7;4618:15;4611:22;;4534:107;:::o;961:53::-;;;;;;;;;;;;;;;;;:::o;4649:348::-;4714:7;4754:1;4738:12;;:17;4734:77;;4779:20;;4772:27;;;;4734:77;4841:148;4884:90;4961:12;;4884:72;4951:4;4884:62;4935:10;4884:46;4915:14;;4884:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;4841:20;;:24;;:148;;;;:::i;:::-;4821:168;;4649:348;;;;:::o;7409:105::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7500:5:1::1;7478:12;;:28;;;;;;;;;;;;;;;;;;7409:105:::0;:::o;897:57::-;;;;;;;;;;;;;;;;;:::o;909:87:0:-;955:7;982:6;;;;;;;;;;;975:13;;909:87;:::o;2489:114:1:-;2538:7;2565:30;2579:15;2565:13;:30::i;:::-;2558:37;;2489:114;:::o;2268:94::-;2312:7;2339:15;2332:22;;2268:94;:::o;7771:143::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7871:5:1::1;7864:22;;;7887:10;7899:6;7864:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7771:143:::0;;:::o;6738:294::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;821:21:0::1;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6828:4:1::2;1186:12;1201:18;:27;1220:7;1201:27;;;;;;;;;;;;;;;;1186:42;;1250:9;;1242:4;:17;1239:65;;1283:9;;1276:16;;1239:65;1314:12;1329:45;1352:4;1358:15;1329:22;:45::i;:::-;1314:60;;1408:20;1423:4;1408:14;:20::i;:::-;1385;:43;;;;1456:26;:24;:26::i;:::-;1439:14;:43;;;;1516:1;1497:21;;:7;:21;;;1493:217;;1554:15;1561:7;1554:6;:15::i;:::-;1535:7;:16;1543:7;1535:16;;;;;;;;;;;;;;;:34;;;;1618:20;;1584:22;:31;1607:7;1584:31;;;;;;;;;;;;;;;:54;;;;1683:15;1653:18;:27;1672:7;1653:27;;;;;;;;;;;;;;;:45;;;;1493:217;6862:1:::3;6853:6;:10;6845:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;6908:24;6925:6;6908:12;;:16;;:24;;;;:::i;:::-;6893:12;:39;;;;6961:27;6981:6;6961:9;:15;6971:4;6961:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;6943:9;:15;6953:4;6943:15;;;;;;;;;;;;;;;:45;;;;7011:4;7004:20;;;7017:6;7004:20;;;;;;:::i;:::-;;;;;;;;1175:554:::2;;892:1:0;1701::2::0;2628:7;:22;;;;6738:294:1;;:::o;2370:111::-;2428:7;2455:9;:18;2465:7;2455:18;;;;;;;;;;;;;;;;2448:25;;2370:111;;;:::o;782:29::-;;;;:::o;4179:115::-;4228:7;4255:31;4270:15;4255:14;:31::i;:::-;4248:38;;4179:115;:::o;467:26::-;;;;;;;;;;;;;:::o;1073:50::-;;;;;;;;;;;;;;;;;:::o;5344:1384::-;5434:7;5479:1;5466:9;;:14;:39;;;;5496:9;5484:8;:21;;5466:39;:56;;;;5521:1;5509:8;:13;5466:56;5463:96;;;5546:1;5539:8;;;;5463:96;5585:9;;5574:8;:20;5571:72;;;5622:9;;5611:20;;5571:72;5655:20;5735:12;;5719;;5706:9;;5695:8;:20;;;;:::i;:::-;5694:37;;;;:::i;:::-;5679:12;;:52;;;;:::i;:::-;5678:69;;;;:::i;:::-;5655:92;;5758:18;5820:12;;5805;5779:23;5793:8;5779:13;:23::i;:::-;:38;;;;:::i;:::-;:53;;;;:::i;:::-;5758:74;;5845:21;5895:12;;5882:9;;5870;:21;;;;:::i;:::-;5869:38;;;;:::i;:::-;5845:62;;5918:19;5983:12;;5967:13;5940:24;5954:9;5940:13;:24::i;:::-;:40;;;;:::i;:::-;:55;;;;:::i;:::-;5918:77;;6037:9;6022:12;6011:8;:23;;;;:::i;:::-;:35;6008:98;;;6070:24;6085:8;6070:14;:24::i;:::-;6063:31;;;;;;;;6008:98;6118:19;6179:12;6168:8;6152:13;6140:9;:25;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;6118:73;;6202:19;6224:24;6239:8;6224:14;:24::i;:::-;6202:46;;6260:22;6297:18;6330:13;6346:11;6330:27;;6368:13;6398:12;;6384:11;:26;;;;:::i;:::-;6368:42;;6425:9;6421:214;6444:5;6440:1;:9;6421:214;;;6516:23;;6492:21;;6484:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;6471:68;;6570:10;6562:5;:18;;;;:::i;:::-;6554:26;;6613:10;6595:28;;;;;:::i;:::-;;;6451:3;;;;:::i;:::-;;;6421:214;;;;6711:8;6699:9;:20;;;;:::i;:::-;6683:11;6670:10;6653:14;:27;;;;:::i;:::-;:41;;;;:::i;:::-;6652:68;;;;:::i;:::-;6645:75;;;;;;;;;;;;5344:1384;;;;;:::o;7648:115::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7715:7:1::1;:5;:7::i;:::-;7707:25;;:48;7733:21;7707:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7648:115::o:0;818:35::-;;;;:::o;1234:201:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1343:1:::1;1323:22;;:8;:22;;::::0;1315:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1399:28;1418:8;1399:18;:28::i;:::-;1234:201:::0;:::o;3108:96:6:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;63:98:0:-;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;4302:222:1:-;4362:7;4382:21;4406:19;4420:4;4406:13;:19::i;:::-;4382:43;;4436:18;4457:31;4475:12;;4457:13;:17;;:31;;;;:::i;:::-;4436:52;;4506:10;4499:17;;;;4302:222;;;:::o;3190:489::-;3250:7;3286:1;3273:9;;:14;3270:65;;3311:12;;3304:19;;;;3270:65;3355:9;;3348:4;:16;3345:56;;;3388:1;3381:8;;;;3345:56;3413:13;3465:1;3450:12;;3437:9;;3430:4;:16;;;;:::i;:::-;3429:33;;;;:::i;:::-;:37;;;;:::i;:::-;3413:53;;3477:13;3493:12;;3477:28;;3520:9;3516:133;3539:5;3535:1;:9;3516:133;;;3614:23;;3590:21;;3582:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;3574:5;:63;;;;:::i;:::-;3566:71;;3546:3;;;;:::i;:::-;;;3516:133;;;;3666:5;3659:12;;;;3190:489;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:619::-;1961:6;1969;1977;2026:2;2014:9;2005:7;2001:23;1997:32;1994:119;;;2032:79;;:::i;:::-;1994:119;2152:1;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2123:117;2279:2;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2250:118;2407:2;2433:53;2478:7;2469:6;2458:9;2454:22;2433:53;:::i;:::-;2423:63;;2378:118;1884:619;;;;;:::o;2509:90::-;2543:7;2586:5;2579:13;2572:21;2561:32;;2509:90;;;:::o;2605:116::-;2675:21;2690:5;2675:21;:::i;:::-;2668:5;2665:32;2655:60;;2711:1;2708;2701:12;2655:60;2605:116;:::o;2727:133::-;2770:5;2808:6;2795:20;2786:29;;2824:30;2848:5;2824:30;:::i;:::-;2727:133;;;;:::o;2866:468::-;2931:6;2939;2988:2;2976:9;2967:7;2963:23;2959:32;2956:119;;;2994:79;;:::i;:::-;2956:119;3114:1;3139:53;3184:7;3175:6;3164:9;3160:22;3139:53;:::i;:::-;3129:63;;3085:117;3241:2;3267:50;3309:7;3300:6;3289:9;3285:22;3267:50;:::i;:::-;3257:60;;3212:115;2866:468;;;;;:::o;3340:109::-;3421:21;3436:5;3421:21;:::i;:::-;3416:3;3409:34;3340:109;;:::o;3455:210::-;3542:4;3580:2;3569:9;3565:18;3557:26;;3593:65;3655:1;3644:9;3640:17;3631:6;3593:65;:::i;:::-;3455:210;;;;:::o;3671:329::-;3730:6;3779:2;3767:9;3758:7;3754:23;3750:32;3747:119;;;3785:79;;:::i;:::-;3747:119;3905:1;3930:53;3975:7;3966:6;3955:9;3951:22;3930:53;:::i;:::-;3920:63;;3876:117;3671:329;;;;:::o;4006:118::-;4093:24;4111:5;4093:24;:::i;:::-;4088:3;4081:37;4006:118;;:::o;4130:222::-;4223:4;4261:2;4250:9;4246:18;4238:26;;4274:71;4342:1;4331:9;4327:17;4318:6;4274:71;:::i;:::-;4130:222;;;;:::o;4358:474::-;4426:6;4434;4483:2;4471:9;4462:7;4458:23;4454:32;4451:119;;;4489:79;;:::i;:::-;4451:119;4609:1;4634:53;4679:7;4670:6;4659:9;4655:22;4634:53;:::i;:::-;4624:63;;4580:117;4736:2;4762:53;4807:7;4798:6;4787:9;4783:22;4762:53;:::i;:::-;4752:63;;4707:118;4358:474;;;;;:::o;4838:60::-;4866:3;4887:5;4880:12;;4838:60;;;:::o;4904:142::-;4954:9;4987:53;5005:34;5014:24;5032:5;5014:24;:::i;:::-;5005:34;:::i;:::-;4987:53;:::i;:::-;4974:66;;4904:142;;;:::o;5052:126::-;5102:9;5135:37;5166:5;5135:37;:::i;:::-;5122:50;;5052:126;;;:::o;5184:141::-;5249:9;5282:37;5313:5;5282:37;:::i;:::-;5269:50;;5184:141;;;:::o;5331:161::-;5433:52;5479:5;5433:52;:::i;:::-;5428:3;5421:65;5331:161;;:::o;5498:252::-;5606:4;5644:2;5633:9;5629:18;5621:26;;5657:86;5740:1;5729:9;5725:17;5716:6;5657:86;:::i;:::-;5498:252;;;;:::o;5756:474::-;5824:6;5832;5881:2;5869:9;5860:7;5856:23;5852:32;5849:119;;;5887:79;;:::i;:::-;5849:119;6007:1;6032:53;6077:7;6068:6;6057:9;6053:22;6032:53;:::i;:::-;6022:63;;5978:117;6134:2;6160:53;6205:7;6196:6;6185:9;6181:22;6160:53;:::i;:::-;6150:63;;6105:118;5756:474;;;;;:::o;6236:169::-;6320:11;6354:6;6349:3;6342:19;6394:4;6389:3;6385:14;6370:29;;6236:169;;;;:::o;6411:221::-;6551:34;6547:1;6539:6;6535:14;6528:58;6620:4;6615:2;6607:6;6603:15;6596:29;6411:221;:::o;6638:366::-;6780:3;6801:67;6865:2;6860:3;6801:67;:::i;:::-;6794:74;;6877:93;6966:3;6877:93;:::i;:::-;6995:2;6990:3;6986:12;6979:19;;6638:366;;;:::o;7010:419::-;7176:4;7214:2;7203:9;7199:18;7191:26;;7263:9;7257:4;7253:20;7249:1;7238:9;7234:17;7227:47;7291:131;7417:4;7291:131;:::i;:::-;7283:139;;7010:419;;;:::o;7435:308::-;7544:4;7582:2;7571:9;7567:18;7559:26;;7595:65;7657:1;7646:9;7642:17;7633:6;7595:65;:::i;:::-;7670:66;7732:2;7721:9;7717:18;7708:6;7670:66;:::i;:::-;7435:308;;;;;:::o;7749:181::-;7889:33;7885:1;7877:6;7873:14;7866:57;7749:181;:::o;7936:366::-;8078:3;8099:67;8163:2;8158:3;8099:67;:::i;:::-;8092:74;;8175:93;8264:3;8175:93;:::i;:::-;8293:2;8288:3;8284:12;8277:19;;7936:366;;;:::o;8308:419::-;8474:4;8512:2;8501:9;8497:18;8489:26;;8561:9;8555:4;8551:20;8547:1;8536:9;8532:17;8525:47;8589:131;8715:4;8589:131;:::i;:::-;8581:139;;8308:419;;;:::o;8733:180::-;8781:77;8778:1;8771:88;8878:4;8875:1;8868:15;8902:4;8899:1;8892:15;8919:191;8959:3;8978:20;8996:1;8978:20;:::i;:::-;8973:25;;9012:20;9030:1;9012:20;:::i;:::-;9007:25;;9055:1;9052;9048:9;9041:16;;9076:3;9073:1;9070:10;9067:36;;;9083:18;;:::i;:::-;9067:36;8919:191;;;;:::o;9116:332::-;9237:4;9275:2;9264:9;9260:18;9252:26;;9288:71;9356:1;9345:9;9341:17;9332:6;9288:71;:::i;:::-;9369:72;9437:2;9426:9;9422:18;9413:6;9369:72;:::i;:::-;9116:332;;;;;:::o;9454:137::-;9508:5;9539:6;9533:13;9524:22;;9555:30;9579:5;9555:30;:::i;:::-;9454:137;;;;:::o;9597:345::-;9664:6;9713:2;9701:9;9692:7;9688:23;9684:32;9681:119;;;9719:79;;:::i;:::-;9681:119;9839:1;9864:61;9917:7;9908:6;9897:9;9893:22;9864:61;:::i;:::-;9854:71;;9810:125;9597:345;;;;:::o;9948:221::-;10088:34;10084:1;10076:6;10072:14;10065:58;10157:4;10152:2;10144:6;10140:15;10133:29;9948:221;:::o;10175:366::-;10317:3;10338:67;10402:2;10397:3;10338:67;:::i;:::-;10331:74;;10414:93;10503:3;10414:93;:::i;:::-;10532:2;10527:3;10523:12;10516:19;;10175:366;;;:::o;10547:419::-;10713:4;10751:2;10740:9;10736:18;10728:26;;10800:9;10794:4;10790:20;10786:1;10775:9;10771:17;10764:47;10828:131;10954:4;10828:131;:::i;:::-;10820:139;;10547:419;;;:::o;10972:194::-;11012:4;11032:20;11050:1;11032:20;:::i;:::-;11027:25;;11066:20;11084:1;11066:20;:::i;:::-;11061:25;;11110:1;11107;11103:9;11095:17;;11134:1;11128:4;11125:11;11122:37;;;11139:18;;:::i;:::-;11122:37;10972:194;;;;:::o;11172:180::-;11220:77;11217:1;11210:88;11317:4;11314:1;11307:15;11341:4;11338:1;11331:15;11358:185;11398:1;11415:20;11433:1;11415:20;:::i;:::-;11410:25;;11449:20;11467:1;11449:20;:::i;:::-;11444:25;;11488:1;11478:35;;11493:18;;:::i;:::-;11478:35;11535:1;11532;11528:9;11523:14;;11358:185;;;;:::o;11549:410::-;11589:7;11612:20;11630:1;11612:20;:::i;:::-;11607:25;;11646:20;11664:1;11646:20;:::i;:::-;11641:25;;11701:1;11698;11694:9;11723:30;11741:11;11723:30;:::i;:::-;11712:41;;11902:1;11893:7;11889:15;11886:1;11883:22;11863:1;11856:9;11836:83;11813:139;;11932:18;;:::i;:::-;11813:139;11597:362;11549:410;;;;:::o;11965:233::-;12004:3;12027:24;12045:5;12027:24;:::i;:::-;12018:33;;12073:66;12066:5;12063:77;12060:103;;12143:18;;:::i;:::-;12060:103;12190:1;12183:5;12179:13;12172:20;;11965:233;;;:::o;12204:164::-;12344:16;12340:1;12332:6;12328:14;12321:40;12204:164;:::o;12374:366::-;12516:3;12537:67;12601:2;12596:3;12537:67;:::i;:::-;12530:74;;12613:93;12702:3;12613:93;:::i;:::-;12731:2;12726:3;12722:12;12715:19;;12374:366;;;:::o;12746:419::-;12912:4;12950:2;12939:9;12935:18;12927:26;;12999:9;12993:4;12989:20;12985:1;12974:9;12970:17;12963:47;13027:131;13153:4;13027:131;:::i;:::-;13019:139;;12746:419;;;:::o;13171:176::-;13203:1;13220:20;13238:1;13220:20;:::i;:::-;13215:25;;13254:20;13272:1;13254:20;:::i;:::-;13249:25;;13293:1;13283:35;;13298:18;;:::i;:::-;13283:35;13339:1;13336;13332:9;13327:14;;13171:176;;;;:::o;13353:225::-;13493:34;13489:1;13481:6;13477:14;13470:58;13562:8;13557:2;13549:6;13545:15;13538:33;13353:225;:::o;13584:366::-;13726:3;13747:67;13811:2;13806:3;13747:67;:::i;:::-;13740:74;;13823:93;13912:3;13823:93;:::i;:::-;13941:2;13936:3;13932:12;13925:19;;13584:366;;;:::o;13956:419::-;14122:4;14160:2;14149:9;14145:18;14137:26;;14209:9;14203:4;14199:20;14195:1;14184:9;14180:17;14173:47;14237:131;14363:4;14237:131;:::i;:::-;14229:139;;13956:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1928600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claimedBalances(address)": "2858",
								"curTime()": "425",
								"earned(address)": "infinite",
								"emergencyWithdraw()": "infinite",
								"emergencyWithdrawToken(address,uint256)": "infinite",
								"getCurRewardPool()": "infinite",
								"getCurRewardRate()": "infinite",
								"getRemainPool(uint256)": "infinite",
								"getReward()": "infinite",
								"getRewardPool(uint256)": "infinite",
								"getTimeWeightedAveRate(uint256,uint256)": "infinite",
								"isAdmin(address)": "2951",
								"lastTimeRewardApplicable()": "469",
								"lastUpdateTime()": "2496",
								"modificationAdmin(address,bool)": "infinite",
								"owner()": "2567",
								"powersOf(address)": "2886",
								"rateInterval()": "2541",
								"rateIntervalDenominator()": "2540",
								"rateIntervalNumerator()": "2519",
								"renounceOwnership()": "30441",
								"rewardPerToken(uint256)": "infinite",
								"rewardPerTokenStored()": "2539",
								"rewards(address)": "2883",
								"rewardsToken()": "infinite",
								"setConfig(uint256,uint256,uint256)": "infinite",
								"setRewardToken(address)": "27052",
								"setStartTime(uint256)": "47000",
								"stake(address,uint256)": "infinite",
								"startTime()": "2518",
								"totalPowers()": "2482",
								"totalRewards()": "2520",
								"transferOwnership(address)": "30852",
								"userLastUpdateTime(address)": "2860",
								"userRewardPerTokenPaid(address)": "2926"
							},
							"internal": {
								"_getRemainPool(uint256)": "infinite",
								"_getRewardRate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 581,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "23934C5A09DA19000000"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "258"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 63,
									"end": 161,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 63,
									"end": 161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 116,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 153,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1562,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1617,
									"end": 1625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1607,
									"end": 1615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7917,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e178807f9d05823ed5145f7dad8c0919ec3a1de009b03ea856b90046f228d23664736f6c63430008110033",
									".code": [
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "D42B779D"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "D42B779D"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "DA4F8431"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "DB2E21BC"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "DF136D65"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "C8F33C91"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "CDDA56E0"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "9A5B17B0"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "A4C3B091"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "8AEE8127"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "7A6FCEE7"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "4DBDC4EB"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "5CFA91F4"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "6139D4B4"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "3C4045CF"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "8CC262"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "700037D"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "E15561A"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "129EE21A"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7917,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 5005,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5005,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5005,
											"end": 5301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1737,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1737,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7044,
											"end": 7401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2037,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2037,
											"end": 2159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 3687,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3687,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3687,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 2611,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2611,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2611,
											"end": 3182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2167,
											"end": 2260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2167,
											"end": 2260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4534,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4534,
											"end": 4641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 4649,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4649,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4649,
											"end": 4997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 7409,
											"end": 7514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7409,
											"end": 7514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2489,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2489,
											"end": 2603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2268,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2268,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7771,
											"end": 7914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7771,
											"end": 7914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 6738,
											"end": 7032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6738,
											"end": 7032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 2370,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2370,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 2370,
											"end": 2481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4179,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 4179,
											"end": 4294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1073,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1073,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1073,
											"end": 1123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 5344,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5344,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5344,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 7648,
											"end": 7763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5079,
											"end": 5091,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5117,
											"end": 5135,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5136,
											"end": 5143,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5117,
											"end": 5144,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5161,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5094,
											"end": 5162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5162,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5094,
											"end": 5162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5079,
											"end": 5162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5276,
											"end": 5283,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5291,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5292,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5266,
											"end": 5270,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 5180,
											"end": 5261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5203,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5228,
											"end": 5250,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5251,
											"end": 5258,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5218,
											"end": 5222,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 5203,
											"end": 5223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5223,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 5203,
											"end": 5223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5227,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 5203,
											"end": 5227,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5260,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5203,
											"end": 5260,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5260,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 5203,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5190,
											"end": 5197,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5198,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 5180,
											"end": 5202,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5261,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5180,
											"end": 5261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5265,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 5180,
											"end": 5265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5271,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5271,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5271,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5271,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5271,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5180,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 5180,
											"end": 5275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5293,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5293,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5293,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5180,
											"end": 5293,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5180,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5005,
											"end": 5301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1890,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1887,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1875,
											"end": 1903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1903,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1903,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1938,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1935,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1914,
											"end": 1960,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1960,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1914,
											"end": 1960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2021,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 1994,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1971,
											"end": 2021,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2021,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2021,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2021,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1737,
											"end": 2029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854"
										},
										{
											"begin": 1763,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1776,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 1737,
											"end": 1785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7044,
											"end": 7401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7100,
											"end": 7110,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1219,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1227,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1228,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1228,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1250,
											"end": 1259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1259,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1283,
											"end": 1292,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1292,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1352,
											"end": 1356,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1373,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1329,
											"end": 1374,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1329,
											"end": 1374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1374,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1423,
											"end": 1427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1408,
											"end": 1428,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 1408,
											"end": 1428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1405,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1482,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1456,
											"end": 1480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1456,
											"end": 1482,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1482,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1456,
											"end": 1482,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1453,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1504,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1561,
											"end": 1568,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1554,
											"end": 1569,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1569,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1554,
											"end": 1569,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1542,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1550,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1638,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1618,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1614,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1698,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1671,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1679,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7137,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7147,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7148,
											"end": 7158,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7140,
											"end": 7159,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7159,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7123,
											"end": 7159,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7183,
											"end": 7184,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7174,
											"end": 7180,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7174,
											"end": 7184,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7394,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7394,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7170,
											"end": 7394,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7232,
											"end": 7238,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7216,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7217,
											"end": 7227,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7201,
											"end": 7238,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7238,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7275,
											"end": 7276,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7260,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7261,
											"end": 7271,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7253,
											"end": 7272,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7276,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7276,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7276,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7253,
											"end": 7276,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7291,
											"end": 7303,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7291,
											"end": 7312,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7312,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 7313,
											"end": 7323,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7331,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7291,
											"end": 7332,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7291,
											"end": 7332,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7291,
											"end": 7332,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7373,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 7375,
											"end": 7381,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7352,
											"end": 7382,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7352,
											"end": 7382,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7394,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7170,
											"end": 7394,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7401,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1729,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7044,
											"end": 7401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2119,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2103,
											"end": 2119,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2119,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2119,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2119,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2151,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 2130,
											"end": 2151,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2151,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2151,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2130,
											"end": 2151,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3745,
											"end": 3752,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3781,
											"end": 3782,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3768,
											"end": 3777,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3782,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3815,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3806,
											"end": 3815,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3815,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3815,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3815,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3799,
											"end": 3815,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3765,
											"end": 3827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3858,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3849,
											"end": 3858,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3858,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3895,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3895,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3839,
											"end": 3895,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3875,
											"end": 3883,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3839,
											"end": 3895,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3839,
											"end": 3895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3958,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3942,
											"end": 3954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3929,
											"end": 3938,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3926,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3922,
											"end": 3938,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3938,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3922,
											"end": 3938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3922,
											"end": 3938,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3922,
											"end": 3938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3921,
											"end": 3954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3921,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3954,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3921,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3921,
											"end": 3958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3921,
											"end": 3958,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3905,
											"end": 3958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 3982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3985,
											"end": 3997,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 3997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 3997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4012,
											"end": 4021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4031,
											"end": 4036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4027,
											"end": 4036,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4106,
											"end": 4129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4103,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4082,
											"end": 4103,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4079,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4074,
											"end": 4103,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4103,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4074,
											"end": 4103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4103,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4074,
											"end": 4103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4074,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4074,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4074,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4074,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4071,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4066,
											"end": 4129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4066,
											"end": 4129,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4129,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4129,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4038,
											"end": 4041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4038,
											"end": 4041,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4141,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4163,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 4171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2705,
											"end": 2706,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2692,
											"end": 2701,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2692,
											"end": 2706,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2730,
											"end": 2742,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2723,
											"end": 2742,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2689,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2774,
											"end": 2783,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2783,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2764,
											"end": 2820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2808,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2808,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2800,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2800,
											"end": 2808,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2764,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2764,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2843,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2867,
											"end": 2879,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2854,
											"end": 2863,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2851,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2847,
											"end": 2863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2846,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2846,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2846,
											"end": 2883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2846,
											"end": 2883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2883,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2846,
											"end": 2883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2910,
											"end": 2922,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2910,
											"end": 2922,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2922,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2946,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2956,
											"end": 2961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2961,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3031,
											"end": 3054,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3007,
											"end": 3028,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3004,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2999,
											"end": 3028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2999,
											"end": 3028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2999,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2999,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 2996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2991,
											"end": 3054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 2991,
											"end": 3054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 3054,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2991,
											"end": 3054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2963,
											"end": 2966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2933,
											"end": 3066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3150,
											"end": 3173,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3123,
											"end": 3144,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3123,
											"end": 3144,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3118,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 3113,
											"end": 3122,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 3113,
											"end": 3145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 3113,
											"end": 3149,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3174,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3174,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3174,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3113,
											"end": 3174,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3113,
											"end": 3174,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 3113,
											"end": 3174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3174,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3106,
											"end": 3174,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2611,
											"end": 3182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2220,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 2240,
											"end": 2252,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2233,
											"end": 2252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2167,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1215,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1188,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4591,
											"end": 4598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4633,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4633,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4534,
											"end": 4641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 961,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4754,
											"end": 4755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4750,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4738,
											"end": 4750,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4738,
											"end": 4755,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4734,
											"end": 4811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4779,
											"end": 4799,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4779,
											"end": 4799,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4772,
											"end": 4799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4772,
											"end": 4799,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4734,
											"end": 4811,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4734,
											"end": 4811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4961,
											"end": 4973,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4961,
											"end": 4973,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4951,
											"end": 4955,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4935,
											"end": 4945,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4915,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4915,
											"end": 4929,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4910,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4884,
											"end": 4908,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4884,
											"end": 4910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4910,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4884,
											"end": 4910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 4884,
											"end": 4914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4930,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4930,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4930,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4884,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4884,
											"end": 4934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4884,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "176"
										},
										{
											"begin": 4884,
											"end": 4950,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4956,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4956,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4956,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 4884,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4884,
											"end": 4960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4884,
											"end": 4974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4861,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4841,
											"end": 4861,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 4841,
											"end": 4865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4989,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4989,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4841,
											"end": 4989,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4989,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4841,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4821,
											"end": 4989,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4649,
											"end": 4997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7500,
											"end": 7505,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7478,
											"end": 7490,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7409,
											"end": 7514,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 897,
											"end": 954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 955,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 2545,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2565,
											"end": 2595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2579,
											"end": 2594,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2565,
											"end": 2595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2595,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 2565,
											"end": 2595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2558,
											"end": 2595,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2312,
											"end": 2319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2354,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2332,
											"end": 2354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2268,
											"end": 2362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7871,
											"end": 7876,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7886,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7886,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 7887,
											"end": 7897,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7899,
											"end": 7905,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7864,
											"end": 7906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7864,
											"end": 7906,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7906,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7914,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "297"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 829,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6828,
											"end": 6832,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1219,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 1227,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1228,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1228,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1228,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1250,
											"end": 1259,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1250,
											"end": 1259,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1246,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1242,
											"end": 1259,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1292,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1283,
											"end": 1292,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1292,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1292,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 1239,
											"end": 1304,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1326,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1329,
											"end": 1374,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1352,
											"end": 1356,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1358,
											"end": 1373,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1351,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 1329,
											"end": 1374,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1374,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 1329,
											"end": 1374,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1374,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1374,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1428,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1423,
											"end": 1427,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1422,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 1408,
											"end": 1428,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1408,
											"end": 1428,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 1408,
											"end": 1428,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1405,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1428,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1482,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1456,
											"end": 1480,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 1456,
											"end": 1482,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1456,
											"end": 1482,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 1456,
											"end": 1482,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1453,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1439,
											"end": 1482,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1517,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1504,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1497,
											"end": 1518,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1569,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 1561,
											"end": 1568,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1554,
											"end": 1569,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1569,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 1554,
											"end": 1569,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1542,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1543,
											"end": 1550,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1551,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1569,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1638,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1618,
											"end": 1638,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1607,
											"end": 1614,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1615,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1584,
											"end": 1638,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1698,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1671,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1672,
											"end": 1679,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1653,
											"end": 1680,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1698,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 1493,
											"end": 1710,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6863,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6853,
											"end": 6859,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6853,
											"end": 6863,
											"modifierDepth": 3,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 6845,
											"end": 6882,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 6845,
											"end": 6882,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6932,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6920,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6908,
											"end": 6920,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6924,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6908,
											"end": 6924,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6932,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6932,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6932,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6908,
											"end": 6932,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6932,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6908,
											"end": 6932,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 6908,
											"end": 6932,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6905,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 6893,
											"end": 6932,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6932,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6932,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6893,
											"end": 6932,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6988,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6981,
											"end": 6987,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6970,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6971,
											"end": 6975,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6976,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6980,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 6961,
											"end": 6980,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6988,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6988,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6988,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6961,
											"end": 6988,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6988,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6961,
											"end": 6988,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6961,
											"end": 6988,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6952,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6953,
											"end": 6957,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6943,
											"end": 6958,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6988,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6988,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6988,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6943,
											"end": 6988,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7011,
											"end": 7015,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 7017,
											"end": 7023,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 7004,
											"end": 7024,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7004,
											"end": 7024,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1729,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1729,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6738,
											"end": 7032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2464,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2465,
											"end": 2472,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2448,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2370,
											"end": 2481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4228,
											"end": 4235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4270,
											"end": 4285,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4255,
											"end": 4286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 4255,
											"end": 4286,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4248,
											"end": 4286,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5475,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5466,
											"end": 5475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5480,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5496,
											"end": 5505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5492,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5484,
											"end": 5505,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5466,
											"end": 5505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5466,
											"end": 5522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5509,
											"end": 5517,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5522,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5522,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5466,
											"end": 5522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5546,
											"end": 5547,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5547,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5547,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5539,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5539,
											"end": 5547,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5594,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5585,
											"end": 5594,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5582,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5594,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5643,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5571,
											"end": 5643,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5622,
											"end": 5631,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5611,
											"end": 5631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5571,
											"end": 5643,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5571,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5675,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5735,
											"end": 5747,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5735,
											"end": 5747,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5731,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5719,
											"end": 5731,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5706,
											"end": 5715,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5703,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5695,
											"end": 5715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5695,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5694,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5694,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5691,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5679,
											"end": 5691,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5679,
											"end": 5731,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5731,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5731,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5679,
											"end": 5731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5679,
											"end": 5731,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5679,
											"end": 5731,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5678,
											"end": 5747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5678,
											"end": 5747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5678,
											"end": 5747,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5678,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5655,
											"end": 5747,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5820,
											"end": 5832,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5820,
											"end": 5832,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5817,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5793,
											"end": 5801,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5779,
											"end": 5802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5779,
											"end": 5817,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5779,
											"end": 5817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5817,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5779,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5779,
											"end": 5832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5832,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5779,
											"end": 5832,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5832,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5779,
											"end": 5832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5758,
											"end": 5832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5895,
											"end": 5907,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5895,
											"end": 5907,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5882,
											"end": 5891,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5882,
											"end": 5891,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5879,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5870,
											"end": 5891,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5891,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 5870,
											"end": 5891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5870,
											"end": 5891,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5870,
											"end": 5891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5869,
											"end": 5907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5869,
											"end": 5907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5937,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5983,
											"end": 5995,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5983,
											"end": 5995,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5967,
											"end": 5980,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5954,
											"end": 5963,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 5940,
											"end": 5964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5940,
											"end": 5964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5940,
											"end": 5980,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5980,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 5940,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5940,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5940,
											"end": 5995,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 5940,
											"end": 5995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5940,
											"end": 5995,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5940,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6046,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6034,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6019,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6011,
											"end": 6034,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6011,
											"end": 6034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6034,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6011,
											"end": 6034,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6046,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6008,
											"end": 6106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6085,
											"end": 6093,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 6070,
											"end": 6094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6070,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 6063,
											"end": 6094,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6008,
											"end": 6106,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6008,
											"end": 6106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6191,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 6176,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6152,
											"end": 6165,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6149,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6140,
											"end": 6165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 6140,
											"end": 6165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6140,
											"end": 6176,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6140,
											"end": 6176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6176,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6140,
											"end": 6176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6140,
											"end": 6191,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6191,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6140,
											"end": 6191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6140,
											"end": 6191,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6140,
											"end": 6191,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6191,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6239,
											"end": 6247,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6224,
											"end": 6248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6224,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6248,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6202,
											"end": 6248,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6297,
											"end": 6315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6343,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6346,
											"end": 6357,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6330,
											"end": 6357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6381,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6398,
											"end": 6410,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6398,
											"end": 6410,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6395,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 6384,
											"end": 6410,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6384,
											"end": 6410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6410,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 6384,
											"end": 6410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6410,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6368,
											"end": 6410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6441,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6449,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6516,
											"end": 6539,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6516,
											"end": 6539,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6492,
											"end": 6513,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6492,
											"end": 6513,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6489,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 6484,
											"end": 6513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6484,
											"end": 6513,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6484,
											"end": 6539,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6484,
											"end": 6539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6484,
											"end": 6539,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 6484,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6539,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6471,
											"end": 6539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6570,
											"end": 6580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6567,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6562,
											"end": 6580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 6562,
											"end": 6580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6580,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6580,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6613,
											"end": 6623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6595,
											"end": 6623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6623,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 6451,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6454,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6421,
											"end": 6635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6711,
											"end": 6719,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6708,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 6699,
											"end": 6719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 6699,
											"end": 6719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6683,
											"end": 6694,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6670,
											"end": 6680,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6667,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6653,
											"end": 6680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6680,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6653,
											"end": 6680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6680,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 6653,
											"end": 6680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6653,
											"end": 6694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 6653,
											"end": 6694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6694,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 6653,
											"end": 6694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6652,
											"end": 6720,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 6652,
											"end": 6720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6652,
											"end": 6720,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 6652,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 6728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 7648,
											"end": 7763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7715,
											"end": 7722,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7715,
											"end": 7720,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7715,
											"end": 7722,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7722,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 7715,
											"end": 7722,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7732,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7707,
											"end": 7732,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 7733,
											"end": 7754,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7755,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7755,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7648,
											"end": 7763,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 1315,
											"end": 1388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1418,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1399,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "175"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 3192,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 6,
											"value": "380"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 6,
											"value": "176"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 3535,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "382"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 6,
											"value": "177"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3920,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 6,
											"value": "384"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "178"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2825,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 6,
											"value": "386"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 63,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4302,
											"end": 4524,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 4302,
											"end": 4524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4425,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4420,
											"end": 4424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 4406,
											"end": 4425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4425,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 4406,
											"end": 4425,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4425,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4454,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4457,
											"end": 4488,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4475,
											"end": 4487,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4475,
											"end": 4487,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4470,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 4457,
											"end": 4474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4457,
											"end": 4488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4457,
											"end": 4488,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 4457,
											"end": 4488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4488,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4516,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4524,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3679,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3190,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3250,
											"end": 3257,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3286,
											"end": 3287,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3273,
											"end": 3282,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3273,
											"end": 3287,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3335,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 3270,
											"end": 3335,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3311,
											"end": 3323,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3323,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3304,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 3304,
											"end": 3323,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3270,
											"end": 3335,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 3270,
											"end": 3335,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3355,
											"end": 3364,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3348,
											"end": 3364,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3401,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 3345,
											"end": 3401,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3388,
											"end": 3389,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3381,
											"end": 3389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3389,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3381,
											"end": 3389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 3381,
											"end": 3389,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3345,
											"end": 3401,
											"name": "tag",
											"source": 1,
											"value": "394"
										},
										{
											"begin": 3345,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3450,
											"end": 3462,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3450,
											"end": 3462,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3437,
											"end": 3446,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3437,
											"end": 3446,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3434,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 3430,
											"end": 3446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3430,
											"end": 3446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3430,
											"end": 3446,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 3430,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3429,
											"end": 3462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 3429,
											"end": 3462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 3429,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 3429,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3466,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3493,
											"end": 3505,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3493,
											"end": 3505,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3539,
											"end": 3544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3535,
											"end": 3544,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3614,
											"end": 3637,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3614,
											"end": 3637,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3590,
											"end": 3611,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3590,
											"end": 3611,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3582,
											"end": 3611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 3582,
											"end": 3611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 3582,
											"end": 3637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3582,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3582,
											"end": 3637,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 3582,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3579,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3574,
											"end": 3637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 3574,
											"end": 3637,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3566,
											"end": 3637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 3546,
											"end": 3549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3546,
											"end": 3549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3671,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3659,
											"end": 3671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3679,
											"name": "tag",
											"source": 1,
											"value": "392"
										},
										{
											"begin": 3190,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3679,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3679,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3679,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3190,
											"end": 3679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "tag",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2032,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2177,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2305,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 2433,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2721,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 2605,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 2675,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2770,
											"end": 2775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 2824,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "tag",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 2985,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 2986,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 2991,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 2994,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "tag",
											"source": 7,
											"value": "480"
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 3184,
											"end": 3191,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 3139,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3192,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3298,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 3267,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 3421,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "tag",
											"source": 7,
											"value": "484"
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "tag",
											"source": 7,
											"value": "70"
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 3655,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3637,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 3593,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "tag",
											"source": 7,
											"value": "78"
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3765,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3777,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3782,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 3785,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "tag",
											"source": 7,
											"value": "488"
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 3930,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "tag",
											"source": 7,
											"value": "490"
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 4111,
											"end": 4116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 4093,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "tag",
											"source": 7,
											"value": "492"
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4223,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 4342,
											"end": 4343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4324,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 4274,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "tag",
											"source": 7,
											"value": "132"
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4471,
											"end": 4480,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4469,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4486,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 4489,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "tag",
											"source": 7,
											"value": "497"
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 4679,
											"end": 4686,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4668,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4655,
											"end": 4677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 4634,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "tag",
											"source": 7,
											"value": "498"
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 4807,
											"end": 4814,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 4762,
											"end": 4815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "tag",
											"source": 7,
											"value": "499"
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4880,
											"end": 4892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4880,
											"end": 4892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 5032,
											"end": 5037,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 5014,
											"end": 5038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "tag",
											"source": 7,
											"value": "504"
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 5005,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 4987,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "tag",
											"source": 7,
											"value": "502"
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 5166,
											"end": 5171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 5135,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 5313,
											"end": 5318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 5282,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "tag",
											"source": 7,
											"value": "508"
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 5479,
											"end": 5484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 5433,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "tag",
											"source": 7,
											"value": "150"
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5725,
											"end": 5742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 5657,
											"end": 5743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5824,
											"end": 5830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5838,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 5878,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5884,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 5887,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 6077,
											"end": 6084,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 6032,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "tag",
											"source": 7,
											"value": "516"
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6085,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 6095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6136,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 6205,
											"end": 6212,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 6160,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6342,
											"end": 6361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6389,
											"end": 6392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6632,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 6411,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6585,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E"
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6624,
											"name": "PUSH",
											"source": 7,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6625,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6860,
											"end": 6863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 6801,
											"end": 6868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 6877,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "tag",
											"source": 7,
											"value": "522"
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6990,
											"end": 6993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 6998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 6998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7203,
											"end": 7212,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7191,
											"end": 7217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7191,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7274,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 7417,
											"end": 7421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 7291,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 7657,
											"end": 7658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7639,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 7595,
											"end": 7660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "tag",
											"source": 7,
											"value": "526"
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 7732,
											"end": 7734,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7721,
											"end": 7730,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 7670,
											"end": 7736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7930,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 7749,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7885,
											"end": 7886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7866,
											"end": 7923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 8099,
											"end": 8166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 8175,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8293,
											"end": 8295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "tag",
											"source": 7,
											"value": "199"
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8551,
											"end": 8571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 8715,
											"end": 8719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 8589,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 8913,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 8733,
											"end": 8913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8781,
											"end": 8858,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8778,
											"end": 8779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8771,
											"end": 8859,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8878,
											"end": 8882,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 8875,
											"end": 8876,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 8868,
											"end": 8883,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8902,
											"end": 8906,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 8899,
											"end": 8900,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8892,
											"end": 8907,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "tag",
											"source": 7,
											"value": "210"
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8959,
											"end": 8962,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 8996,
											"end": 8997,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 8978,
											"end": 8998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 8978,
											"end": 8998,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 8998,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8973,
											"end": 8998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 9030,
											"end": 9031,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 9012,
											"end": 9032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 9012,
											"end": 9032,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9032,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9007,
											"end": 9032,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9055,
											"end": 9056,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9053,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9048,
											"end": 9057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9057,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9041,
											"end": 9057,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9076,
											"end": 9079,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9073,
											"end": 9074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9070,
											"end": 9080,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 9083,
											"end": 9101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 9083,
											"end": 9101,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 9067,
											"end": 9103,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 9110,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8919,
											"end": 9110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9448,
											"name": "tag",
											"source": 7,
											"value": "212"
										},
										{
											"begin": 9116,
											"end": 9448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9237,
											"end": 9241,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9275,
											"end": 9277,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9264,
											"end": 9273,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9260,
											"end": 9278,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9252,
											"end": 9278,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9252,
											"end": 9278,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 9356,
											"end": 9357,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9345,
											"end": 9354,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9341,
											"end": 9358,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9332,
											"end": 9338,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 9288,
											"end": 9359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9288,
											"end": 9359,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 9288,
											"end": 9359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9369,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 9437,
											"end": 9439,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9426,
											"end": 9435,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9422,
											"end": 9440,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9413,
											"end": 9419,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9369,
											"end": 9441,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 9369,
											"end": 9441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9369,
											"end": 9441,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 9369,
											"end": 9441,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9448,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9448,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9448,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9116,
											"end": 9448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9591,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 9454,
											"end": 9591,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9508,
											"end": 9513,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9539,
											"end": 9545,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9533,
											"end": 9546,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9524,
											"end": 9546,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9555,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 9579,
											"end": 9584,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9555,
											"end": 9585,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 9555,
											"end": 9585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9555,
											"end": 9585,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 9555,
											"end": 9585,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9591,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9591,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9591,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9454,
											"end": 9591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9942,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 9597,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9664,
											"end": 9670,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9713,
											"end": 9715,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9701,
											"end": 9710,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9692,
											"end": 9699,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9688,
											"end": 9711,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9684,
											"end": 9716,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9800,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9800,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 9681,
											"end": 9800,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9719,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 9719,
											"end": 9798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 9719,
											"end": 9798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9719,
											"end": 9798,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 9719,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9681,
											"end": 9800,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 9681,
											"end": 9800,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9839,
											"end": 9840,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9864,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 9917,
											"end": 9924,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9908,
											"end": 9914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9897,
											"end": 9906,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9893,
											"end": 9915,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9925,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 9864,
											"end": 9925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9864,
											"end": 9925,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 9864,
											"end": 9925,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9854,
											"end": 9925,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9854,
											"end": 9925,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9810,
											"end": 9935,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9942,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9942,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9942,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9597,
											"end": 9942,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9948,
											"end": 10169,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 9948,
											"end": 10169,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10088,
											"end": 10122,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D"
										},
										{
											"begin": 10084,
											"end": 10085,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10076,
											"end": 10082,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10072,
											"end": 10086,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10065,
											"end": 10123,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10157,
											"end": 10161,
											"name": "PUSH",
											"source": 7,
											"value": "696E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10152,
											"end": 10154,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10144,
											"end": 10150,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10140,
											"end": 10155,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10133,
											"end": 10162,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9948,
											"end": 10169,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9948,
											"end": 10169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10541,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10175,
											"end": 10541,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10317,
											"end": 10320,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10338,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 10402,
											"end": 10404,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10397,
											"end": 10400,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 10338,
											"end": 10405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10338,
											"end": 10405,
											"name": "tag",
											"source": 7,
											"value": "551"
										},
										{
											"begin": 10338,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10331,
											"end": 10405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10331,
											"end": 10405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 10503,
											"end": 10506,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10507,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 10414,
											"end": 10507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10414,
											"end": 10507,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 10414,
											"end": 10507,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10532,
											"end": 10534,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10527,
											"end": 10530,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10523,
											"end": 10535,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10516,
											"end": 10535,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10541,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10541,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10541,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10175,
											"end": 10541,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10966,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 10547,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10713,
											"end": 10717,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10751,
											"end": 10753,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10740,
											"end": 10749,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10736,
											"end": 10754,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10728,
											"end": 10754,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10728,
											"end": 10754,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10800,
											"end": 10809,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10794,
											"end": 10798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10790,
											"end": 10810,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10786,
											"end": 10787,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10775,
											"end": 10784,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10771,
											"end": 10788,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10764,
											"end": 10811,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 10954,
											"end": 10958,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10959,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 10828,
											"end": 10959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10828,
											"end": 10959,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 10828,
											"end": 10959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10959,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10820,
											"end": 10959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10966,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10966,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10966,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10547,
											"end": 10966,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 11166,
											"name": "tag",
											"source": 7,
											"value": "229"
										},
										{
											"begin": 10972,
											"end": 11166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11012,
											"end": 11016,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11032,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 11050,
											"end": 11051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11032,
											"end": 11052,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11032,
											"end": 11052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11032,
											"end": 11052,
											"name": "tag",
											"source": 7,
											"value": "556"
										},
										{
											"begin": 11032,
											"end": 11052,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11027,
											"end": 11052,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11027,
											"end": 11052,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11066,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 11084,
											"end": 11085,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11066,
											"end": 11086,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11066,
											"end": 11086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11066,
											"end": 11086,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 11066,
											"end": 11086,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11061,
											"end": 11086,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11061,
											"end": 11086,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11110,
											"end": 11111,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11107,
											"end": 11108,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11103,
											"end": 11112,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11112,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11112,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11134,
											"end": 11135,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11128,
											"end": 11132,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11125,
											"end": 11136,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11159,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11159,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 11122,
											"end": 11159,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11139,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 11139,
											"end": 11157,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 11139,
											"end": 11157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11139,
											"end": 11157,
											"name": "tag",
											"source": 7,
											"value": "559"
										},
										{
											"begin": 11139,
											"end": 11157,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11122,
											"end": 11159,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 11122,
											"end": 11159,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 11166,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 11166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 11166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 11166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10972,
											"end": 11166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11172,
											"end": 11352,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 11172,
											"end": 11352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11220,
											"end": 11297,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11217,
											"end": 11218,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11210,
											"end": 11298,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11317,
											"end": 11321,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11314,
											"end": 11315,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11307,
											"end": 11322,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11341,
											"end": 11345,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11338,
											"end": 11339,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11331,
											"end": 11346,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11358,
											"end": 11543,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 11358,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11398,
											"end": 11399,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 11433,
											"end": 11434,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11415,
											"end": 11435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 11415,
											"end": 11435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11410,
											"end": 11435,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11410,
											"end": 11435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 11467,
											"end": 11468,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11449,
											"end": 11469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 11449,
											"end": 11469,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11444,
											"end": 11469,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11444,
											"end": 11469,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11513,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 11478,
											"end": 11513,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 11493,
											"end": 11511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 11493,
											"end": 11511,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11478,
											"end": 11513,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 11478,
											"end": 11513,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11535,
											"end": 11536,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11532,
											"end": 11533,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11528,
											"end": 11537,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11523,
											"end": 11537,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11523,
											"end": 11537,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11358,
											"end": 11543,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11358,
											"end": 11543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11358,
											"end": 11543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11358,
											"end": 11543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11358,
											"end": 11543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 11596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 11630,
											"end": 11631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11612,
											"end": 11632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "tag",
											"source": 7,
											"value": "567"
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 11664,
											"end": 11665,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11646,
											"end": 11666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11666,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11701,
											"end": 11702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11694,
											"end": 11703,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 11741,
											"end": 11752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 11723,
											"end": 11753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11712,
											"end": 11753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11712,
											"end": 11753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11893,
											"end": 11900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11889,
											"end": 11904,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11883,
											"end": 11905,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11836,
											"end": 11919,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 11932,
											"end": 11950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "tag",
											"source": 7,
											"value": "570"
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12004,
											"end": 12007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 12045,
											"end": 12050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 12027,
											"end": 12051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "tag",
											"source": 7,
											"value": "573"
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12139,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12066,
											"end": 12071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12063,
											"end": 12140,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 12143,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "tag",
											"source": 7,
											"value": "575"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "tag",
											"source": 7,
											"value": "574"
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12183,
											"end": 12188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12368,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 12204,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12344,
											"end": 12360,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 12340,
											"end": 12341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12332,
											"end": 12338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12328,
											"end": 12342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12321,
											"end": 12361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12516,
											"end": 12519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 12601,
											"end": 12603,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 12596,
											"end": 12599,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 12537,
											"end": 12604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "tag",
											"source": 7,
											"value": "578"
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 12702,
											"end": 12705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 12613,
											"end": 12706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "tag",
											"source": 7,
											"value": "579"
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12731,
											"end": 12733,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12726,
											"end": 12729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12722,
											"end": 12734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12715,
											"end": 12734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12715,
											"end": 12734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12912,
											"end": 12916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12950,
											"end": 12952,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12939,
											"end": 12948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12935,
											"end": 12953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12927,
											"end": 12953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12927,
											"end": 12953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 12997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12985,
											"end": 12986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13010,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 13153,
											"end": 13157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 13027,
											"end": 13158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "tag",
											"source": 7,
											"value": "581"
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 13238,
											"end": 13239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13220,
											"end": 13240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "tag",
											"source": 7,
											"value": "583"
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13215,
											"end": 13240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13215,
											"end": 13240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 13272,
											"end": 13273,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 13254,
											"end": 13274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "tag",
											"source": 7,
											"value": "584"
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 13298,
											"end": 13316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "tag",
											"source": 7,
											"value": "586"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "tag",
											"source": 7,
											"value": "585"
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13336,
											"end": 13337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13341,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13578,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13353,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13527,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13489,
											"end": 13490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13477,
											"end": 13491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13470,
											"end": 13528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13562,
											"end": 13570,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13557,
											"end": 13559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13549,
											"end": 13555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13726,
											"end": 13729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 13811,
											"end": 13813,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13806,
											"end": 13809,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 13747,
											"end": 13814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "tag",
											"source": 7,
											"value": "589"
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13740,
											"end": 13814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13740,
											"end": 13814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 13912,
											"end": 13915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 13823,
											"end": 13916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "tag",
											"source": 7,
											"value": "590"
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 13943,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13936,
											"end": 13939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13932,
											"end": 13944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13925,
											"end": 13944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13925,
											"end": 13944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "tag",
											"source": 7,
											"value": "377"
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14160,
											"end": 14162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14149,
											"end": 14158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14145,
											"end": 14163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14137,
											"end": 14163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14137,
											"end": 14163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14203,
											"end": 14207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14199,
											"end": 14219,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14195,
											"end": 14196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14184,
											"end": 14193,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14180,
											"end": 14197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14173,
											"end": 14220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 14237,
											"end": 14368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "tag",
											"source": 7,
											"value": "592"
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"claimedBalances(address)": "d42b779d",
							"curTime()": "9a5b17b0",
							"earned(address)": "008cc262",
							"emergencyWithdraw()": "db2e21bc",
							"emergencyWithdrawToken(address,uint256)": "a4c3b091",
							"getCurRewardPool()": "9499c549",
							"getCurRewardRate()": "cdda56e0",
							"getRemainPool(uint256)": "4dbdc4eb",
							"getReward()": "3d18b912",
							"getRewardPool(uint256)": "5cfa91f4",
							"getTimeWeightedAveRate(uint256,uint256)": "da4f8431",
							"isAdmin(address)": "24d7806c",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"powersOf(address)": "b79ec812",
							"rateInterval()": "6139d4b4",
							"rateIntervalDenominator()": "7a6fcee7",
							"rateIntervalNumerator()": "3c4045cf",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setConfig(uint256,uint256,uint256)": "129ee21a",
							"setRewardToken(address)": "8aee8127",
							"setStartTime(uint256)": "3e0a322d",
							"stake(address,uint256)": "adc9772e",
							"startTime()": "78e97925",
							"totalPowers()": "6917c501",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"userLastUpdateTime(address)": "8107368b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimedBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRemainPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightTime\",\"type\":\"uint256\"}],\"name\":\"getTimeWeightedAveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"powersOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rateInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rateIntervalNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rateIntervalDenominator\",\"type\":\"uint256\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/stake.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0x5dc7a7be34ef842345adc570bd66c27f47132f22249a2b2d104e0cd6f98a3033\",\"urls\":[\"bzz-raw://f69c8999ec1492f27c6d879dc2a856f3a797833f856b302e916fcdad71cfe724\",\"dweb:/ipfs/QmTJNav1svJJ5jEWx2rHVqnvobgCQzN8dyDrEVx9fRjC8L\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 1025,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 192,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1132"
							},
							{
								"astId": 196,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 203,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "totalRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 205,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "startTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateInterval",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalNumerator",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 214,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalDenominator",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 216,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 220,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_totalPowers",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 224,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 228,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userLastUpdateTime",
								"offset": 0,
								"slot": "14",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 232,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 236,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "claimedBalances",
								"offset": 0,
								"slot": "16",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1132": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1025,
								"contract": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A92470C0FDEF6D101DA41CA8B9B 0xBB PUSH16 0x6057FF25E98D5F7F138DFEF9D69F4864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "645:3270:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A92470C0FDEF6D101DA41CA8B9B 0xBB PUSH16 0x6057FF25E98D5F7F138DFEF9D69F4864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "645:3270:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP14 PUSH4 0xF3CCD536 RETURNDATACOPY 0xD3 0xE2 0x4B CALLVALUE BLOCKHASH 0xE3 CALLCODE SDIV 0xCD 0xBD 0x2B SWAP8 0xEA 0xFB 0xAC 0xEA 0xC4 0xDD KECCAK256 LOG4 0xDA DUP13 PUSH23 0xE064736F6C634300081100330000000000000000000000 ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP14 PUSH4 0xF3CCD536 RETURNDATACOPY 0xD3 0xE2 0x4B CALLVALUE BLOCKHASH 0xE3 CALLCODE SDIV 0xCD 0xBD 0x2B SWAP8 0xEA 0xFB 0xAC 0xEA 0xC4 0xDD KECCAK256 LOG4 0xDA DUP13 PUSH23 0xE064736F6C634300081100330000000000000000000000 ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xF7 ISZERO 0x1F GASPRICE SWAP16 PUSH11 0xFC566DCC87F72F3197B4C1 SUB GASLIMIT PUSH31 0x5DACFCD99AFF0E986F7B1B64736F6C63430008110033000000000000000000 ",
							"sourceMap": "467:6301:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xF7 ISZERO 0x1F GASPRICE SWAP16 PUSH11 0xFC566DCC87F72F3197B4C1 SUB GASLIMIT PUSH31 0x5DACFCD99AFF0E986F7B1B64736F6C63430008110033000000000000000000 ",
							"sourceMap": "467:6301:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/adminable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/adminable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/stake.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/stake.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"inviter_presell/adminable.sol": {
				"ast": {
					"absolutePath": "inviter_presell/adminable.sol",
					"exportedSymbols": {
						"Adminable": [
							175
						],
						"Context": [
							20
						]
					},
					"id": 176,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "48:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "125:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "147:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "136:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "72:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:9:0"
									},
									"scope": 20,
									"src": "63:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "236:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "258:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "254:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "247:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "178:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "220:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:0"
									},
									"scope": 20,
									"src": "169:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 176,
							"src": "30:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "Context",
										"nameLocations": [
											"310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "310:7:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:0"
								}
							],
							"canonicalName": "Adminable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								20
							],
							"name": "Adminable",
							"nameLocation": "297:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "358:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "325:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "388:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "372:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "409:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "446:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "430:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "461:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "403:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854",
									"id": 42,
									"name": "ModificationAdmin",
									"nameLocation": "499:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "517:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:53:0"
									},
									"src": "493:77:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "592:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 46,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "603:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "603:32:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 175,
									"src": "578:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "672:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "702:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "691:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															},
															"value": "Adminable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "683:70:0"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "764:1:0"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"src": "651:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "802:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 68,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "829:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 67,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d696e",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															},
															"value": "Adminable: caller is not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "813:68:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAdmin",
									"nameLocation": "790:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "781:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "964:32:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "975:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "918:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:0"
									},
									"scope": 175,
									"src": "909:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1073:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1084:23:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1013:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 175,
									"src": "1004:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1188:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 99,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"1167:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1167:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 175,
									"src": "1123:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1304:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1335:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1315:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1399:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1243:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 175,
									"src": "1234:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1506:128:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:25:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1553:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1581:45:0"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:18:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:0"
									},
									"scope": 175,
									"src": "1443:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1721:105:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 161,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 163,
															"indexExpression": {
																"id": 162,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 164,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "ModificationAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1732:53:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 167,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1796:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1813:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1796:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1796:22:0"
											}
										]
									},
									"functionSelector": "18e20ecf",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 156,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:0"
										}
									],
									"name": "modificationAdmin",
									"nameLocation": "1651:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:27:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 175,
									"src": "1642:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "279:1550:0",
							"usedErrors": []
						}
					],
					"src": "2:1829:0"
				},
				"id": 0
			},
			"inviter_presell/stake.sol": {
				"ast": {
					"absolutePath": "inviter_presell/stake.sol",
					"exportedSymbols": {
						"Address": [
							1653
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							1132
						],
						"ReentrancyGuard": [
							1054
						],
						"SafeERC20": [
							1356
						],
						"SafeMath": [
							1965
						],
						"StakingRewards": [
							1014
						]
					},
					"id": 1015,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "inviter_presell/adminable.sol",
							"file": "./adminable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 176,
							"src": "30:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 1966,
							"src": "57:73:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 1357,
							"src": "132:81:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 1055,
							"src": "215:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1015,
							"sourceUnit": 1133,
							"src": "295:72:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Adminable",
										"nameLocations": [
											"398:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "398:9:1"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "398:9:1"
								},
								{
									"baseName": {
										"id": 185,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"410:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1054,
										"src": "410:15:1"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "410:15:1"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1014,
							"linearizedBaseContracts": [
								1014,
								1054,
								175,
								20
							],
							"name": "StakingRewards",
							"nameLocation": "380:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "SafeMath",
										"nameLocations": [
											"438:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1965,
										"src": "438:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "432:27:1",
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 192,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "481:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "467:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1132",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "IERC20",
											"nameLocations": [
												"467:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1132,
											"src": "467:6:1"
										},
										"referencedDeclaration": 1132,
										"src": "467:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1132",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 196,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "535:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "500:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 195,
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "508:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "500:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 203,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "566:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "551:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										},
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313638303030",
											"id": 198,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "581:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_168000_by_1",
												"typeString": "int_const 168000"
											},
											"value": "168000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "590:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "596:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "590:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "581:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 205,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "620:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "605:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6139d4b4",
									"id": 208,
									"mutability": "mutable",
									"name": "rateInterval",
									"nameLocation": "651:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "636:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "666:10:1",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600_by_1",
											"typeString": "int_const 600"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c4045cf",
									"id": 211,
									"mutability": "mutable",
									"name": "rateIntervalNumerator",
									"nameLocation": "698:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "683:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "683:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "722:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a6fcee7",
									"id": 214,
									"mutability": "mutable",
									"name": "rateIntervalDenominator",
									"nameLocation": "745:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "730:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "730:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "771:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 216,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "797:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "782:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "782:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 218,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "833:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "818:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 220,
									"mutability": "mutable",
									"name": "_totalPowers",
									"nameLocation": "876:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "860:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 219,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "860:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 224,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "932:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "897:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 223,
										"keyType": {
											"id": 221,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "905:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "897:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 222,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "916:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8107368b",
									"id": 228,
									"mutability": "mutable",
									"name": "userLastUpdateTime",
									"nameLocation": "996:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "961:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 227,
										"keyType": {
											"id": 225,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "969:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "961:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 226,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "980:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1057:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "1021:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 231,
										"keyType": {
											"id": 229,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1029:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1021:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1040:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d42b779d",
									"id": 236,
									"mutability": "mutable",
									"name": "claimedBalances",
									"nameLocation": "1108:15:1",
									"nodeType": "VariableDeclaration",
									"scope": 1014,
									"src": "1073:50:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 235,
										"keyType": {
											"id": 233,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1081:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1073:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 234,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1092:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "1175:554:1",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1194:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "1186:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1186:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"baseExpression": {
														"id": 242,
														"name": "userLastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "1201:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 244,
													"indexExpression": {
														"id": 243,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "1220:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1201:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1186:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 246,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1242:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 247,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1250:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1242:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 254,
												"nodeType": "IfStatement",
												"src": "1239:65:1",
												"trueBody": {
													"id": 253,
													"nodeType": "Block",
													"src": "1261:43:1",
													"statements": [
														{
															"expression": {
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 249,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "1276:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 250,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1283:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1276:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 252,
															"nodeType": "ExpressionStatement",
															"src": "1276:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													256
												],
												"declarations": [
													{
														"constant": false,
														"id": 256,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1322:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 304,
														"src": "1314:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 255,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1314:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": {
													"arguments": [
														{
															"id": 258,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "1352:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 259,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1358:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1364:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1358:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 257,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "1329:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1329:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1314:60:1"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 263,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1385:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 265,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "1423:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 264,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "1408:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1408:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1385:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1385:43:1"
											},
											{
												"expression": {
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 269,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1439:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 270,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "1456:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1456:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1439:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "1439:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 274,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 238,
														"src": "1497:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1516:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 276,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1508:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 275,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1508:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1508:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1497:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 302,
												"nodeType": "IfStatement",
												"src": "1493:217:1",
												"trueBody": {
													"id": 301,
													"nodeType": "Block",
													"src": "1520:190:1",
													"statements": [
														{
															"expression": {
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 280,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "1535:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 282,
																	"indexExpression": {
																		"id": 281,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "1543:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1535:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 284,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 238,
																			"src": "1561:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 283,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 690,
																		"src": "1554:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 285,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1554:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1535:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 287,
															"nodeType": "ExpressionStatement",
															"src": "1535:34:1"
														},
														{
															"expression": {
																"id": 292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 288,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "1584:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 290,
																	"indexExpression": {
																		"id": 289,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "1607:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1584:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 291,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1618:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1584:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 293,
															"nodeType": "ExpressionStatement",
															"src": "1584:54:1"
														},
														{
															"expression": {
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 294,
																		"name": "userLastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 228,
																		"src": "1653:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 238,
																		"src": "1672:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1653:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 297,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1683:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1689:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1683:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1653:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 300,
															"nodeType": "ExpressionStatement",
															"src": "1653:45:1"
														}
													]
												}
											},
											{
												"id": 303,
												"nodeType": "PlaceholderStatement",
												"src": "1720:1:1"
											}
										]
									},
									"id": 305,
									"name": "updateReward",
									"nameLocation": "1145:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1166:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "1158:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1158:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1157:17:1"
									},
									"src": "1136:593:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "1864:165:1",
										"statements": [
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1875:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 317,
														"name": "_rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "1890:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1875:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1875:28:1"
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "rateIntervalNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1914:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 321,
														"name": "_rateIntervalNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "1938:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1914:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "1914:46:1"
											},
											{
												"expression": {
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 324,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1971:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 325,
														"name": "_rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 311,
														"src": "1997:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1971:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 327,
												"nodeType": "ExpressionStatement",
												"src": "1971:50:1"
											}
										]
									},
									"functionSelector": "129ee21a",
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 314,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 313,
												"name": "onlyOwner",
												"nameLocations": [
													"1854:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1854:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1854:9:1"
										}
									],
									"name": "setConfig",
									"nameLocation": "1746:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_rateInterval",
												"nameLocation": "1764:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1756:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "_rateIntervalNumerator",
												"nameLocation": "1787:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1779:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1779:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_rateIntervalDenominator",
												"nameLocation": "1819:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "1811:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1811:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1755:89:1"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1864:0:1"
									},
									"scope": 1014,
									"src": "1737:292:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2092:67:1",
										"statements": [
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 336,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2103:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 337,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2115:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2103:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "2103:16:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 340,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "2130:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 341,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "2147:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2130:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "2130:21:1"
											}
										]
									},
									"functionSelector": "3e0a322d",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 334,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 333,
												"name": "onlyAdmin",
												"nameLocations": [
													"2082:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "2082:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2082:9:1"
										}
									],
									"name": "setStartTime",
									"nameLocation": "2046:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2067:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2059:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2058:14:1"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2092:0:1"
									},
									"scope": 1014,
									"src": "2037:122:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2222:38:1",
										"statements": [
											{
												"expression": {
													"id": 350,
													"name": "_totalPowers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "2240:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 351,
												"nodeType": "Return",
												"src": "2233:19:1"
											}
										]
									},
									"functionSelector": "6917c501",
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPowers",
									"nameLocation": "2176:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:2:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "2213:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2213:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2212:9:1"
									},
									"scope": 1014,
									"src": "2167:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 361,
										"nodeType": "Block",
										"src": "2321:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 358,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2339:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 359,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2345:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2339:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 357,
												"id": 360,
												"nodeType": "Return",
												"src": "2332:22:1"
											}
										]
									},
									"functionSelector": "9a5b17b0",
									"id": 362,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curTime",
									"nameLocation": "2277:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2284:2:1"
									},
									"returnParameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2312:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2312:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2311:9:1"
									},
									"scope": 1014,
									"src": "2268:94:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 373,
										"nodeType": "Block",
										"src": "2437:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 369,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2455:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 371,
													"indexExpression": {
														"id": 370,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 364,
														"src": "2465:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2455:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 368,
												"id": 372,
												"nodeType": "Return",
												"src": "2448:25:1"
											}
										]
									},
									"functionSelector": "b79ec812",
									"id": 374,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "powersOf",
									"nameLocation": "2379:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2396:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2388:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2388:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:17:1"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 367,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2428:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 366,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:9:1"
									},
									"scope": 1014,
									"src": "2370:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 384,
										"nodeType": "Block",
										"src": "2547:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 380,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2579:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2585:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2579:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 379,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "2565:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2565:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 378,
												"id": 383,
												"nodeType": "Return",
												"src": "2558:37:1"
											}
										]
									},
									"functionSelector": "9499c549",
									"id": 385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardPool",
									"nameLocation": "2498:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2514:2:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 385,
												"src": "2538:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2538:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2537:9:1"
									},
									"scope": 1014,
									"src": "2489:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "2678:504:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 392,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2692:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2705:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2692:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 398,
												"nodeType": "IfStatement",
												"src": "2689:65:1",
												"trueBody": {
													"id": 397,
													"nodeType": "Block",
													"src": "2708:46:1",
													"statements": [
														{
															"expression": {
																"id": 395,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2730:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 391,
															"id": 396,
															"nodeType": "Return",
															"src": "2723:19:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 399,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "2767:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 400,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2774:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2767:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 405,
												"nodeType": "IfStatement",
												"src": "2764:56:1",
												"trueBody": {
													"id": 404,
													"nodeType": "Block",
													"src": "2785:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2807:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 391,
															"id": 403,
															"nodeType": "Return",
															"src": "2800:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2838:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 451,
														"src": "2830:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2830:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 416,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 410,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 408,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 387,
																		"src": "2847:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 409,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2854:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2847:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 411,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2846:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 412,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2867:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2846:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 414,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2882:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2846:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2830:53:1"
											},
											{
												"assignments": [
													418
												],
												"declarations": [
													{
														"constant": false,
														"id": 418,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2902:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 451,
														"src": "2894:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 417,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2894:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 420,
												"initialValue": {
													"id": 419,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2910:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2894:28:1"
											},
											{
												"body": {
													"id": 441,
													"nodeType": "Block",
													"src": "2968:98:1",
													"statements": [
														{
															"expression": {
																"id": 439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 431,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "2983:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 432,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 418,
																		"src": "2991:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 435,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 433,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 418,
																				"src": "2999:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 434,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3007:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2999:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 436,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3031:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2999:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2991:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2983:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 440,
															"nodeType": "ExpressionStatement",
															"src": "2983:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 425,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "2952:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 426,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "2956:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2952:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 442,
												"initializationExpression": {
													"assignments": [
														422
													],
													"declarations": [
														{
															"constant": false,
															"id": 422,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2945:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 442,
															"src": "2937:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 421,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2937:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 424,
													"initialValue": {
														"hexValue": "30",
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2949:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2937:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 429,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2963:3:1",
														"subExpression": {
															"id": 428,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 422,
															"src": "2965:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 430,
													"nodeType": "ExpressionStatement",
													"src": "2963:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2933:133:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "rateIntervalDenominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "3150:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 445,
																	"name": "rateIntervalNumerator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "3123:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 443,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 418,
																	"src": "3113:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3119:3:1",
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1859,
																"src": "3113:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 446,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3113:32:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3146:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1874,
														"src": "3113:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3113:61:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 450,
												"nodeType": "Return",
												"src": "3106:68:1"
											}
										]
									},
									"functionSelector": "5cfa91f4",
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardPool",
									"nameLocation": "2620:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2642:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2634:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2634:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2633:14:1"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "2669:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2669:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2668:9:1"
									},
									"scope": 1014,
									"src": "2611:571:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "3259:420:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 459,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3273:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3286:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3273:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 465,
												"nodeType": "IfStatement",
												"src": "3270:65:1",
												"trueBody": {
													"id": 464,
													"nodeType": "Block",
													"src": "3289:46:1",
													"statements": [
														{
															"expression": {
																"id": 462,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "3311:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 458,
															"id": 463,
															"nodeType": "Return",
															"src": "3304:19:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 466,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 454,
														"src": "3348:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 467,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3355:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3348:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "3345:56:1",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "3366:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3388:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 458,
															"id": 470,
															"nodeType": "Return",
															"src": "3381:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													474
												],
												"declarations": [
													{
														"constant": false,
														"id": 474,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "3421:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "3413:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 473,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3413:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 483,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 480,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 475,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 454,
																		"src": "3430:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 476,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "3437:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3430:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 478,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3429:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 479,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3450:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3429:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3465:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3429:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3413:53:1"
											},
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3485:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 512,
														"src": "3477:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3477:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 487,
												"initialValue": {
													"id": 486,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "3493:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3477:28:1"
											},
											{
												"body": {
													"id": 508,
													"nodeType": "Block",
													"src": "3551:98:1",
													"statements": [
														{
															"expression": {
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 498,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 485,
																	"src": "3566:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 499,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 485,
																		"src": "3574:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 504,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 500,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 485,
																				"src": "3582:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 501,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3590:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3582:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 503,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3614:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3582:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3574:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3566:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 507,
															"nodeType": "ExpressionStatement",
															"src": "3566:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 492,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 489,
														"src": "3535:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 493,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "3539:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 509,
												"initializationExpression": {
													"assignments": [
														489
													],
													"declarations": [
														{
															"constant": false,
															"id": 489,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3528:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 509,
															"src": "3520:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 488,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3520:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 491,
													"initialValue": {
														"hexValue": "30",
														"id": 490,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3532:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3520:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 496,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3546:3:1",
														"subExpression": {
															"id": 495,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 489,
															"src": "3548:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 497,
													"nodeType": "ExpressionStatement",
													"src": "3546:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3516:133:1"
											},
											{
												"expression": {
													"id": 510,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 485,
													"src": "3666:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 458,
												"id": 511,
												"nodeType": "Return",
												"src": "3659:12:1"
											}
										]
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRemainPool",
									"nameLocation": "3199:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3222:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3214:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3214:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3213:14:1"
									},
									"returnParameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "3250:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3250:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3249:9:1"
									},
									"scope": 1014,
									"src": "3190:489:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "3754:417:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 520,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3768:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3781:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3768:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 526,
												"nodeType": "IfStatement",
												"src": "3765:62:1",
												"trueBody": {
													"id": 525,
													"nodeType": "Block",
													"src": "3784:43:1",
													"statements": [
														{
															"expression": {
																"id": 523,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "3806:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 519,
															"id": 524,
															"nodeType": "Return",
															"src": "3799:16:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 527,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 515,
														"src": "3842:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 528,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3849:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3842:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 533,
												"nodeType": "IfStatement",
												"src": "3839:56:1",
												"trueBody": {
													"id": 532,
													"nodeType": "Block",
													"src": "3860:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3882:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 519,
															"id": 531,
															"nodeType": "Return",
															"src": "3875:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													535
												],
												"declarations": [
													{
														"constant": false,
														"id": 535,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "3913:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "3905:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 534,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3905:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 536,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "3922:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 537,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "3929:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3922:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 539,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3921:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 540,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3942:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3921:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3957:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3921:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3905:53:1"
											},
											{
												"assignments": [
													546
												],
												"declarations": [
													{
														"constant": false,
														"id": 546,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3977:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "3969:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3969:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 548,
												"initialValue": {
													"id": 547,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "3985:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3969:28:1"
											},
											{
												"body": {
													"id": 569,
													"nodeType": "Block",
													"src": "4043:98:1",
													"statements": [
														{
															"expression": {
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 559,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 546,
																	"src": "4058:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 560,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4066:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 565,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 561,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4074:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 562,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "4082:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4074:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 564,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "4106:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4074:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4066:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4058:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 568,
															"nodeType": "ExpressionStatement",
															"src": "4058:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 553,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "4027:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 554,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 535,
														"src": "4031:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4027:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 570,
												"initializationExpression": {
													"assignments": [
														550
													],
													"declarations": [
														{
															"constant": false,
															"id": 550,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4020:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 570,
															"src": "4012:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 549,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4012:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 552,
													"initialValue": {
														"hexValue": "30",
														"id": 551,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4024:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4012:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4038:3:1",
														"subExpression": {
															"id": 556,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 550,
															"src": "4040:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 558,
													"nodeType": "ExpressionStatement",
													"src": "4038:3:1"
												},
												"nodeType": "ForStatement",
												"src": "4008:133:1"
											},
											{
												"expression": {
													"id": 571,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 546,
													"src": "4158:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 519,
												"id": 572,
												"nodeType": "Return",
												"src": "4151:12:1"
											}
										]
									},
									"functionSelector": "4dbdc4eb",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainPool",
									"nameLocation": "3696:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3718:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "3710:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3710:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3709:14:1"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "3745:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:9:1"
									},
									"scope": 1014,
									"src": "3687:484:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 584,
										"nodeType": "Block",
										"src": "4237:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 580,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4270:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4276:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4270:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "_getRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 608,
														"src": "4255:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 578,
												"id": 583,
												"nodeType": "Return",
												"src": "4248:38:1"
											}
										]
									},
									"functionSelector": "cdda56e0",
									"id": 585,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardRate",
									"nameLocation": "4188:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:2:1"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "4228:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 576,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4228:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:9:1"
									},
									"scope": 1014,
									"src": "4179:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "4371:153:1",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "curPoolAmount",
														"nameLocation": "4390:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "4382:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 592,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 597,
												"initialValue": {
													"arguments": [
														{
															"id": 595,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 587,
															"src": "4420:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 594,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "4406:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4406:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:43:1"
											},
											{
												"assignments": [
													599
												],
												"declarations": [
													{
														"constant": false,
														"id": 599,
														"mutability": "mutable",
														"name": "rewardRate",
														"nameLocation": "4444:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 607,
														"src": "4436:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4436:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 604,
												"initialValue": {
													"arguments": [
														{
															"id": 602,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "4475:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 600,
															"name": "curPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "4457:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4471:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1874,
														"src": "4457:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4457:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4436:52:1"
											},
											{
												"expression": {
													"id": 605,
													"name": "rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 599,
													"src": "4506:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 606,
												"nodeType": "Return",
												"src": "4499:17:1"
											}
										]
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardRate",
									"nameLocation": "4311:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "4334:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "4326:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4326:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4325:14:1"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "4362:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4362:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4361:9:1"
									},
									"scope": 1014,
									"src": "4302:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "4600:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 613,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4618:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4624:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4618:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 612,
												"id": 615,
												"nodeType": "Return",
												"src": "4611:22:1"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "4543:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 609,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4567:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "4591:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4591:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4590:9:1"
									},
									"scope": 1014,
									"src": "4534:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "4723:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 624,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "4738:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4754:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4738:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 630,
												"nodeType": "IfStatement",
												"src": "4734:77:1",
												"trueBody": {
													"id": 629,
													"nodeType": "Block",
													"src": "4757:54:1",
													"statements": [
														{
															"expression": {
																"id": 627,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "4779:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 623,
															"id": 628,
															"nodeType": "Return",
															"src": "4772:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 645,
																	"name": "_totalPowers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "4961:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4951:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 639,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 619,
																					"src": "4935:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 636,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 216,
																							"src": "4915:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 633,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 617,
																								"src": "4884:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 634,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4884:26:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 635,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4911:3:1",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1844,
																						"src": "4884:30:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 637,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4884:46:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 638,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4931:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1859,
																				"src": "4884:50:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4884:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4947:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1859,
																		"src": "4884:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4884:72:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4957:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1874,
																"src": "4884:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4884:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 631,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "4841:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4862:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1829,
														"src": "4841:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4841:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 623,
												"id": 648,
												"nodeType": "Return",
												"src": "4821:168:1"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "4658:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "4681:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4673:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4673:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4672:20:1"
									},
									"returnParameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "4714:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 621,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4714:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4713:9:1"
									},
									"scope": 1014,
									"src": "4649:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 689,
										"nodeType": "Block",
										"src": "5068:233:1",
										"statements": [
											{
												"assignments": [
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "5087:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 689,
														"src": "5079:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 657,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5079:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 666,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 660,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "5117:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 662,
															"indexExpression": {
																"id": 661,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5136:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5117:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 663,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5146:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5152:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5146:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 659,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 854,
														"src": "5094:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5094:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5079:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 684,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "5276:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 686,
															"indexExpression": {
																"id": 685,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 652,
																"src": "5284:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5276:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5266:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 675,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 224,
																						"src": "5228:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 677,
																					"indexExpression": {
																						"id": 676,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 652,
																						"src": "5251:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "5228:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 672,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 658,
																							"src": "5218:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 671,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 650,
																						"src": "5203:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "5203:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5224:3:1",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1844,
																				"src": "5203:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5203:57:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 667,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "5180:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 669,
																			"indexExpression": {
																				"id": 668,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 652,
																				"src": "5190:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5180:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5199:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1859,
																		"src": "5180:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5180:81:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5262:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1874,
																"src": "5180:85:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5180:91:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5272:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1829,
														"src": "5180:95:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5180:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 656,
												"id": 688,
												"nodeType": "Return",
												"src": "5173:120:1"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 690,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "5014:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5029:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5021:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5021:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5020:17:1"
									},
									"returnParameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "5059:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5059:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5058:9:1"
									},
									"scope": 1014,
									"src": "5005:296:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "5442:1286:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 699,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "5466:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5479:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5466:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 702,
																"name": "leftTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 692,
																"src": "5484:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 703,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "5496:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5484:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5466:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 706,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "5509:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5521:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5509:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5466:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "5463:96:1",
												"trueBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "5524:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5546:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 698,
															"id": 711,
															"nodeType": "Return",
															"src": "5539:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 714,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 692,
														"src": "5574:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 715,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "5585:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5574:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 722,
												"nodeType": "IfStatement",
												"src": "5571:72:1",
												"trueBody": {
													"id": 721,
													"nodeType": "Block",
													"src": "5596:47:1",
													"statements": [
														{
															"expression": {
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 717,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "5611:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 718,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5622:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5611:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 720,
															"nodeType": "ExpressionStatement",
															"src": "5611:20:1"
														}
													]
												}
											},
											{
												"assignments": [
													724
												],
												"declarations": [
													{
														"constant": false,
														"id": 724,
														"mutability": "mutable",
														"name": "leftInterval",
														"nameLocation": "5663:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "5655:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 723,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5655:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 725,
																	"name": "rateInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "5679:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 728,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 726,
																					"name": "leftTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 692,
																					"src": "5695:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 727,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 205,
																					"src": "5706:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5695:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 729,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5694:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 730,
																		"name": "rateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "5719:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5694:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5679:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 733,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5678:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 734,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5735:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5678:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5655:92:1"
											},
											{
												"assignments": [
													738
												],
												"declarations": [
													{
														"constant": false,
														"id": 738,
														"mutability": "mutable",
														"name": "leftReward",
														"nameLocation": "5766:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "5758:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 737,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5758:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 746,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 740,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "5793:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 739,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "5779:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5779:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 742,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "5805:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5779:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 744,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5820:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5779:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5758:74:1"
											},
											{
												"assignments": [
													748
												],
												"declarations": [
													{
														"constant": false,
														"id": 748,
														"mutability": "mutable",
														"name": "rightInterval",
														"nameLocation": "5853:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "5845:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 747,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5845:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 749,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "5870:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 750,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5882:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5870:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 752,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5869:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 753,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5895:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5869:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5845:62:1"
											},
											{
												"assignments": [
													757
												],
												"declarations": [
													{
														"constant": false,
														"id": 757,
														"mutability": "mutable",
														"name": "rightReward",
														"nameLocation": "5926:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "5918:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 756,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5918:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 765,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 759,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "5954:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 758,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 452,
																"src": "5940:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5940:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 761,
															"name": "rightInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 748,
															"src": "5967:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5940:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 763,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5983:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5940:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5918:77:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 766,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "6011:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 767,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "6022:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6011:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 769,
														"name": "rightTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 694,
														"src": "6037:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6011:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 776,
												"nodeType": "IfStatement",
												"src": "6008:98:1",
												"trueBody": {
													"id": 775,
													"nodeType": "Block",
													"src": "6048:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 772,
																		"name": "leftTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 692,
																		"src": "6085:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 771,
																	"name": "_getRewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "6070:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 773,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6070:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 698,
															"id": 774,
															"nodeType": "Return",
															"src": "6063:31:1"
														}
													]
												}
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "midInterval",
														"nameLocation": "6126:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "6118:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6118:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 786,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 783,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 781,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 779,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 694,
																"src": "6140:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 780,
																"name": "rightInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 748,
																"src": "6152:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6140:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 782,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "6168:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "6140:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 784,
														"name": "leftInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 724,
														"src": "6179:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6140:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6118:73:1"
											},
											{
												"assignments": [
													788
												],
												"declarations": [
													{
														"constant": false,
														"id": 788,
														"mutability": "mutable",
														"name": "startReward",
														"nameLocation": "6210:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "6202:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 787,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6202:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 792,
												"initialValue": {
													"arguments": [
														{
															"id": 790,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 692,
															"src": "6239:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 789,
														"name": "_getRemainPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 513,
														"src": "6224:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6224:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6202:46:1"
											},
											{
												"assignments": [
													794
												],
												"declarations": [
													{
														"constant": false,
														"id": 794,
														"mutability": "mutable",
														"name": "midTotalReward",
														"nameLocation": "6268:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "6260:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 793,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6260:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"hexValue": "30",
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6285:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6260:26:1"
											},
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "nextReward",
														"nameLocation": "6305:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "6297:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 797,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6297:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 800,
												"initialValue": {
													"hexValue": "30",
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6318:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6297:22:1"
											},
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "6338:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "6330:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 801,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6330:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 804,
												"initialValue": {
													"id": 803,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 788,
													"src": "6346:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6330:27:1"
											},
											{
												"assignments": [
													806
												],
												"declarations": [
													{
														"constant": false,
														"id": 806,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "6376:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 853,
														"src": "6368:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 805,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6368:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 807,
														"name": "midInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 778,
														"src": "6384:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 808,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "6398:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6384:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6368:42:1"
											},
											{
												"body": {
													"id": 839,
													"nodeType": "Block",
													"src": "6456:179:1",
													"statements": [
														{
															"expression": {
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 821,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "6471:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 822,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "6484:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 823,
																			"name": "rateIntervalNumerator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "6492:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6484:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 825,
																		"name": "rateIntervalDenominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "6516:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6484:55:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6471:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 828,
															"nodeType": "ExpressionStatement",
															"src": "6471:68:1"
														},
														{
															"expression": {
																"id": 833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 829,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "6554:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 830,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 802,
																		"src": "6562:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 831,
																		"name": "nextReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "6570:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6562:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6554:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 834,
															"nodeType": "ExpressionStatement",
															"src": "6554:26:1"
														},
														{
															"expression": {
																"id": 837,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 835,
																	"name": "midTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 794,
																	"src": "6595:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 836,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 798,
																	"src": "6613:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6595:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 838,
															"nodeType": "ExpressionStatement",
															"src": "6595:28:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 815,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "6440:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 816,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "6444:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6440:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 840,
												"initializationExpression": {
													"assignments": [
														812
													],
													"declarations": [
														{
															"constant": false,
															"id": 812,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6433:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 840,
															"src": "6425:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 811,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6425:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 814,
													"initialValue": {
														"hexValue": "30",
														"id": 813,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6437:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6425:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6451:3:1",
														"subExpression": {
															"id": 818,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 812,
															"src": "6453:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 820,
													"nodeType": "ExpressionStatement",
													"src": "6451:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6421:214:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 841,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "6653:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 842,
																		"name": "leftReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 738,
																		"src": "6670:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6653:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 844,
																	"name": "rightReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 757,
																	"src": "6683:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6653:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 846,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6652:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 847,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 694,
																	"src": "6699:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 848,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 692,
																	"src": "6711:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6699:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 850,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6698:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6652:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 698,
												"id": 852,
												"nodeType": "Return",
												"src": "6645:75:1"
											}
										]
									},
									"functionSelector": "da4f8431",
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeWeightedAveRate",
									"nameLocation": "5353:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "leftTime",
												"nameLocation": "5384:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "5376:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5376:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "rightTime",
												"nameLocation": "5402:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "5394:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5394:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5375:37:1"
									},
									"returnParameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "5434:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5434:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5433:9:1"
									},
									"scope": 1014,
									"src": "5344:1384:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "6834:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 869,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "6853:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6862:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6853:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6865:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 868,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6845:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6845:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 874,
												"nodeType": "ExpressionStatement",
												"src": "6845:37:1"
											},
											{
												"expression": {
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 875,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 220,
														"src": "6893:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 878,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "6925:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 876,
																"name": "_totalPowers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "6908:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6921:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1829,
															"src": "6908:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6908:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6893:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 881,
												"nodeType": "ExpressionStatement",
												"src": "6893:39:1"
											},
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 882,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6943:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 884,
														"indexExpression": {
															"id": 883,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "6953:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6943:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 889,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 858,
																"src": "6981:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 885,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6961:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 887,
																"indexExpression": {
																	"id": 886,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 856,
																	"src": "6971:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6961:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6977:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1829,
															"src": "6961:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6961:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6943:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "6943:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 894,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "7011:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 895,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "7017:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 893,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "7004:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7004:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 897,
												"nodeType": "EmitStatement",
												"src": "6999:25:1"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 861,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 860,
												"name": "nonReentrant",
												"nameLocations": [
													"6792:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1053,
												"src": "6792:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6792:12:1"
										},
										{
											"id": 863,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 862,
												"name": "onlyAdmin",
												"nameLocations": [
													"6805:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "6805:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6805:9:1"
										},
										{
											"arguments": [
												{
													"id": 865,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 856,
													"src": "6828:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 866,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 864,
												"name": "updateReward",
												"nameLocations": [
													"6815:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 305,
												"src": "6815:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6815:18:1"
										}
									],
									"name": "stake",
									"nameLocation": "6747:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6761:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "6753:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6753:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6775:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "6767:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6767:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6752:30:1"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6834:0:1"
									},
									"scope": 1014,
									"src": "6738:294:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "7112:289:1",
										"statements": [
											{
												"assignments": [
													909
												],
												"declarations": [
													{
														"constant": false,
														"id": 909,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7131:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 948,
														"src": "7123:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 908,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7123:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 914,
												"initialValue": {
													"baseExpression": {
														"id": 910,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "7140:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 913,
													"indexExpression": {
														"expression": {
															"id": 911,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "7148:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7152:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "7148:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7140:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7123:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 915,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 909,
														"src": "7174:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7183:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7174:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 947,
												"nodeType": "IfStatement",
												"src": "7170:224:1",
												"trueBody": {
													"id": 946,
													"nodeType": "Block",
													"src": "7186:208:1",
													"statements": [
														{
															"expression": {
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 918,
																		"name": "claimedBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 236,
																		"src": "7201:15:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 921,
																	"indexExpression": {
																		"expression": {
																			"id": 919,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7217:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 920,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7221:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7217:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7201:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 922,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 909,
																	"src": "7232:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7201:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 924,
															"nodeType": "ExpressionStatement",
															"src": "7201:37:1"
														},
														{
															"expression": {
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 925,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "7253:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 928,
																	"indexExpression": {
																		"expression": {
																			"id": 926,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7261:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7265:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7261:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7253:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7275:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7253:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 931,
															"nodeType": "ExpressionStatement",
															"src": "7253:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 935,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7313:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7317:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7313:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 937,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "7325:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 932,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "7291:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1132",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 934,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7304:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1081,
																	"src": "7291:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7291:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 939,
															"nodeType": "ExpressionStatement",
															"src": "7291:41:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 941,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7363:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7367:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7363:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 943,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 909,
																		"src": "7375:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 940,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 975,
																	"src": "7352:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7352:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 945,
															"nodeType": "EmitStatement",
															"src": "7347:35:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 902,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 901,
												"name": "nonReentrant",
												"nameLocations": [
													"7074:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1053,
												"src": "7074:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7074:12:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 904,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7100:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7104:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7100:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 906,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 903,
												"name": "updateReward",
												"nameLocations": [
													"7087:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 305,
												"src": "7087:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7087:24:1"
										}
									],
									"name": "getReward",
									"nameLocation": "7053:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7062:2:1"
									},
									"returnParameters": {
										"id": 907,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7112:0:1"
									},
									"scope": 1014,
									"src": "7044:357:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "7467:47:1",
										"statements": [
											{
												"expression": {
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 956,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7478:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1132",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 958,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "7500:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 957,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "7493:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1132_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7493:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1132",
															"typeString": "contract IERC20"
														}
													},
													"src": "7478:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1132",
														"typeString": "contract IERC20"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "7478:28:1"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 954,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 953,
												"name": "onlyOwner",
												"nameLocations": [
													"7457:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7457:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7457:9:1"
										}
									],
									"name": "setRewardToken",
									"nameLocation": "7418:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7441:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "7433:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7433:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7432:15:1"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7467:0:1"
									},
									"scope": 1014,
									"src": "7409:105:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 969,
									"name": "Staked",
									"nameLocation": "7534:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7557:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "7541:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7541:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7571:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "7563:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7563:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7540:38:1"
									},
									"src": "7528:51:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 975,
									"name": "RewardPaid",
									"nameLocation": "7591:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7618:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "7602:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7602:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 973,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "7632:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "7624:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 972,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7624:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7601:38:1"
									},
									"src": "7585:55:1"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "7696:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 988,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7741:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$1014",
																			"typeString": "contract StakingRewards"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingRewards_$1014",
																			"typeString": "contract StakingRewards"
																		}
																	],
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7733:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 986,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7733:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7733:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7747:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7733:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 982,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "7715:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7715:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7707:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7707:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7707:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7724:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7707:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7707:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "7707:48:1"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 978,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 977,
												"name": "onlyOwner",
												"nameLocations": [
													"7686:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7686:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7686:9:1"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "7657:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7674:2:1"
									},
									"returnParameters": {
										"id": 979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7696:0:1"
									},
									"scope": 1014,
									"src": "7648:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1012,
										"nodeType": "Block",
										"src": "7853:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1007,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7887:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7891:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7887:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1009,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 998,
															"src": "7899:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1004,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "7871:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1003,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1132,
																"src": "7864:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1132_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7864:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															}
														},
														"id": 1006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7878:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1081,
														"src": "7864:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7864:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "7864:42:1"
											}
										]
									},
									"functionSelector": "a4c3b091",
									"id": 1013,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1001,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1000,
												"name": "onlyOwner",
												"nameLocations": [
													"7843:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7843:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7843:9:1"
										}
									],
									"name": "emergencyWithdrawToken",
									"nameLocation": "7780:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7811:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "7803:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7826:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "7818:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7802:31:1"
									},
									"returnParameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7853:0:1"
									},
									"scope": 1014,
									"src": "7771:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1015,
							"src": "371:7546:1",
							"usedErrors": []
						}
					],
					"src": "0:7917:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1054
						]
					},
					"id": 1055,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1016,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1017,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1054,
							"linearizedBaseContracts": [
								1054
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1020,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1018,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1019,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1023,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1022,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1025,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1054,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1024,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 1030,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1028,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1029,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1031,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 1033,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 1054,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1052,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1037,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1038,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1023,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1036,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1042,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1043,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1044,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1023,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1046,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 1047,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 1050,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1048,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1049,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1051,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1053,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1055,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1132
						]
					},
					"id": 1133,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1056,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1057,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1132,
							"linearizedBaseContracts": [
								1132
							],
							"name": "IERC20",
							"nameLocation": "197:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1063,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:3"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1063,
												"src": "327:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1060,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:3"
									},
									"scope": 1132,
									"src": "281:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1071,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "438:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:3"
									},
									"returnParameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1071,
												"src": "478:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1068,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:3"
									},
									"scope": 1132,
									"src": "419:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1081,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "725:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1073,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "744:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1075,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:3"
									},
									"returnParameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1081,
												"src": "778:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1078,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:3"
									},
									"scope": 1132,
									"src": "707:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1082,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1091,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1078:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1083,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1093:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:3"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1133:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:3"
									},
									"scope": 1132,
									"src": "1059:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1101,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1812:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1829:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1095,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:3"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1101,
												"src": "1863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1098,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:3"
									},
									"scope": 1132,
									"src": "1795:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1102,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2207:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2231:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2258:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:3"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:3"
									},
									"scope": 1132,
									"src": "2176:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1122,
									"name": "Transfer",
									"nameLocation": "2478:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2487:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2509:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1122,
												"src": "2529:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:3"
									},
									"src": "2472:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1123,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1131,
									"name": "Approval",
									"nameLocation": "2709:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2718:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2741:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1126,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1129,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "2766:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:3"
									},
									"src": "2703:78:3"
								}
							],
							"scope": 1133,
							"src": "187:2596:3",
							"usedErrors": []
						}
					],
					"src": "91:2693:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1653
						],
						"IERC20": [
							1132
						],
						"SafeERC20": [
							1356
						]
					},
					"id": 1357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1134,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1135,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1357,
							"sourceUnit": 1133,
							"src": "125:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1136,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1357,
							"sourceUnit": 1654,
							"src": "149:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1137,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1356,
							"linearizedBaseContracts": [
								1356
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1140,
									"libraryName": {
										"id": 1138,
										"name": "Address",
										"nameLocations": [
											"675:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1653,
										"src": "675:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:4",
									"typeName": {
										"id": 1139,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1162,
										"nodeType": "Block",
										"src": "803:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1151,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1143,
															"src": "833:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1154,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1143,
																			"src": "863:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1132",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "869:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1081,
																		"src": "863:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1156,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "878:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1157,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1145,
																	"src": "888:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1158,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "892:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1152,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "844:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1150,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "813:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1132_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1161,
												"nodeType": "ExpressionStatement",
												"src": "813:86:4"
											}
										]
									},
									"id": 1163,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1143,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "732:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1132",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1142,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1141,
														"name": "IERC20",
														"nameLocations": [
															"732:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1132,
														"src": "732:6:4"
													},
													"referencedDeclaration": 1132,
													"src": "732:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1132",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "754:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1163,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:4"
									},
									"returnParameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:4"
									},
									"scope": 1356,
									"src": "701:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "1040:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1176,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1166,
															"src": "1070:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1179,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "1100:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1132",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1180,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1106:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1113,
																		"src": "1100:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1181,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1182,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "1129:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1183,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "1135:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1184,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "1139:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1177,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1081:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1175,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "1050:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1132_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:4"
											}
										]
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "947:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1132",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1165,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1164,
														"name": "IERC20",
														"nameLocations": [
															"947:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1132,
														"src": "947:6:4"
													},
													"referencedDeclaration": 1132,
													"src": "947:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1132",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "969:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "991:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1189,
												"src": "1011:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:4"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:4"
									},
									"scope": 1356,
									"src": "912:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "1519:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1201,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1197,
																			"src": "1768:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1204,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1209,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1356",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1356",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1208,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1207,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1210,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1211,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1195,
																					"src": "1815:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1205,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1193,
																					"src": "1784:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1132",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1790:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1091,
																				"src": "1784:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1215,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1219,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "1939:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1224,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1193,
																			"src": "1969:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1132",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1975:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1101,
																		"src": "1969:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1226,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1983:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1227,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1195,
																	"src": "1993:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1228,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1197,
																	"src": "2002:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1222,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1223,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1950:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1229,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1220,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "1919:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1132_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1231,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:4"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1443:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1132",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1192,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1191,
														"name": "IERC20",
														"nameLocations": [
															"1443:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1132,
														"src": "1443:6:4"
													},
													"referencedDeclaration": 1132,
													"src": "1443:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1132",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1465:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "1490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:4"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:4"
									},
									"scope": 1356,
									"src": "1413:603:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1268,
										"nodeType": "Block",
										"src": "2138:194:4",
										"statements": [
											{
												"assignments": [
													1244
												],
												"declarations": [
													{
														"constant": false,
														"id": 1244,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1268,
														"src": "2148:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1255,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1249,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1356",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1356",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1247,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1251,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1238,
																"src": "2202:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1245,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1236,
																"src": "2171:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1132",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2177:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1091,
															"src": "2171:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1252,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1253,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "2213:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1257,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "2248:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1260,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1236,
																			"src": "2278:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1132",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1261,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2284:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1101,
																		"src": "2278:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2292:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1263,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1238,
																	"src": "2302:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1264,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1244,
																	"src": "2311:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1258,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2259:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1132",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1256,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1355,
														"src": "2228:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1132_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1267,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:4"
											}
										]
									},
									"id": 1269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2062:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1132",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1235,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1234,
														"name": "IERC20",
														"nameLocations": [
															"2062:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1132,
														"src": "2062:6:4"
													},
													"referencedDeclaration": 1132,
													"src": "2062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1132",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1269,
												"src": "2109:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:4"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:4"
									},
									"scope": 1356,
									"src": "2022:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1316,
										"nodeType": "Block",
										"src": "2454:370:4",
										"statements": [
											{
												"id": 1315,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:4",
												"statements": [
													{
														"assignments": [
															1280
														],
														"declarations": [
															{
																"constant": false,
																"id": 1280,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1315,
																"src": "2488:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1289,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1285,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1356",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1356",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1284,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1283,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1286,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1287,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1274,
																	"src": "2542:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1281,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "2511:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1132",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2517:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1091,
																"src": "2511:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1291,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1280,
																		"src": "2572:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1292,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "2588:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1290,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1296,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:4"
													},
													{
														"assignments": [
															1298
														],
														"declarations": [
															{
																"constant": false,
																"id": 1298,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1315,
																"src": "2653:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1302,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1299,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1280,
																"src": "2676:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1300,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "2691:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1304,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1272,
																	"src": "2730:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1132",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1307,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1272,
																					"src": "2760:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1132",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1308,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2766:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1101,
																				"src": "2760:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1309,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2774:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1310,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1274,
																			"src": "2784:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1311,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1298,
																			"src": "2793:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1305,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1306,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2741:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1312,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1132",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1303,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "2710:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1132_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1314,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:4"
													}
												]
											}
										]
									},
									"id": 1317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2378:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1132",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1271,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1270,
														"name": "IERC20",
														"nameLocations": [
															"2378:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1132,
														"src": "2378:6:4"
													},
													"referencedDeclaration": 1132,
													"src": "2378:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1132",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "2425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:4"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:4"
									},
									"scope": 1356,
									"src": "2338:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1354,
										"nodeType": "Block",
										"src": "3277:636:4",
										"statements": [
											{
												"assignments": [
													1327
												],
												"declarations": [
													{
														"constant": false,
														"id": 1327,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1354,
														"src": "3626:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1326,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1336,
												"initialValue": {
													"arguments": [
														{
															"id": 1333,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "3680:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1334,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1330,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "3660:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1132",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1132",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1329,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1328,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3667:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1447,
														"src": "3652:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1337,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1327,
															"src": "3735:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3746:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1353,
												"nodeType": "IfStatement",
												"src": "3731:176:4",
												"trueBody": {
													"id": 1352,
													"nodeType": "Block",
													"src": "3758:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1344,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1327,
																				"src": "3830:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1346,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1345,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1347,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1342,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3823:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1341,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1351,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3236:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1132",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1320,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1319,
														"name": "IERC20",
														"nameLocations": [
															"3236:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1132,
														"src": "3236:6:4"
													},
													"referencedDeclaration": 1132,
													"src": "3236:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1132",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1355,
												"src": "3250:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:4"
									},
									"returnParameters": {
										"id": 1325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:4"
									},
									"scope": 1356,
									"src": "3207:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1357,
							"src": "645:3270:4",
							"usedErrors": []
						}
					],
					"src": "100:3816:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1653
						]
					},
					"id": 1654,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1358,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1359,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1653,
							"linearizedBaseContracts": [
								1653
							],
							"name": "Address",
							"nameLocation": "187:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1375,
										"nodeType": "Block",
										"src": "837:311:5",
										"statements": [
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1375,
														"src": "1034:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1369,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1362,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:5",
														"valueSize": 1
													}
												],
												"id": 1370,
												"nodeType": "InlineAssembly",
												"src": "1056:61:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1371,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "1133:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1366,
												"id": 1374,
												"nodeType": "Return",
												"src": "1126:15:5"
											}
										]
									},
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1362,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "791:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1361,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:5"
									},
									"returnParameters": {
										"id": 1366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1376,
												"src": "831:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:5"
									},
									"scope": 1653,
									"src": "771:377:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1409,
										"nodeType": "Block",
										"src": "2136:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1387,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1653",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1653",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1385,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2168:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1390,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "2179:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1384,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:5"
											},
											{
												"assignments": [
													1396,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1396,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1409,
														"src": "2231:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1395,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1403,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1397,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1379,
																"src": "2249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2259:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1399,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "2271:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1405,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1396,
															"src": "2300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1404,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:5"
											}
										]
									},
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1410,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2084:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "2111:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:5"
									},
									"returnParameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:5"
									},
									"scope": 1653,
									"src": "2065:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1426,
										"nodeType": "Block",
										"src": "3208:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1421,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "3238:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1422,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1415,
															"src": "3246:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1420,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1427,
															1447
														],
														"referencedDeclaration": 1447,
														"src": "3225:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1419,
												"id": 1425,
												"nodeType": "Return",
												"src": "3218:67:5"
											}
										]
									},
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3141:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3157:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1414,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:5"
									},
									"returnParameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1427,
												"src": "3194:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:5"
									},
									"scope": 1653,
									"src": "3119:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "3661:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1440,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1430,
															"src": "3700:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1441,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1432,
															"src": "3708:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1443,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "3717:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1439,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1467,
															1517
														],
														"referencedDeclaration": 1517,
														"src": "3678:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1438,
												"id": 1445,
												"nodeType": "Return",
												"src": "3671:59:5"
											}
										]
									},
									"documentation": {
										"id": 1428,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1429,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3569:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1431,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1434,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3596:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1433,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:5"
									},
									"returnParameters": {
										"id": 1438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "3647:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1436,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:5"
									},
									"scope": 1653,
									"src": "3514:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1466,
										"nodeType": "Block",
										"src": "4242:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1460,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4281:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1461,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "4289:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1462,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1454,
															"src": "4295:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1459,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1467,
															1517
														],
														"referencedDeclaration": 1517,
														"src": "4259:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1458,
												"id": 1465,
												"nodeType": "Return",
												"src": "4252:94:5"
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1467,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "4190:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:5"
									},
									"returnParameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1467,
												"src": "4228:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1456,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:5"
									},
									"scope": 1653,
									"src": "4099:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1516,
										"nodeType": "Block",
										"src": "4780:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1484,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1653",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1653",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1482,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4812:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1487,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "4823:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1491,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1494,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1470,
																	"src": "4900:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1493,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "4889:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1492,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1498,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:5"
											},
											{
												"assignments": [
													1500,
													1502
												],
												"declarations": [
													{
														"constant": false,
														"id": 1500,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "4953:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1499,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1502,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1516,
														"src": "4967:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1501,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1509,
												"initialValue": {
													"arguments": [
														{
															"id": 1507,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1472,
															"src": "5020:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1503,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "4994:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1504,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5001:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1505,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1474,
																"src": "5013:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1511,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "5059:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1512,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1502,
															"src": "5068:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1513,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1476,
															"src": "5080:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1510,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "5042:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1480,
												"id": 1515,
												"nodeType": "Return",
												"src": "5035:58:5"
											}
										]
									},
									"documentation": {
										"id": 1468,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4641:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4665:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4692:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4715:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1475,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:5"
									},
									"returnParameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1517,
												"src": "4766:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1478,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:5"
									},
									"scope": 1653,
									"src": "4601:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1533,
										"nodeType": "Block",
										"src": "5377:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1528,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "5413:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1522,
															"src": "5421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1527,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1534,
															1569
														],
														"referencedDeclaration": 1569,
														"src": "5394:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1526,
												"id": 1532,
												"nodeType": "Return",
												"src": "5387:80:5"
											}
										]
									},
									"documentation": {
										"id": 1518,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1534,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1520,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "5305:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "5321:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:5"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "5363:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1524,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:5"
									},
									"scope": 1653,
									"src": "5277:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1568,
										"nodeType": "Block",
										"src": "5816:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1548,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1537,
																	"src": "5845:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1547,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "5834:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1546,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:5"
											},
											{
												"assignments": [
													1554,
													1556
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1568,
														"src": "5905:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1553,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1556,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1568,
														"src": "5919:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1555,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1561,
												"initialValue": {
													"arguments": [
														{
															"id": 1559,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1539,
															"src": "5964:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1557,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1537,
															"src": "5946:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5953:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1563,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "6003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1564,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1556,
															"src": "6012:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1565,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "6024:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1562,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "5986:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1545,
												"id": 1567,
												"nodeType": "Return",
												"src": "5979:58:5"
											}
										]
									},
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1569,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "5695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "5719:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1538,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "5746:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1540,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:5"
									},
									"returnParameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1569,
												"src": "5802:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1543,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:5"
									},
									"scope": 1653,
									"src": "5658:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "6320:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1580,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "6358:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1581,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1574,
															"src": "6366:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1579,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1586,
															1621
														],
														"referencedDeclaration": 1621,
														"src": "6337:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1578,
												"id": 1584,
												"nodeType": "Return",
												"src": "6330:84:5"
											}
										]
									},
									"documentation": {
										"id": 1570,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1572,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6253:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1574,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6269:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1573,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:5"
									},
									"returnParameters": {
										"id": 1578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "6306:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1576,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:5"
									},
									"scope": 1653,
									"src": "6223:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "6762:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1600,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "6791:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1599,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "6780:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1604,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:5"
											},
											{
												"assignments": [
													1606,
													1608
												],
												"declarations": [
													{
														"constant": false,
														"id": 1606,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "6853:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1605,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1608,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1620,
														"src": "6867:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1607,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1613,
												"initialValue": {
													"arguments": [
														{
															"id": 1611,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "6914:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1609,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "6894:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6901:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1615,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "6953:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1616,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1608,
															"src": "6962:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1617,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1593,
															"src": "6974:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1614,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1652,
														"src": "6936:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1597,
												"id": 1619,
												"nodeType": "Return",
												"src": "6929:58:5"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "6646:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "6670:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "6697:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1592,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:5"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "6748:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1595,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:5"
									},
									"scope": 1653,
									"src": "6607:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1651,
										"nodeType": "Block",
										"src": "7374:532:5",
										"statements": [
											{
												"condition": {
													"id": 1633,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1624,
													"src": "7388:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1649,
													"nodeType": "Block",
													"src": "7445:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1640,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1637,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1626,
																		"src": "7529:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7540:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1639,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1647,
																"nodeType": "Block",
																"src": "7837:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1644,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1628,
																					"src": "7862:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1643,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1645,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1646,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:5"
																	}
																]
															},
															"id": 1648,
															"nodeType": "IfStatement",
															"src": "7525:365:5",
															"trueBody": {
																"id": 1642,
																"nodeType": "Block",
																"src": "7552:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1626,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1626,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1641,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1650,
												"nodeType": "IfStatement",
												"src": "7384:516:5",
												"trueBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "7397:42:5",
													"statements": [
														{
															"expression": {
																"id": 1634,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1626,
																"src": "7418:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1632,
															"id": 1635,
															"nodeType": "Return",
															"src": "7411:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1652,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "7249:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1623,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "7271:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1625,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "7304:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1627,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:5"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1652,
												"src": "7360:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1630,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:5"
									},
									"scope": 1653,
									"src": "7214:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1654,
							"src": "179:7729:5",
							"usedErrors": []
						}
					],
					"src": "86:7823:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1965
						]
					},
					"id": 1966,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1655,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1656,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1965,
							"linearizedBaseContracts": [
								1965
							],
							"name": "SafeMath",
							"nameLocation": "475:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "702:140:6",
										"statements": [
											{
												"id": 1686,
												"nodeType": "UncheckedBlock",
												"src": "712:124:6",
												"statements": [
													{
														"assignments": [
															1669
														],
														"declarations": [
															{
																"constant": false,
																"id": 1669,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1686,
																"src": "736:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1668,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1673,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1670,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "748:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1671,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1661,
																"src": "752:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1674,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1669,
																"src": "771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1675,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1659,
																"src": "775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1681,
														"nodeType": "IfStatement",
														"src": "767:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1678,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1679,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1667,
															"id": 1680,
															"nodeType": "Return",
															"src": "778:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1683,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "823:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1684,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1667,
														"id": 1685,
														"nodeType": "Return",
														"src": "809:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1657,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1659,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "642:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1661,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1660,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:6"
									},
									"returnParameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "687:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1663,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:6"
									},
									"scope": 1965,
									"src": "626:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1715,
										"nodeType": "Block",
										"src": "1064:113:6",
										"statements": [
											{
												"id": 1714,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1700,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "1102:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1701,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "1106:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1707,
														"nodeType": "IfStatement",
														"src": "1098:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1705,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1699,
															"id": 1706,
															"nodeType": "Return",
															"src": "1109:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1709,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1691,
																		"src": "1154:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1710,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "1158:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1712,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1699,
														"id": 1713,
														"nodeType": "Return",
														"src": "1140:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1004:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:6"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1049:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1695,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1716,
												"src": "1055:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:6"
									},
									"scope": 1965,
									"src": "988:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1757,
										"nodeType": "Block",
										"src": "1401:417:6",
										"statements": [
											{
												"id": 1756,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1728,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "1669:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1735,
														"nodeType": "IfStatement",
														"src": "1665:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1733,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1727,
															"id": 1734,
															"nodeType": "Return",
															"src": "1677:16:6"
														}
													},
													{
														"assignments": [
															1737
														],
														"declarations": [
															{
																"constant": false,
																"id": 1737,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1756,
																"src": "1707:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1736,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1741,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1738,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1719,
																"src": "1719:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1739,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "1723:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1742,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "1742:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1743,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1719,
																	"src": "1746:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1745,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1721,
																"src": "1751:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1751,
														"nodeType": "IfStatement",
														"src": "1738:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1747,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1749,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1727,
															"id": 1750,
															"nodeType": "Return",
															"src": "1754:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1752,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1753,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "1799:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1754,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1727,
														"id": 1755,
														"nodeType": "Return",
														"src": "1785:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1717,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1758,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1719,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1341:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:6"
									},
									"returnParameters": {
										"id": 1727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1386:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1723,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1758,
												"src": "1392:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:6"
									},
									"scope": 1965,
									"src": "1325:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1785,
										"nodeType": "Block",
										"src": "2043:114:6",
										"statements": [
											{
												"id": 1784,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1770,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1763,
																"src": "2081:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1777,
														"nodeType": "IfStatement",
														"src": "2077:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1773,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1775,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1769,
															"id": 1776,
															"nodeType": "Return",
															"src": "2089:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1781,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1779,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1761,
																		"src": "2134:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1780,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1763,
																		"src": "2138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1782,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1769,
														"id": 1783,
														"nodeType": "Return",
														"src": "2120:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "1983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1760,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:6"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2028:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1765,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "2034:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:6"
									},
									"scope": 1965,
									"src": "1967:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1813,
										"nodeType": "Block",
										"src": "2392:114:6",
										"statements": [
											{
												"id": 1812,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1798,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1791,
																"src": "2430:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1805,
														"nodeType": "IfStatement",
														"src": "2426:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1803,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1797,
															"id": 1804,
															"nodeType": "Return",
															"src": "2438:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1807,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1789,
																		"src": "2483:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1808,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1791,
																		"src": "2487:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1810,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1797,
														"id": 1811,
														"nodeType": "Return",
														"src": "2469:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1787,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1789,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "2332:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:6"
									},
									"returnParameters": {
										"id": 1797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1793,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1814,
												"src": "2383:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:6"
									},
									"scope": 1965,
									"src": "2316:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1828,
										"nodeType": "Block",
										"src": "2808:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1824,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1817,
														"src": "2825:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1825,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1819,
														"src": "2829:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1823,
												"id": 1827,
												"nodeType": "Return",
												"src": "2818:12:6"
											}
										]
									},
									"documentation": {
										"id": 1815,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2754:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:6"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1829,
												"src": "2799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:6"
									},
									"scope": 1965,
									"src": "2741:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "3175:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1839,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1832,
														"src": "3192:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1840,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1834,
														"src": "3196:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1838,
												"id": 1842,
												"nodeType": "Return",
												"src": "3185:12:6"
											}
										]
									},
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1832,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3121:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1834,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:6"
									},
									"returnParameters": {
										"id": 1838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "3166:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:6"
									},
									"scope": 1965,
									"src": "3108:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1858,
										"nodeType": "Block",
										"src": "3518:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1854,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1847,
														"src": "3535:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1855,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "3539:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1853,
												"id": 1857,
												"nodeType": "Return",
												"src": "3528:12:6"
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "3464:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:6"
									},
									"returnParameters": {
										"id": 1853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1859,
												"src": "3509:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:6"
									},
									"scope": 1965,
									"src": "3451:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1873,
										"nodeType": "Block",
										"src": "3903:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1869,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1862,
														"src": "3920:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1870,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "3924:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1868,
												"id": 1872,
												"nodeType": "Return",
												"src": "3913:12:6"
											}
										]
									},
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "3849:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:6"
									},
									"returnParameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1874,
												"src": "3894:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1866,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:6"
									},
									"scope": 1965,
									"src": "3836:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1888,
										"nodeType": "Block",
										"src": "4452:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1884,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1877,
														"src": "4469:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1885,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1879,
														"src": "4473:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1883,
												"id": 1887,
												"nodeType": "Return",
												"src": "4462:12:6"
											}
										]
									},
									"documentation": {
										"id": 1875,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1889,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1877,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "4398:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1876,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:6"
									},
									"returnParameters": {
										"id": 1883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "4443:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:6"
									},
									"scope": 1965,
									"src": "4385:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1913,
										"nodeType": "Block",
										"src": "5070:106:6",
										"statements": [
											{
												"id": 1912,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1902,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1894,
																		"src": "5112:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1903,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "5117:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1905,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1896,
																	"src": "5120:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1901,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1907,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1908,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "5154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1909,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1894,
																"src": "5158:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1900,
														"id": 1911,
														"nodeType": "Return",
														"src": "5147:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1914,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "4967:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "4986:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "5005:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:6"
									},
									"returnParameters": {
										"id": 1900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1914,
												"src": "5061:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:6"
									},
									"scope": 1965,
									"src": "4945:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1938,
										"nodeType": "Block",
										"src": "5785:105:6",
										"statements": [
											{
												"id": 1937,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1929,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1927,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1919,
																		"src": "5827:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1928,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1930,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "5834:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1926,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1931,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1932,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1933,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1917,
																"src": "5868:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1934,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1919,
																"src": "5872:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1925,
														"id": 1936,
														"nodeType": "Return",
														"src": "5861:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1915,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1917,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "5682:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "5701:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1918,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "5720:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1920,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:6"
									},
									"returnParameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1924,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1939,
												"src": "5776:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:6"
									},
									"scope": 1965,
									"src": "5660:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1963,
										"nodeType": "Block",
										"src": "6661:105:6",
										"statements": [
											{
												"id": 1962,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1952,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1944,
																		"src": "6703:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1955,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1946,
																	"src": "6710:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1951,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1957,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1958,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "6744:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1959,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1944,
																"src": "6748:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1950,
														"id": 1961,
														"nodeType": "Return",
														"src": "6737:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1940,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1942,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6558:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6577:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1946,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6596:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1945,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:6"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1964,
												"src": "6652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:6"
									},
									"scope": 1965,
									"src": "6536:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1966,
							"src": "467:6301:6",
							"usedErrors": []
						}
					],
					"src": "92:6677:6"
				},
				"id": 6
			}
		}
	}
}
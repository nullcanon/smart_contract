{
	"id": "3fa367093817a1239ad988db3cd220ff",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"inviter_presell/stake.sol": {
				"content": "pragma solidity ^0.8.10;\r\n\r\n\r\nimport \"./adminable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract StakingRewards is Adminable , ReentrancyGuard{\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public rewardsToken;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 public totalRewards = 400 * 10 ** 18;\r\n    uint256 public startTime;\r\n    uint256 public rateInterval = 1 days;\r\n    uint256 public rateIntervalNumerator = 5;\r\n    uint256 public rateIntervalDenominator = 1000;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public userLastUpdateTime;\r\n\r\n    uint256 private _totalPowers;\r\n    mapping(address => uint256) private _balances;\r\n\r\n\r\n\r\n    modifier updateReward(address account) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        rewardPerTokenStored = rewardPerToken(rate);\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            userLastUpdateTime[account] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setStartTime(uint256 time) public onlyAdmin {\r\n        startTime = time;\r\n    }\r\n\r\n    function totalPowers() external view returns (uint256) {\r\n        return _totalPowers;\r\n    }\r\n\r\n    function powersOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getCurRewardPool() public view returns (uint256) {\r\n        return _getRewardPool(block.timestamp);\r\n    }\r\n\r\n    function _getRewardPool(uint256 time) private view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value * rateIntervalNumerator / rateIntervalDenominator;\r\n    }\r\n\r\n    function getCurRewardRate() public view returns (uint256) {\r\n        return _getRewardRate(block.timestamp);\r\n    }\r\n\r\n    function _getRewardRate(uint256 time) private view returns (uint256) {\r\n        uint256 curPoolAmount = _getRewardPool(time);\r\n        uint256 rewardRate = curPoolAmount.div(rateInterval);\r\n        return rewardRate;\r\n    }\r\n\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function rewardPerToken(uint256 rewardRate) public view returns (uint256) {\r\n        if (_totalPowers == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    // Time-weighted average rate\r\n    function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){\r\n        \r\n        if(startTime == 0 || leftTime <= rightTime) {\r\n            return 0;\r\n        }\r\n        \r\n        if(rightTime - leftTime <= rateInterval) {\r\n\r\n        }\r\n        uint256 tmp = leftTime + rateInterval;\r\n        uint256 leftInterval = tmp - (tmp - startTime) % rateInterval;\r\n        uint256 leftReward = _getRewardPool(leftTime) * leftInterval / rateInterval;\r\n\r\n        uint256 rightInterval = (rightTime - startTime) % rateInterval;\r\n        uint256 rightReward = _getRewardPool(rightTime) * rightInterval / rateInterval;\r\n\r\n        // 存在被减数大于减数得情况\r\n        uint256 midInterval = rightTime - rightInterval - leftInterval - tmp;\r\n        uint256 startReward = _getRewardPool(tmp + leftInterval); \r\n        uint256 midTotalReward = startReward;\r\n        uint256 nextReward = startReward;\r\n        uint256 frontReward = _getRewardPool(tmp + leftInterval);\r\n        for(uint256 i = 0; i < midInterval / rateInterval; ++i) {\r\n            frontReward = nextReward;\r\n            nextReward = frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator;\r\n            midTotalReward = midTotalReward + nextReward;\r\n        }\r\n        return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime);\r\n    }\r\n\r\n    function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalPowers = _totalPowers.add(amount);\r\n        _balances[user] = _balances[user].add(amount);\r\n        emit Staked(user, amount);\r\n    }\r\n\r\n\r\n\r\n    function getReward() public nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n}"
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\nimport \"../../../utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n"
			},
			"inviter_presell/adminable.sol": {
				"content": "\r\npragma solidity ^0.8.16;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Adminable is Context {\r\n    mapping(address => bool) private _admins;\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ModificationAdmin(address indexed admin, bool oldState, bool newState);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Adminable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function isAdmin(address account) public view virtual returns (bool) {\r\n        return _admins[account];\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    function modificationAdmin(address admin, bool state) public virtual onlyOwner {\r\n        emit ModificationAdmin(admin,  _admins[admin], state);\r\n        _admins[admin] = state;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"inviter_presell/adminable.sol": {
				"Adminable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Adminable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/stake.sol": {
				"StakingRewards": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "leftTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rightTime",
									"type": "uint256"
								}
							],
							"name": "getTimeWeightedAveRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "powersOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalNumerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPowers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/stake.sol\":297:5718  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n    /* \"inviter_presell/stake.sol\":507:521  400 * 10 ** 18 */\n  0x15af1d78b58c400000\n    /* \"inviter_presell/stake.sol\":477:521  uint256 public totalRewards = 400 * 10 ** 18 */\n  0x05\n  sstore\n    /* \"inviter_presell/stake.sol\":589:595  1 days */\n  0x015180\n    /* \"inviter_presell/stake.sol\":559:595  uint256 public rateInterval = 1 days */\n  0x07\n  sstore\n    /* \"inviter_presell/stake.sol\":641:642  5 */\n  0x05\n    /* \"inviter_presell/stake.sol\":602:642  uint256 public rateIntervalNumerator = 5 */\n  0x08\n  sstore\n    /* \"inviter_presell/stake.sol\":690:694  1000 */\n  0x03e8\n    /* \"inviter_presell/stake.sol\":649:694  uint256 public rateIntervalDenominator = 1000 */\n  0x09\n  sstore\n    /* \"inviter_presell/stake.sol\":297:5718  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  tag_6\n    /* \"inviter_presell/adminable.sol\":622:632  _msgSender */\n  shl(0x20, tag_7)\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"inviter_presell/adminable.sol\":603:621  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1852  _status */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/stake.sol\":297:5718  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"inviter_presell/adminable.sol\":116:123  address */\n  0x00\n    /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n  caller\n    /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n  0x00\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n  0x01\n  0x00\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n  pop\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"inviter_presell/stake.sol\":297:5718  contract StakingRewards is Adminable , ReentrancyGuard{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/stake.sol\":297:5718  contract StakingRewards is Adminable , ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80faa57d\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb79ec812\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xda4f8431\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0xb79ec812\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcdda56e0\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x8b876347\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9499c549\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0x80faa57d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8107368b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x874c120b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_30:\n      dup1\n      0x3d18b912\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x6917c501\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x6917c501\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7a6fcee7\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x3d18b912\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3e0a322d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6139d4b4\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18e20ecf\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c4045cf\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/stake.sol\":3238:3534  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":426:468  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":477:521  uint256 public totalRewards = 400 * 10 ** 18 */\n    tag_5:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_6:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_7:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_54:\n      tag_55\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":602:642  uint256 public rateIntervalNumerator = 5 */\n    tag_8:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":5282:5585  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_9:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"inviter_presell/stake.sol\":1496:1584  function setStartTime(uint256 time) public onlyAdmin {... */\n    tag_10:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n    tag_63:\n      stop\n        /* \"inviter_presell/stake.sol\":559:595  uint256 public rateInterval = 1 days */\n    tag_11:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1592:1685  function totalPowers() external view returns (uint256) {... */\n    tag_12:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"inviter_presell/stake.sol\":528:552  uint256 public startTime */\n    tag_14:\n      tag_75\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":649:694  uint256 public rateIntervalDenominator = 1000 */\n    tag_15:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2767:2874  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_16:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":845:898  mapping(address => uint256) public userLastUpdateTime */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2882:3230  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":781:838  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_19:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_93:\n      tag_94\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_20:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      tag_98\n      swap2\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1812:1927  function getCurRewardPool() public view returns (uint256) {... */\n    tag_21:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4970:5270  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n    tag_22:\n      tag_103\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_104\n      swap2\n      swap1\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n    tag_103:\n      stop\n        /* \"inviter_presell/stake.sol\":1693:1804  function powersOf(address account) external view returns (uint256) {... */\n    tag_23:\n      tag_107\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_108:\n      tag_109\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":701:730  uint256 public lastUpdateTime */\n    tag_24:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2411:2526  function getCurRewardRate() public view returns (uint256) {... */\n    tag_25:\n      tag_114\n      tag_115\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      tag_116\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":393:419  IERC20 public rewardsToken */\n    tag_26:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":3577:4962  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_27:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":737:772  uint256 public rewardPerTokenStored */\n    tag_28:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      stop\n        /* \"inviter_presell/stake.sol\":3238:3534  function earned(address account) public view returns (uint256) {... */\n    tag_39:\n        /* \"inviter_presell/stake.sol\":3292:3299  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3312:3324  uint256 rate */\n      dup1\n        /* \"inviter_presell/stake.sol\":3327:3395  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_133\n        /* \"inviter_presell/stake.sol\":3350:3368  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":3350:3377  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":3369:3376  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":3350:3377  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3379:3394  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":3327:3349  getTimeWeightedAveRate */\n      tag_124\n        /* \"inviter_presell/stake.sol\":3327:3395  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_133:\n        /* \"inviter_presell/stake.sol\":3312:3395  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3413:3526  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_134\n        /* \"inviter_presell/stake.sol\":3509:3516  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":3509:3525  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":3517:3524  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":3509:3525  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3413:3504  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_135\n        /* \"inviter_presell/stake.sol\":3499:3503  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":3413:3494  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      tag_136\n        /* \"inviter_presell/stake.sol\":3436:3493  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      tag_137\n        /* \"inviter_presell/stake.sol\":3461:3483  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":3461:3492  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":3484:3491  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":3461:3492  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3436:3456  rewardPerToken(rate) */\n      tag_138\n        /* \"inviter_presell/stake.sol\":3451:3455  rate */\n      dup9\n        /* \"inviter_presell/stake.sol\":3436:3450  rewardPerToken */\n      tag_90\n        /* \"inviter_presell/stake.sol\":3436:3456  rewardPerToken(rate) */\n      jump\t// in\n    tag_138:\n        /* \"inviter_presell/stake.sol\":3436:3460  rewardPerToken(rate).sub */\n      tag_139\n      swap1\n        /* \"inviter_presell/stake.sol\":3436:3493  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_137:\n        /* \"inviter_presell/stake.sol\":3413:3422  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":3413:3431  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":3423:3430  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":3413:3431  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3413:3435  _balances[account].mul */\n      tag_140\n      swap1\n        /* \"inviter_presell/stake.sol\":3413:3494  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_136:\n        /* \"inviter_presell/stake.sol\":3413:3498  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div */\n      tag_141\n      swap1\n        /* \"inviter_presell/stake.sol\":3413:3504  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_135:\n        /* \"inviter_presell/stake.sol\":3413:3508  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_142\n      swap1\n        /* \"inviter_presell/stake.sol\":3413:3526  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_134:\n        /* \"inviter_presell/stake.sol\":3406:3526  return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3238:3534  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":426:468  mapping(address => uint256) public rewards */\n    tag_44:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":477:521  uint256 public totalRewards = 400 * 10 ** 18 */\n    tag_47:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_52:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_144\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_145\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_144:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_146\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_97\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_146:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n        /* \"inviter_presell/adminable.sol\":1755:1760  admin */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854\n        /* \"inviter_presell/adminable.sol\":1763:1770  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1771:1776  admin */\n      dup6\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1779:1784  state */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      mload(0x40)\n      tag_151\n      swap3\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/adminable.sol\":1813:1818  state */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1796:1803  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1804:1809  admin */\n      dup5\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1818  _admins[admin] = state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_55:\n        /* \"inviter_presell/adminable.sol\":1067:1071  bool */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1091:1098  _admins */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1099:1106  account */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1084:1107  return _admins[account] */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":602:642  uint256 public rateIntervalNumerator = 5 */\n    tag_59:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":5282:5585  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_62:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2516  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":5336:5346  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1050:1062  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1065:1133  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_159\n        /* \"inviter_presell/stake.sol\":1088:1106  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1088:1115  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1107:1114  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1088:1115  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1117:1132  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1065:1087  getTimeWeightedAveRate */\n      tag_124\n        /* \"inviter_presell/stake.sol\":1065:1133  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_159:\n        /* \"inviter_presell/stake.sol\":1050:1133  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1167:1187  rewardPerToken(rate) */\n      tag_160\n        /* \"inviter_presell/stake.sol\":1182:1186  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1167:1181  rewardPerToken */\n      tag_90\n        /* \"inviter_presell/stake.sol\":1167:1187  rewardPerToken(rate) */\n      jump\t// in\n    tag_160:\n        /* \"inviter_presell/stake.sol\":1144:1164  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1144:1187  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1215:1241  lastTimeRewardApplicable() */\n      tag_161\n        /* \"inviter_presell/stake.sol\":1215:1239  lastTimeRewardApplicable */\n      tag_82\n        /* \"inviter_presell/stake.sol\":1215:1241  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_161:\n        /* \"inviter_presell/stake.sol\":1198:1212  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1198:1241  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1275:1276  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1256:1277  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1256:1263  account */\n      dup3\n        /* \"inviter_presell/stake.sol\":1256:1277  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1252:1469  if (account != address(0)) {... */\n      tag_162\n      jumpi\n        /* \"inviter_presell/stake.sol\":1313:1328  earned(account) */\n      tag_163\n        /* \"inviter_presell/stake.sol\":1320:1327  account */\n      dup3\n        /* \"inviter_presell/stake.sol\":1313:1319  earned */\n      tag_39\n        /* \"inviter_presell/stake.sol\":1313:1328  earned(account) */\n      jump\t// in\n    tag_163:\n        /* \"inviter_presell/stake.sol\":1294:1301  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1294:1310  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1302:1309  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1294:1310  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1294:1328  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1377:1397  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1343:1365  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1343:1374  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1366:1373  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1343:1374  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1343:1397  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1442:1457  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1412:1430  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1412:1439  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1431:1438  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1412:1439  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1412:1457  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1252:1469  if (account != address(0)) {... */\n    tag_162:\n        /* \"inviter_presell/stake.sol\":5359:5373  uint256 reward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5376:5383  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":5376:5395  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5384:5394  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":5376:5395  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5359:5395  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5419:5420  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5410:5416  reward */\n      dup2\n        /* \"inviter_presell/stake.sol\":5410:5420  reward > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":5406:5578  if (reward > 0) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"inviter_presell/stake.sol\":5459:5460  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5437:5444  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":5437:5456  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5445:5455  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":5437:5456  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":5437:5460  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":5475:5487  rewardsToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":5475:5496  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":5497:5507  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":5509:5515  reward */\n      dup4\n        /* \"inviter_presell/stake.sol\":5475:5516  rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      pop\n        /* \"inviter_presell/stake.sol\":5547:5557  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":5536:5566  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"inviter_presell/stake.sol\":5559:5565  reward */\n      dup3\n        /* \"inviter_presell/stake.sol\":5536:5566  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_172\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":5406:5578  if (reward > 0) {... */\n    tag_165:\n        /* \"inviter_presell/stake.sol\":5348:5585  {... */\n      pop\n        /* \"inviter_presell/stake.sol\":1039:1488  {... */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2540:2541  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":5282:5585  function getReward() public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1496:1584  function setStartTime(uint256 time) public onlyAdmin {... */\n    tag_66:\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_174\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_175\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_145\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_55\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_174:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"inviter_presell/stake.sol\":1572:1576  time */\n      dup1\n        /* \"inviter_presell/stake.sol\":1560:1569  startTime */\n      0x06\n        /* \"inviter_presell/stake.sol\":1560:1576  startTime = time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1496:1584  function setStartTime(uint256 time) public onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":559:595  uint256 public rateInterval = 1 days */\n    tag_68:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1592:1685  function totalPowers() external view returns (uint256) {... */\n    tag_71:\n        /* \"inviter_presell/stake.sol\":1638:1645  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1665:1677  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":1658:1677  return _totalPowers */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1592:1685  function totalPowers() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_182\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_145\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_182:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_183\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_97\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_183:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_184\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap1\n      tag_149\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_184:\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      tag_187\n        /* \"inviter_presell/adminable.sol\":1215:1216  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1188:1206  _transferOwnership */\n      tag_188\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_187:\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":528:552  uint256 public startTime */\n    tag_76:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":649:694  uint256 public rateIntervalDenominator = 1000 */\n    tag_79:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2767:2874  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_82:\n        /* \"inviter_presell/stake.sol\":2824:2831  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2851:2866  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2844:2866  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2767:2874  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":845:898  mapping(address => uint256) public userLastUpdateTime */\n    tag_86:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2882:3230  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_90:\n        /* \"inviter_presell/stake.sol\":2947:2954  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2987:2988  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":2971:2983  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":2971:2988  _totalPowers == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2967:3044  if (_totalPowers == 0) {... */\n      tag_191\n      jumpi\n        /* \"inviter_presell/stake.sol\":3012:3032  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":3005:3032  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_190)\n        /* \"inviter_presell/stake.sol\":2967:3044  if (_totalPowers == 0) {... */\n    tag_191:\n        /* \"inviter_presell/stake.sol\":3074:3222  rewardPerTokenStored.add(... */\n      tag_192\n        /* \"inviter_presell/stake.sol\":3117:3207  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      tag_193\n        /* \"inviter_presell/stake.sol\":3194:3206  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":3117:3189  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_194\n        /* \"inviter_presell/stake.sol\":3184:3188  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":3117:3179  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_195\n        /* \"inviter_presell/stake.sol\":3168:3178  rewardRate */\n      dup8\n        /* \"inviter_presell/stake.sol\":3117:3163  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_196\n        /* \"inviter_presell/stake.sol\":3148:3162  lastUpdateTime */\n      sload(0x0a)\n        /* \"inviter_presell/stake.sol\":3117:3143  lastTimeRewardApplicable() */\n      tag_197\n        /* \"inviter_presell/stake.sol\":3117:3141  lastTimeRewardApplicable */\n      tag_82\n        /* \"inviter_presell/stake.sol\":3117:3143  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_197:\n        /* \"inviter_presell/stake.sol\":3117:3147  lastTimeRewardApplicable().sub */\n      tag_139\n      swap1\n        /* \"inviter_presell/stake.sol\":3117:3163  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_196:\n        /* \"inviter_presell/stake.sol\":3117:3167  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_140\n      swap1\n        /* \"inviter_presell/stake.sol\":3117:3179  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_195:\n        /* \"inviter_presell/stake.sol\":3117:3183  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_140\n      swap1\n        /* \"inviter_presell/stake.sol\":3117:3189  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"inviter_presell/stake.sol\":3117:3193  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_141\n      swap1\n        /* \"inviter_presell/stake.sol\":3117:3207  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_193:\n        /* \"inviter_presell/stake.sol\":3074:3094  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":3074:3098  rewardPerTokenStored.add */\n      tag_142\n      swap1\n        /* \"inviter_presell/stake.sol\":3074:3222  rewardPerTokenStored.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"inviter_presell/stake.sol\":3054:3222  return... */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2882:3230  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_190:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":781:838  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_94:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_97:\n        /* \"inviter_presell/adminable.sol\":955:962  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":975:988  return _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1812:1927  function getCurRewardPool() public view returns (uint256) {... */\n    tag_101:\n        /* \"inviter_presell/stake.sol\":1861:1868  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1888:1919  _getRewardPool(block.timestamp) */\n      tag_200\n        /* \"inviter_presell/stake.sol\":1903:1918  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1888:1902  _getRewardPool */\n      tag_201\n        /* \"inviter_presell/stake.sol\":1888:1919  _getRewardPool(block.timestamp) */\n      jump\t// in\n    tag_200:\n        /* \"inviter_presell/stake.sol\":1881:1919  return _getRewardPool(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1812:1927  function getCurRewardPool() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4970:5270  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n    tag_106:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_157\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2516  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_206\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_207\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_145\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_207:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_55\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_206:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_178\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"inviter_presell/stake.sol\":5060:5070  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1050:1062  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1065:1133  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_211\n        /* \"inviter_presell/stake.sol\":1088:1106  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1088:1115  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1107:1114  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1088:1115  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1117:1132  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1065:1087  getTimeWeightedAveRate */\n      tag_124\n        /* \"inviter_presell/stake.sol\":1065:1133  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_211:\n        /* \"inviter_presell/stake.sol\":1050:1133  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1167:1187  rewardPerToken(rate) */\n      tag_212\n        /* \"inviter_presell/stake.sol\":1182:1186  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1167:1181  rewardPerToken */\n      tag_90\n        /* \"inviter_presell/stake.sol\":1167:1187  rewardPerToken(rate) */\n      jump\t// in\n    tag_212:\n        /* \"inviter_presell/stake.sol\":1144:1164  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1144:1187  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1215:1241  lastTimeRewardApplicable() */\n      tag_213\n        /* \"inviter_presell/stake.sol\":1215:1239  lastTimeRewardApplicable */\n      tag_82\n        /* \"inviter_presell/stake.sol\":1215:1241  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_213:\n        /* \"inviter_presell/stake.sol\":1198:1212  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1198:1241  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1275:1276  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1256:1277  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1256:1263  account */\n      dup3\n        /* \"inviter_presell/stake.sol\":1256:1277  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1252:1469  if (account != address(0)) {... */\n      tag_214\n      jumpi\n        /* \"inviter_presell/stake.sol\":1313:1328  earned(account) */\n      tag_215\n        /* \"inviter_presell/stake.sol\":1320:1327  account */\n      dup3\n        /* \"inviter_presell/stake.sol\":1313:1319  earned */\n      tag_39\n        /* \"inviter_presell/stake.sol\":1313:1328  earned(account) */\n      jump\t// in\n    tag_215:\n        /* \"inviter_presell/stake.sol\":1294:1301  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1294:1310  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1302:1309  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1294:1310  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1294:1328  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1377:1397  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1343:1365  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1343:1374  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1366:1373  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1343:1374  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1343:1397  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1442:1457  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1412:1430  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1412:1439  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1431:1438  account */\n      dup5\n        /* \"inviter_presell/stake.sol\":1412:1439  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1412:1457  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1252:1469  if (account != address(0)) {... */\n    tag_214:\n        /* \"inviter_presell/stake.sol\":5100:5101  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5091:5097  amount */\n      dup4\n        /* \"inviter_presell/stake.sol\":5091:5101  amount > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":5083:5120  require(amount > 0, \"Cannot stake 0\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"inviter_presell/stake.sol\":5146:5170  _totalPowers.add(amount) */\n      tag_220\n        /* \"inviter_presell/stake.sol\":5163:5169  amount */\n      dup4\n        /* \"inviter_presell/stake.sol\":5146:5158  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":5146:5162  _totalPowers.add */\n      tag_142\n      swap1\n        /* \"inviter_presell/stake.sol\":5146:5170  _totalPowers.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_220:\n        /* \"inviter_presell/stake.sol\":5131:5143  _totalPowers */\n      0x0e\n        /* \"inviter_presell/stake.sol\":5131:5170  _totalPowers = _totalPowers.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":5199:5226  _balances[user].add(amount) */\n      tag_221\n        /* \"inviter_presell/stake.sol\":5219:5225  amount */\n      dup4\n        /* \"inviter_presell/stake.sol\":5199:5208  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":5199:5214  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5209:5213  user */\n      dup8\n        /* \"inviter_presell/stake.sol\":5199:5214  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5199:5218  _balances[user].add */\n      tag_142\n      swap1\n        /* \"inviter_presell/stake.sol\":5199:5226  _balances[user].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_221:\n        /* \"inviter_presell/stake.sol\":5181:5190  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":5181:5196  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5191:5195  user */\n      dup7\n        /* \"inviter_presell/stake.sol\":5181:5196  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":5181:5226  _balances[user] = _balances[user].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":5249:5253  user */\n      dup4\n        /* \"inviter_presell/stake.sol\":5242:5262  Staked(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"inviter_presell/stake.sol\":5255:5261  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":5242:5262  Staked(user, amount) */\n      mload(0x40)\n      tag_222\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":1039:1488  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":892:893  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":4970:5270  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1693:1804  function powersOf(address account) external view returns (uint256) {... */\n    tag_109:\n        /* \"inviter_presell/stake.sol\":1751:1758  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1778:1787  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":1778:1796  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1788:1795  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1778:1796  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1771:1796  return _balances[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1693:1804  function powersOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":701:730  uint256 public lastUpdateTime */\n    tag_112:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2411:2526  function getCurRewardRate() public view returns (uint256) {... */\n    tag_115:\n        /* \"inviter_presell/stake.sol\":2460:2467  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2487:2518  _getRewardRate(block.timestamp) */\n      tag_225\n        /* \"inviter_presell/stake.sol\":2502:2517  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2487:2501  _getRewardRate */\n      tag_226\n        /* \"inviter_presell/stake.sol\":2487:2518  _getRewardRate(block.timestamp) */\n      jump\t// in\n    tag_225:\n        /* \"inviter_presell/stake.sol\":2480:2518  return _getRewardRate(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2411:2526  function getCurRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":393:419  IERC20 public rewardsToken */\n    tag_118:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3577:4962  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_124:\n        /* \"inviter_presell/stake.sol\":3667:3674  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3712:3713  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":3699:3708  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3699:3713  startTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":3699:3738  startTime == 0 || leftTime <= rightTime */\n      dup1\n      tag_228\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":3729:3738  rightTime */\n      dup2\n        /* \"inviter_presell/stake.sol\":3717:3725  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":3717:3738  leftTime <= rightTime */\n      gt\n      iszero\n        /* \"inviter_presell/stake.sol\":3699:3738  startTime == 0 || leftTime <= rightTime */\n    tag_228:\n        /* \"inviter_presell/stake.sol\":3696:3775  if(startTime == 0 || leftTime <= rightTime) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"inviter_presell/stake.sol\":3762:3763  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3755:3763  return 0 */\n      swap1\n      pop\n      jump(tag_227)\n        /* \"inviter_presell/stake.sol\":3696:3775  if(startTime == 0 || leftTime <= rightTime) {... */\n    tag_229:\n        /* \"inviter_presell/stake.sol\":3822:3834  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3810:3818  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":3798:3807  rightTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":3798:3818  rightTime - leftTime */\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"inviter_presell/stake.sol\":3798:3834  rightTime - leftTime <= rateInterval */\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3860:3871  uint256 tmp */\n      0x00\n        /* \"inviter_presell/stake.sol\":3885:3897  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3874:3882  leftTime */\n      dup5\n        /* \"inviter_presell/stake.sol\":3874:3897  leftTime + rateInterval */\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"inviter_presell/stake.sol\":3860:3897  uint256 tmp = leftTime + rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3908:3928  uint256 leftInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":3957:3969  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3944:3953  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3938:3941  tmp */\n      dup4\n        /* \"inviter_presell/stake.sol\":3938:3953  tmp - startTime */\n      tag_235\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_235:\n        /* \"inviter_presell/stake.sol\":3937:3969  (tmp - startTime) % rateInterval */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"inviter_presell/stake.sol\":3931:3934  tmp */\n      dup3\n        /* \"inviter_presell/stake.sol\":3931:3969  tmp - (tmp - startTime) % rateInterval */\n      tag_238\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_238:\n        /* \"inviter_presell/stake.sol\":3908:3969  uint256 leftInterval = tmp - (tmp - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3980:3998  uint256 leftReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4043:4055  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4028:4040  leftInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":4001:4025  _getRewardPool(leftTime) */\n      tag_239\n        /* \"inviter_presell/stake.sol\":4016:4024  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":4001:4015  _getRewardPool */\n      tag_201\n        /* \"inviter_presell/stake.sol\":4001:4025  _getRewardPool(leftTime) */\n      jump\t// in\n    tag_239:\n        /* \"inviter_presell/stake.sol\":4001:4040  _getRewardPool(leftTime) * leftInterval */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"inviter_presell/stake.sol\":4001:4055  _getRewardPool(leftTime) * leftInterval / rateInterval */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"inviter_presell/stake.sol\":3980:4055  uint256 leftReward = _getRewardPool(leftTime) * leftInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4068:4089  uint256 rightInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":4118:4130  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4105:4114  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4093:4102  rightTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":4093:4114  rightTime - startTime */\n      tag_244\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_244:\n        /* \"inviter_presell/stake.sol\":4092:4130  (rightTime - startTime) % rateInterval */\n      tag_245\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_245:\n        /* \"inviter_presell/stake.sol\":4068:4130  uint256 rightInterval = (rightTime - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4141:4160  uint256 rightReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4207:4219  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4191:4204  rightInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":4163:4188  _getRewardPool(rightTime) */\n      tag_246\n        /* \"inviter_presell/stake.sol\":4178:4187  rightTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":4163:4177  _getRewardPool */\n      tag_201\n        /* \"inviter_presell/stake.sol\":4163:4188  _getRewardPool(rightTime) */\n      jump\t// in\n    tag_246:\n        /* \"inviter_presell/stake.sol\":4163:4204  _getRewardPool(rightTime) * rightInterval */\n      tag_247\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_247:\n        /* \"inviter_presell/stake.sol\":4163:4219  _getRewardPool(rightTime) * rightInterval / rateInterval */\n      tag_248\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_248:\n        /* \"inviter_presell/stake.sol\":4141:4219  uint256 rightReward = _getRewardPool(rightTime) * rightInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4281:4300  uint256 midInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":4346:4349  tmp */\n      dup6\n        /* \"inviter_presell/stake.sol\":4331:4343  leftInterval */\n      dup6\n        /* \"inviter_presell/stake.sol\":4315:4328  rightInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":4303:4312  rightTime */\n      dup11\n        /* \"inviter_presell/stake.sol\":4303:4328  rightTime - rightInterval */\n      tag_249\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_249:\n        /* \"inviter_presell/stake.sol\":4303:4343  rightTime - rightInterval - leftInterval */\n      tag_250\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_250:\n        /* \"inviter_presell/stake.sol\":4303:4349  rightTime - rightInterval - leftInterval - tmp */\n      tag_251\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_251:\n        /* \"inviter_presell/stake.sol\":4281:4349  uint256 midInterval = rightTime - rightInterval - leftInterval - tmp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4360:4379  uint256 startReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4382:4416  _getRewardPool(tmp + leftInterval) */\n      tag_252\n        /* \"inviter_presell/stake.sol\":4403:4415  leftInterval */\n      dup7\n        /* \"inviter_presell/stake.sol\":4397:4400  tmp */\n      dup9\n        /* \"inviter_presell/stake.sol\":4397:4415  tmp + leftInterval */\n      tag_253\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_253:\n        /* \"inviter_presell/stake.sol\":4382:4396  _getRewardPool */\n      tag_201\n        /* \"inviter_presell/stake.sol\":4382:4416  _getRewardPool(tmp + leftInterval) */\n      jump\t// in\n    tag_252:\n        /* \"inviter_presell/stake.sol\":4360:4416  uint256 startReward = _getRewardPool(tmp + leftInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4428:4450  uint256 midTotalReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4453:4464  startReward */\n      dup2\n        /* \"inviter_presell/stake.sol\":4428:4464  uint256 midTotalReward = startReward */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4475:4493  uint256 nextReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4496:4507  startReward */\n      dup3\n        /* \"inviter_presell/stake.sol\":4475:4507  uint256 nextReward = startReward */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4518:4537  uint256 frontReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4540:4574  _getRewardPool(tmp + leftInterval) */\n      tag_254\n        /* \"inviter_presell/stake.sol\":4561:4573  leftInterval */\n      dup10\n        /* \"inviter_presell/stake.sol\":4555:4558  tmp */\n      dup12\n        /* \"inviter_presell/stake.sol\":4555:4573  tmp + leftInterval */\n      tag_255\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_255:\n        /* \"inviter_presell/stake.sol\":4540:4554  _getRewardPool */\n      tag_201\n        /* \"inviter_presell/stake.sol\":4540:4574  _getRewardPool(tmp + leftInterval) */\n      jump\t// in\n    tag_254:\n        /* \"inviter_presell/stake.sol\":4518:4574  uint256 frontReward = _getRewardPool(tmp + leftInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4589:4598  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":4585:4869  for(uint256 i = 0; i < midInterval / rateInterval; ++i) {... */\n    tag_256:\n        /* \"inviter_presell/stake.sol\":4622:4634  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4608:4619  midInterval */\n      dup7\n        /* \"inviter_presell/stake.sol\":4608:4634  midInterval / rateInterval */\n      tag_259\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_259:\n        /* \"inviter_presell/stake.sol\":4604:4605  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":4604:4634  i < midInterval / rateInterval */\n      lt\n        /* \"inviter_presell/stake.sol\":4585:4869  for(uint256 i = 0; i < midInterval / rateInterval; ++i) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"inviter_presell/stake.sol\":4670:4680  nextReward */\n      dup3\n        /* \"inviter_presell/stake.sol\":4656:4680  frontReward = nextReward */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":4775:4798  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":4751:4772  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":4737:4747  nextReward */\n      dup5\n        /* \"inviter_presell/stake.sol\":4723:4734  frontReward */\n      dup5\n        /* \"inviter_presell/stake.sol\":4723:4747  frontReward - nextReward */\n      tag_260\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_260:\n        /* \"inviter_presell/stake.sol\":4722:4772  (frontReward - nextReward) * rateIntervalNumerator */\n      tag_261\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_261:\n        /* \"inviter_presell/stake.sol\":4722:4798  (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      tag_262\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_262:\n        /* \"inviter_presell/stake.sol\":4708:4719  frontReward */\n      dup3\n        /* \"inviter_presell/stake.sol\":4708:4798  frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      tag_263\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_263:\n        /* \"inviter_presell/stake.sol\":4695:4798  nextReward = frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":4847:4857  nextReward */\n      dup3\n        /* \"inviter_presell/stake.sol\":4830:4844  midTotalReward */\n      dup5\n        /* \"inviter_presell/stake.sol\":4830:4857  midTotalReward + nextReward */\n      tag_264\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_264:\n        /* \"inviter_presell/stake.sol\":4813:4857  midTotalReward = midTotalReward + nextReward */\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":4636:4639  ++i */\n      dup1\n      tag_265\n      swap1\n      tag_266\n      jump\t// in\n    tag_265:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4585:4869  for(uint256 i = 0; i < midInterval / rateInterval; ++i) {... */\n      jump(tag_256)\n    tag_257:\n      pop\n        /* \"inviter_presell/stake.sol\":4945:4953  leftTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":4933:4942  rightTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":4933:4953  rightTime - leftTime */\n      tag_267\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_267:\n        /* \"inviter_presell/stake.sol\":4917:4928  rightReward */\n      dup7\n        /* \"inviter_presell/stake.sol\":4904:4914  leftReward */\n      dup10\n        /* \"inviter_presell/stake.sol\":4887:4901  midTotalReward */\n      dup6\n        /* \"inviter_presell/stake.sol\":4887:4914  midTotalReward + leftReward */\n      tag_268\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_268:\n        /* \"inviter_presell/stake.sol\":4887:4928  midTotalReward + leftReward + rightReward */\n      tag_269\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_269:\n        /* \"inviter_presell/stake.sol\":4886:4954  (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      tag_270\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_270:\n        /* \"inviter_presell/stake.sol\":4879:4954  return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3577:4962  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_227:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":737:772  uint256 public rewardPerTokenStored */\n    tag_127:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_131:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_272\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_145\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_272:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_273\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_97\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_273:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap1\n      tag_149\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_274:\n        /* \"inviter_presell/adminable.sol\":1343:1344  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1323:1331  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_277:\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      tag_280\n        /* \"inviter_presell/adminable.sol\":1418:1426  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1399:1417  _transferOwnership */\n      tag_188\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_280:\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3279  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3303:3304  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3300  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3304  a - b */\n      tag_282\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_282:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3292:3304  return a - b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3629:3636  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3660:3661  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3657  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3661  a * b */\n      tag_284\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_284:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3649:3661  return a * b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3970:4068  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_141:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4028:4035  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4059:4060  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4056  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4060  a / b */\n      tag_286\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_286:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4048:4060  return a / b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3970:4068  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_142:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2891:2898  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2922:2923  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2919  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2923  a + b */\n      tag_288\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_288:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2911:2923  return a + b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n    tag_145:\n        /* \"inviter_presell/adminable.sol\":116:123  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_188:\n        /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n      0x01\n      0x00\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1935:2403  function _getRewardPool(uint256 time) private view returns (uint256) {... */\n    tag_201:\n        /* \"inviter_presell/stake.sol\":1995:2002  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2031:2032  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":2018:2027  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2018:2032  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2015:2077  if(startTime == 0) {... */\n      tag_292\n      jumpi\n        /* \"inviter_presell/stake.sol\":2056:2065  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2049:2065  return startTime */\n      swap1\n      pop\n      jump(tag_291)\n        /* \"inviter_presell/stake.sol\":2015:2077  if(startTime == 0) {... */\n    tag_292:\n        /* \"inviter_presell/stake.sol\":2087:2100  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2139:2140  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2124:2136  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2111:2120  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2104:2108  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":2104:2120  time - startTime */\n      tag_293\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_293:\n        /* \"inviter_presell/stake.sol\":2103:2136  (time - startTime) / rateInterval */\n      tag_294\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_294:\n        /* \"inviter_presell/stake.sol\":2103:2140  (time - startTime) / rateInterval + 1 */\n      tag_295\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_295:\n        /* \"inviter_presell/stake.sol\":2087:2140  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2151:2164  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2167:2179  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2151:2179  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2194:2203  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":2190:2323  for(uint256 i = 0; i < times; ++i) {... */\n    tag_296:\n        /* \"inviter_presell/stake.sol\":2213:2218  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2209:2210  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2209:2218  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2190:2323  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"inviter_presell/stake.sol\":2288:2311  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2264:2285  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2256:2261  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2256:2285  value * rateIntervalNumerator */\n      tag_299\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_299:\n        /* \"inviter_presell/stake.sol\":2256:2311  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_300\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_300:\n        /* \"inviter_presell/stake.sol\":2248:2253  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2248:2311  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_301\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_301:\n        /* \"inviter_presell/stake.sol\":2240:2311  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2220:2223  ++i */\n      dup1\n      tag_302\n      swap1\n      tag_266\n      jump\t// in\n    tag_302:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2190:2323  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_296)\n    tag_297:\n      pop\n        /* \"inviter_presell/stake.sol\":2372:2395  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2348:2369  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2340:2345  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2340:2369  value * rateIntervalNumerator */\n      tag_303\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_303:\n        /* \"inviter_presell/stake.sol\":2340:2395  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_304\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_304:\n        /* \"inviter_presell/stake.sol\":2333:2395  return value * rateIntervalNumerator / rateIntervalDenominator */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":1935:2403  function _getRewardPool(uint256 time) private view returns (uint256) {... */\n    tag_291:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2534:2757  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n    tag_226:\n        /* \"inviter_presell/stake.sol\":2594:2601  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2614:2635  uint256 curPoolAmount */\n      dup1\n        /* \"inviter_presell/stake.sol\":2638:2658  _getRewardPool(time) */\n      tag_306\n        /* \"inviter_presell/stake.sol\":2653:2657  time */\n      dup4\n        /* \"inviter_presell/stake.sol\":2638:2652  _getRewardPool */\n      tag_201\n        /* \"inviter_presell/stake.sol\":2638:2658  _getRewardPool(time) */\n      jump\t// in\n    tag_306:\n        /* \"inviter_presell/stake.sol\":2614:2658  uint256 curPoolAmount = _getRewardPool(time) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2669:2687  uint256 rewardRate */\n      0x00\n        /* \"inviter_presell/stake.sol\":2690:2721  curPoolAmount.div(rateInterval) */\n      tag_307\n        /* \"inviter_presell/stake.sol\":2708:2720  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2690:2703  curPoolAmount */\n      dup4\n        /* \"inviter_presell/stake.sol\":2690:2707  curPoolAmount.div */\n      tag_141\n      swap1\n        /* \"inviter_presell/stake.sol\":2690:2721  curPoolAmount.div(rateInterval) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"inviter_presell/stake.sol\":2669:2721  uint256 rewardRate = curPoolAmount.div(rateInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2739:2749  rewardRate */\n      dup1\n        /* \"inviter_presell/stake.sol\":2732:2749  return rewardRate */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2534:2757  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_309:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_311:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_312:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_349\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_311\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_313:\n        /* \"#utility.yul\":641:665   */\n      tag_351\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_312\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_352\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_352:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_314:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_354\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_313\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_38:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_356\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_357\n      tag_309\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":917:1036   */\n    tag_356:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_358\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_314\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_315:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_316:\n        /* \"#utility.yul\":1346:1370   */\n      tag_361\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_315\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_41:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_363\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_316\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1701   */\n    tag_317:\n        /* \"#utility.yul\":1645:1652   */\n      0x00\n        /* \"#utility.yul\":1688:1693   */\n      dup2\n        /* \"#utility.yul\":1681:1694   */\n      iszero\n        /* \"#utility.yul\":1674:1695   */\n      iszero\n        /* \"#utility.yul\":1663:1695   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1707:1823   */\n    tag_318:\n        /* \"#utility.yul\":1777:1798   */\n      tag_366\n        /* \"#utility.yul\":1792:1797   */\n      dup2\n        /* \"#utility.yul\":1777:1798   */\n      tag_317\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":1770:1775   */\n      dup2\n        /* \"#utility.yul\":1767:1799   */\n      eq\n        /* \"#utility.yul\":1757:1817   */\n      tag_367\n      jumpi\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1810:1811   */\n      dup1\n        /* \"#utility.yul\":1803:1815   */\n      revert\n        /* \"#utility.yul\":1757:1817   */\n    tag_367:\n        /* \"#utility.yul\":1707:1823   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1829:1962   */\n    tag_319:\n        /* \"#utility.yul\":1872:1877   */\n      0x00\n        /* \"#utility.yul\":1910:1916   */\n      dup2\n        /* \"#utility.yul\":1897:1917   */\n      calldataload\n        /* \"#utility.yul\":1888:1917   */\n      swap1\n      pop\n        /* \"#utility.yul\":1926:1956   */\n      tag_369\n        /* \"#utility.yul\":1950:1955   */\n      dup2\n        /* \"#utility.yul\":1926:1956   */\n      tag_318\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":1829:1962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2436   */\n    tag_51:\n        /* \"#utility.yul\":2033:2039   */\n      0x00\n        /* \"#utility.yul\":2041:2047   */\n      dup1\n        /* \"#utility.yul\":2090:2092   */\n      0x40\n        /* \"#utility.yul\":2078:2087   */\n      dup4\n        /* \"#utility.yul\":2069:2076   */\n      dup6\n        /* \"#utility.yul\":2065:2088   */\n      sub\n        /* \"#utility.yul\":2061:2093   */\n      slt\n        /* \"#utility.yul\":2058:2177   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":2096:2175   */\n      tag_372\n      tag_309\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":2058:2177   */\n    tag_371:\n        /* \"#utility.yul\":2216:2217   */\n      0x00\n        /* \"#utility.yul\":2241:2294   */\n      tag_373\n        /* \"#utility.yul\":2286:2293   */\n      dup6\n        /* \"#utility.yul\":2277:2283   */\n      dup3\n        /* \"#utility.yul\":2266:2275   */\n      dup7\n        /* \"#utility.yul\":2262:2284   */\n      add\n        /* \"#utility.yul\":2241:2294   */\n      tag_314\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2231:2294   */\n      swap3\n      pop\n        /* \"#utility.yul\":2187:2304   */\n      pop\n        /* \"#utility.yul\":2343:2345   */\n      0x20\n        /* \"#utility.yul\":2369:2419   */\n      tag_374\n        /* \"#utility.yul\":2411:2418   */\n      dup6\n        /* \"#utility.yul\":2402:2408   */\n      dup3\n        /* \"#utility.yul\":2391:2400   */\n      dup7\n        /* \"#utility.yul\":2387:2409   */\n      add\n        /* \"#utility.yul\":2369:2419   */\n      tag_319\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":2359:2419   */\n      swap2\n      pop\n        /* \"#utility.yul\":2314:2429   */\n      pop\n        /* \"#utility.yul\":1968:2436   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2442:2551   */\n    tag_320:\n        /* \"#utility.yul\":2523:2544   */\n      tag_376\n        /* \"#utility.yul\":2538:2543   */\n      dup2\n        /* \"#utility.yul\":2523:2544   */\n      tag_317\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":2518:2521   */\n      dup3\n        /* \"#utility.yul\":2511:2545   */\n      mstore\n        /* \"#utility.yul\":2442:2551   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2557:2767   */\n    tag_57:\n        /* \"#utility.yul\":2644:2648   */\n      0x00\n        /* \"#utility.yul\":2682:2684   */\n      0x20\n        /* \"#utility.yul\":2671:2680   */\n      dup3\n        /* \"#utility.yul\":2667:2685   */\n      add\n        /* \"#utility.yul\":2659:2685   */\n      swap1\n      pop\n        /* \"#utility.yul\":2695:2760   */\n      tag_378\n        /* \"#utility.yul\":2757:2758   */\n      0x00\n        /* \"#utility.yul\":2746:2755   */\n      dup4\n        /* \"#utility.yul\":2742:2759   */\n      add\n        /* \"#utility.yul\":2733:2739   */\n      dup5\n        /* \"#utility.yul\":2695:2760   */\n      tag_320\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":2557:2767   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2773:2895   */\n    tag_321:\n        /* \"#utility.yul\":2846:2870   */\n      tag_380\n        /* \"#utility.yul\":2864:2869   */\n      dup2\n        /* \"#utility.yul\":2846:2870   */\n      tag_315\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":2839:2844   */\n      dup2\n        /* \"#utility.yul\":2836:2871   */\n      eq\n        /* \"#utility.yul\":2826:2889   */\n      tag_381\n      jumpi\n        /* \"#utility.yul\":2885:2886   */\n      0x00\n        /* \"#utility.yul\":2882:2883   */\n      dup1\n        /* \"#utility.yul\":2875:2887   */\n      revert\n        /* \"#utility.yul\":2826:2889   */\n    tag_381:\n        /* \"#utility.yul\":2773:2895   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2901:3040   */\n    tag_322:\n        /* \"#utility.yul\":2947:2952   */\n      0x00\n        /* \"#utility.yul\":2985:2991   */\n      dup2\n        /* \"#utility.yul\":2972:2992   */\n      calldataload\n        /* \"#utility.yul\":2963:2992   */\n      swap1\n      pop\n        /* \"#utility.yul\":3001:3034   */\n      tag_383\n        /* \"#utility.yul\":3028:3033   */\n      dup2\n        /* \"#utility.yul\":3001:3034   */\n      tag_321\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":2901:3040   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3046:3375   */\n    tag_65:\n        /* \"#utility.yul\":3105:3111   */\n      0x00\n        /* \"#utility.yul\":3154:3156   */\n      0x20\n        /* \"#utility.yul\":3142:3151   */\n      dup3\n        /* \"#utility.yul\":3133:3140   */\n      dup5\n        /* \"#utility.yul\":3129:3152   */\n      sub\n        /* \"#utility.yul\":3125:3157   */\n      slt\n        /* \"#utility.yul\":3122:3241   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":3160:3239   */\n      tag_386\n      tag_309\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3122:3241   */\n    tag_385:\n        /* \"#utility.yul\":3280:3281   */\n      0x00\n        /* \"#utility.yul\":3305:3358   */\n      tag_387\n        /* \"#utility.yul\":3350:3357   */\n      dup5\n        /* \"#utility.yul\":3341:3347   */\n      dup3\n        /* \"#utility.yul\":3330:3339   */\n      dup6\n        /* \"#utility.yul\":3326:3348   */\n      add\n        /* \"#utility.yul\":3305:3358   */\n      tag_322\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":3295:3358   */\n      swap2\n      pop\n        /* \"#utility.yul\":3251:3368   */\n      pop\n        /* \"#utility.yul\":3046:3375   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3381:3499   */\n    tag_323:\n        /* \"#utility.yul\":3468:3492   */\n      tag_389\n        /* \"#utility.yul\":3486:3491   */\n      dup2\n        /* \"#utility.yul\":3468:3492   */\n      tag_312\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":3463:3466   */\n      dup3\n        /* \"#utility.yul\":3456:3493   */\n      mstore\n        /* \"#utility.yul\":3381:3499   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3505:3727   */\n    tag_99:\n        /* \"#utility.yul\":3598:3602   */\n      0x00\n        /* \"#utility.yul\":3636:3638   */\n      0x20\n        /* \"#utility.yul\":3625:3634   */\n      dup3\n        /* \"#utility.yul\":3621:3639   */\n      add\n        /* \"#utility.yul\":3613:3639   */\n      swap1\n      pop\n        /* \"#utility.yul\":3649:3720   */\n      tag_391\n        /* \"#utility.yul\":3717:3718   */\n      0x00\n        /* \"#utility.yul\":3706:3715   */\n      dup4\n        /* \"#utility.yul\":3702:3719   */\n      add\n        /* \"#utility.yul\":3693:3699   */\n      dup5\n        /* \"#utility.yul\":3649:3720   */\n      tag_323\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":3505:3727   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3733:4207   */\n    tag_105:\n        /* \"#utility.yul\":3801:3807   */\n      0x00\n        /* \"#utility.yul\":3809:3815   */\n      dup1\n        /* \"#utility.yul\":3858:3860   */\n      0x40\n        /* \"#utility.yul\":3846:3855   */\n      dup4\n        /* \"#utility.yul\":3837:3844   */\n      dup6\n        /* \"#utility.yul\":3833:3856   */\n      sub\n        /* \"#utility.yul\":3829:3861   */\n      slt\n        /* \"#utility.yul\":3826:3945   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":3864:3943   */\n      tag_394\n      tag_309\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":3826:3945   */\n    tag_393:\n        /* \"#utility.yul\":3984:3985   */\n      0x00\n        /* \"#utility.yul\":4009:4062   */\n      tag_395\n        /* \"#utility.yul\":4054:4061   */\n      dup6\n        /* \"#utility.yul\":4045:4051   */\n      dup3\n        /* \"#utility.yul\":4034:4043   */\n      dup7\n        /* \"#utility.yul\":4030:4052   */\n      add\n        /* \"#utility.yul\":4009:4062   */\n      tag_314\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":3999:4062   */\n      swap3\n      pop\n        /* \"#utility.yul\":3955:4072   */\n      pop\n        /* \"#utility.yul\":4111:4113   */\n      0x20\n        /* \"#utility.yul\":4137:4190   */\n      tag_396\n        /* \"#utility.yul\":4182:4189   */\n      dup6\n        /* \"#utility.yul\":4173:4179   */\n      dup3\n        /* \"#utility.yul\":4162:4171   */\n      dup7\n        /* \"#utility.yul\":4158:4180   */\n      add\n        /* \"#utility.yul\":4137:4190   */\n      tag_322\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":4127:4190   */\n      swap2\n      pop\n        /* \"#utility.yul\":4082:4200   */\n      pop\n        /* \"#utility.yul\":3733:4207   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4213:4273   */\n    tag_324:\n        /* \"#utility.yul\":4241:4244   */\n      0x00\n        /* \"#utility.yul\":4262:4267   */\n      dup2\n        /* \"#utility.yul\":4255:4267   */\n      swap1\n      pop\n        /* \"#utility.yul\":4213:4273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4279:4421   */\n    tag_325:\n        /* \"#utility.yul\":4329:4338   */\n      0x00\n        /* \"#utility.yul\":4362:4415   */\n      tag_399\n        /* \"#utility.yul\":4380:4414   */\n      tag_400\n        /* \"#utility.yul\":4389:4413   */\n      tag_401\n        /* \"#utility.yul\":4407:4412   */\n      dup5\n        /* \"#utility.yul\":4389:4413   */\n      tag_311\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":4380:4414   */\n      tag_324\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4362:4415   */\n      tag_311\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4349:4415   */\n      swap1\n      pop\n        /* \"#utility.yul\":4279:4421   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4427:4553   */\n    tag_326:\n        /* \"#utility.yul\":4477:4486   */\n      0x00\n        /* \"#utility.yul\":4510:4547   */\n      tag_403\n        /* \"#utility.yul\":4541:4546   */\n      dup3\n        /* \"#utility.yul\":4510:4547   */\n      tag_325\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":4497:4547   */\n      swap1\n      pop\n        /* \"#utility.yul\":4427:4553   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4559:4699   */\n    tag_327:\n        /* \"#utility.yul\":4623:4632   */\n      0x00\n        /* \"#utility.yul\":4656:4693   */\n      tag_405\n        /* \"#utility.yul\":4687:4692   */\n      dup3\n        /* \"#utility.yul\":4656:4693   */\n      tag_326\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":4643:4693   */\n      swap1\n      pop\n        /* \"#utility.yul\":4559:4699   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4705:4864   */\n    tag_328:\n        /* \"#utility.yul\":4806:4857   */\n      tag_407\n        /* \"#utility.yul\":4851:4856   */\n      dup2\n        /* \"#utility.yul\":4806:4857   */\n      tag_327\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":4801:4804   */\n      dup3\n        /* \"#utility.yul\":4794:4858   */\n      mstore\n        /* \"#utility.yul\":4705:4864   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4870:5120   */\n    tag_120:\n        /* \"#utility.yul\":4977:4981   */\n      0x00\n        /* \"#utility.yul\":5015:5017   */\n      0x20\n        /* \"#utility.yul\":5004:5013   */\n      dup3\n        /* \"#utility.yul\":5000:5018   */\n      add\n        /* \"#utility.yul\":4992:5018   */\n      swap1\n      pop\n        /* \"#utility.yul\":5028:5113   */\n      tag_409\n        /* \"#utility.yul\":5110:5111   */\n      0x00\n        /* \"#utility.yul\":5099:5108   */\n      dup4\n        /* \"#utility.yul\":5095:5112   */\n      add\n        /* \"#utility.yul\":5086:5092   */\n      dup5\n        /* \"#utility.yul\":5028:5113   */\n      tag_328\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":4870:5120   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5126:5600   */\n    tag_123:\n        /* \"#utility.yul\":5194:5200   */\n      0x00\n        /* \"#utility.yul\":5202:5208   */\n      dup1\n        /* \"#utility.yul\":5251:5253   */\n      0x40\n        /* \"#utility.yul\":5239:5248   */\n      dup4\n        /* \"#utility.yul\":5230:5237   */\n      dup6\n        /* \"#utility.yul\":5226:5249   */\n      sub\n        /* \"#utility.yul\":5222:5254   */\n      slt\n        /* \"#utility.yul\":5219:5338   */\n      iszero\n      tag_411\n      jumpi\n        /* \"#utility.yul\":5257:5336   */\n      tag_412\n      tag_309\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5219:5338   */\n    tag_411:\n        /* \"#utility.yul\":5377:5378   */\n      0x00\n        /* \"#utility.yul\":5402:5455   */\n      tag_413\n        /* \"#utility.yul\":5447:5454   */\n      dup6\n        /* \"#utility.yul\":5438:5444   */\n      dup3\n        /* \"#utility.yul\":5427:5436   */\n      dup7\n        /* \"#utility.yul\":5423:5445   */\n      add\n        /* \"#utility.yul\":5402:5455   */\n      tag_322\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":5392:5455   */\n      swap3\n      pop\n        /* \"#utility.yul\":5348:5465   */\n      pop\n        /* \"#utility.yul\":5504:5506   */\n      0x20\n        /* \"#utility.yul\":5530:5583   */\n      tag_414\n        /* \"#utility.yul\":5575:5582   */\n      dup6\n        /* \"#utility.yul\":5566:5572   */\n      dup3\n        /* \"#utility.yul\":5555:5564   */\n      dup7\n        /* \"#utility.yul\":5551:5573   */\n      add\n        /* \"#utility.yul\":5530:5583   */\n      tag_322\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5520:5583   */\n      swap2\n      pop\n        /* \"#utility.yul\":5475:5593   */\n      pop\n        /* \"#utility.yul\":5126:5600   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5606:5775   */\n    tag_329:\n        /* \"#utility.yul\":5690:5701   */\n      0x00\n        /* \"#utility.yul\":5724:5730   */\n      dup3\n        /* \"#utility.yul\":5719:5722   */\n      dup3\n        /* \"#utility.yul\":5712:5731   */\n      mstore\n        /* \"#utility.yul\":5764:5768   */\n      0x20\n        /* \"#utility.yul\":5759:5762   */\n      dup3\n        /* \"#utility.yul\":5755:5769   */\n      add\n        /* \"#utility.yul\":5740:5769   */\n      swap1\n      pop\n        /* \"#utility.yul\":5606:5775   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5781:6002   */\n    tag_330:\n        /* \"#utility.yul\":5921:5955   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e\n        /* \"#utility.yul\":5917:5918   */\n      0x00\n        /* \"#utility.yul\":5909:5915   */\n      dup3\n        /* \"#utility.yul\":5905:5919   */\n      add\n        /* \"#utility.yul\":5898:5956   */\n      mstore\n        /* \"#utility.yul\":5990:5994   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5985:5987   */\n      0x20\n        /* \"#utility.yul\":5977:5983   */\n      dup3\n        /* \"#utility.yul\":5973:5988   */\n      add\n        /* \"#utility.yul\":5966:5995   */\n      mstore\n        /* \"#utility.yul\":5781:6002   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6008:6374   */\n    tag_331:\n        /* \"#utility.yul\":6150:6153   */\n      0x00\n        /* \"#utility.yul\":6171:6238   */\n      tag_418\n        /* \"#utility.yul\":6235:6237   */\n      0x22\n        /* \"#utility.yul\":6230:6233   */\n      dup4\n        /* \"#utility.yul\":6171:6238   */\n      tag_329\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":6164:6238   */\n      swap2\n      pop\n        /* \"#utility.yul\":6247:6340   */\n      tag_419\n        /* \"#utility.yul\":6336:6339   */\n      dup3\n        /* \"#utility.yul\":6247:6340   */\n      tag_330\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6365:6367   */\n      0x40\n        /* \"#utility.yul\":6360:6363   */\n      dup3\n        /* \"#utility.yul\":6356:6368   */\n      add\n        /* \"#utility.yul\":6349:6368   */\n      swap1\n      pop\n        /* \"#utility.yul\":6008:6374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6380:6799   */\n    tag_149:\n        /* \"#utility.yul\":6546:6550   */\n      0x00\n        /* \"#utility.yul\":6584:6586   */\n      0x20\n        /* \"#utility.yul\":6573:6582   */\n      dup3\n        /* \"#utility.yul\":6569:6587   */\n      add\n        /* \"#utility.yul\":6561:6587   */\n      swap1\n      pop\n        /* \"#utility.yul\":6633:6642   */\n      dup2\n        /* \"#utility.yul\":6627:6631   */\n      dup2\n        /* \"#utility.yul\":6623:6643   */\n      sub\n        /* \"#utility.yul\":6619:6620   */\n      0x00\n        /* \"#utility.yul\":6608:6617   */\n      dup4\n        /* \"#utility.yul\":6604:6621   */\n      add\n        /* \"#utility.yul\":6597:6644   */\n      mstore\n        /* \"#utility.yul\":6661:6792   */\n      tag_421\n        /* \"#utility.yul\":6787:6791   */\n      dup2\n        /* \"#utility.yul\":6661:6792   */\n      tag_331\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":6653:6792   */\n      swap1\n      pop\n        /* \"#utility.yul\":6380:6799   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6805:7113   */\n    tag_152:\n        /* \"#utility.yul\":6914:6918   */\n      0x00\n        /* \"#utility.yul\":6952:6954   */\n      0x40\n        /* \"#utility.yul\":6941:6950   */\n      dup3\n        /* \"#utility.yul\":6937:6955   */\n      add\n        /* \"#utility.yul\":6929:6955   */\n      swap1\n      pop\n        /* \"#utility.yul\":6965:7030   */\n      tag_423\n        /* \"#utility.yul\":7027:7028   */\n      0x00\n        /* \"#utility.yul\":7016:7025   */\n      dup4\n        /* \"#utility.yul\":7012:7029   */\n      add\n        /* \"#utility.yul\":7003:7009   */\n      dup6\n        /* \"#utility.yul\":6965:7030   */\n      tag_320\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":7040:7106   */\n      tag_424\n        /* \"#utility.yul\":7102:7104   */\n      0x20\n        /* \"#utility.yul\":7091:7100   */\n      dup4\n        /* \"#utility.yul\":7087:7105   */\n      add\n        /* \"#utility.yul\":7078:7084   */\n      dup5\n        /* \"#utility.yul\":7040:7106   */\n      tag_320\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6805:7113   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7119:7300   */\n    tag_332:\n        /* \"#utility.yul\":7259:7292   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7255:7256   */\n      0x00\n        /* \"#utility.yul\":7247:7253   */\n      dup3\n        /* \"#utility.yul\":7243:7257   */\n      add\n        /* \"#utility.yul\":7236:7293   */\n      mstore\n        /* \"#utility.yul\":7119:7300   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7306:7672   */\n    tag_333:\n        /* \"#utility.yul\":7448:7451   */\n      0x00\n        /* \"#utility.yul\":7469:7536   */\n      tag_427\n        /* \"#utility.yul\":7533:7535   */\n      0x1f\n        /* \"#utility.yul\":7528:7531   */\n      dup4\n        /* \"#utility.yul\":7469:7536   */\n      tag_329\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":7462:7536   */\n      swap2\n      pop\n        /* \"#utility.yul\":7545:7638   */\n      tag_428\n        /* \"#utility.yul\":7634:7637   */\n      dup3\n        /* \"#utility.yul\":7545:7638   */\n      tag_332\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":7663:7665   */\n      0x20\n        /* \"#utility.yul\":7658:7661   */\n      dup3\n        /* \"#utility.yul\":7654:7666   */\n      add\n        /* \"#utility.yul\":7647:7666   */\n      swap1\n      pop\n        /* \"#utility.yul\":7306:7672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7678:8097   */\n    tag_157:\n        /* \"#utility.yul\":7844:7848   */\n      0x00\n        /* \"#utility.yul\":7882:7884   */\n      0x20\n        /* \"#utility.yul\":7871:7880   */\n      dup3\n        /* \"#utility.yul\":7867:7885   */\n      add\n        /* \"#utility.yul\":7859:7885   */\n      swap1\n      pop\n        /* \"#utility.yul\":7931:7940   */\n      dup2\n        /* \"#utility.yul\":7925:7929   */\n      dup2\n        /* \"#utility.yul\":7921:7941   */\n      sub\n        /* \"#utility.yul\":7917:7918   */\n      0x00\n        /* \"#utility.yul\":7906:7915   */\n      dup4\n        /* \"#utility.yul\":7902:7919   */\n      add\n        /* \"#utility.yul\":7895:7942   */\n      mstore\n        /* \"#utility.yul\":7959:8090   */\n      tag_430\n        /* \"#utility.yul\":8085:8089   */\n      dup2\n        /* \"#utility.yul\":7959:8090   */\n      tag_333\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":7951:8090   */\n      swap1\n      pop\n        /* \"#utility.yul\":7678:8097   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8103:8435   */\n    tag_167:\n        /* \"#utility.yul\":8224:8228   */\n      0x00\n        /* \"#utility.yul\":8262:8264   */\n      0x40\n        /* \"#utility.yul\":8251:8260   */\n      dup3\n        /* \"#utility.yul\":8247:8265   */\n      add\n        /* \"#utility.yul\":8239:8265   */\n      swap1\n      pop\n        /* \"#utility.yul\":8275:8346   */\n      tag_432\n        /* \"#utility.yul\":8343:8344   */\n      0x00\n        /* \"#utility.yul\":8332:8341   */\n      dup4\n        /* \"#utility.yul\":8328:8345   */\n      add\n        /* \"#utility.yul\":8319:8325   */\n      dup6\n        /* \"#utility.yul\":8275:8346   */\n      tag_323\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":8356:8428   */\n      tag_433\n        /* \"#utility.yul\":8424:8426   */\n      0x20\n        /* \"#utility.yul\":8413:8422   */\n      dup4\n        /* \"#utility.yul\":8409:8427   */\n      add\n        /* \"#utility.yul\":8400:8406   */\n      dup5\n        /* \"#utility.yul\":8356:8428   */\n      tag_316\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":8103:8435   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8441:8578   */\n    tag_334:\n        /* \"#utility.yul\":8495:8500   */\n      0x00\n        /* \"#utility.yul\":8526:8532   */\n      dup2\n        /* \"#utility.yul\":8520:8533   */\n      mload\n        /* \"#utility.yul\":8511:8533   */\n      swap1\n      pop\n        /* \"#utility.yul\":8542:8572   */\n      tag_435\n        /* \"#utility.yul\":8566:8571   */\n      dup2\n        /* \"#utility.yul\":8542:8572   */\n      tag_318\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":8441:8578   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8584:8929   */\n    tag_171:\n        /* \"#utility.yul\":8651:8657   */\n      0x00\n        /* \"#utility.yul\":8700:8702   */\n      0x20\n        /* \"#utility.yul\":8688:8697   */\n      dup3\n        /* \"#utility.yul\":8679:8686   */\n      dup5\n        /* \"#utility.yul\":8675:8698   */\n      sub\n        /* \"#utility.yul\":8671:8703   */\n      slt\n        /* \"#utility.yul\":8668:8787   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":8706:8785   */\n      tag_438\n      tag_309\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":8668:8787   */\n    tag_437:\n        /* \"#utility.yul\":8826:8827   */\n      0x00\n        /* \"#utility.yul\":8851:8912   */\n      tag_439\n        /* \"#utility.yul\":8904:8911   */\n      dup5\n        /* \"#utility.yul\":8895:8901   */\n      dup3\n        /* \"#utility.yul\":8884:8893   */\n      dup6\n        /* \"#utility.yul\":8880:8902   */\n      add\n        /* \"#utility.yul\":8851:8912   */\n      tag_334\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":8841:8912   */\n      swap2\n      pop\n        /* \"#utility.yul\":8797:8922   */\n      pop\n        /* \"#utility.yul\":8584:8929   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8935:9156   */\n    tag_335:\n        /* \"#utility.yul\":9075:9109   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d\n        /* \"#utility.yul\":9071:9072   */\n      0x00\n        /* \"#utility.yul\":9063:9069   */\n      dup3\n        /* \"#utility.yul\":9059:9073   */\n      add\n        /* \"#utility.yul\":9052:9110   */\n      mstore\n        /* \"#utility.yul\":9144:9148   */\n      0x696e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9139:9141   */\n      0x20\n        /* \"#utility.yul\":9131:9137   */\n      dup3\n        /* \"#utility.yul\":9127:9142   */\n      add\n        /* \"#utility.yul\":9120:9149   */\n      mstore\n        /* \"#utility.yul\":8935:9156   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9162:9528   */\n    tag_336:\n        /* \"#utility.yul\":9304:9307   */\n      0x00\n        /* \"#utility.yul\":9325:9392   */\n      tag_442\n        /* \"#utility.yul\":9389:9391   */\n      0x22\n        /* \"#utility.yul\":9384:9387   */\n      dup4\n        /* \"#utility.yul\":9325:9392   */\n      tag_329\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":9318:9392   */\n      swap2\n      pop\n        /* \"#utility.yul\":9401:9494   */\n      tag_443\n        /* \"#utility.yul\":9490:9493   */\n      dup3\n        /* \"#utility.yul\":9401:9494   */\n      tag_335\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":9519:9521   */\n      0x40\n        /* \"#utility.yul\":9514:9517   */\n      dup3\n        /* \"#utility.yul\":9510:9522   */\n      add\n        /* \"#utility.yul\":9503:9522   */\n      swap1\n      pop\n        /* \"#utility.yul\":9162:9528   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9534:9953   */\n    tag_178:\n        /* \"#utility.yul\":9700:9704   */\n      0x00\n        /* \"#utility.yul\":9738:9740   */\n      0x20\n        /* \"#utility.yul\":9727:9736   */\n      dup3\n        /* \"#utility.yul\":9723:9741   */\n      add\n        /* \"#utility.yul\":9715:9741   */\n      swap1\n      pop\n        /* \"#utility.yul\":9787:9796   */\n      dup2\n        /* \"#utility.yul\":9781:9785   */\n      dup2\n        /* \"#utility.yul\":9777:9797   */\n      sub\n        /* \"#utility.yul\":9773:9774   */\n      0x00\n        /* \"#utility.yul\":9762:9771   */\n      dup4\n        /* \"#utility.yul\":9758:9775   */\n      add\n        /* \"#utility.yul\":9751:9798   */\n      mstore\n        /* \"#utility.yul\":9815:9946   */\n      tag_445\n        /* \"#utility.yul\":9941:9945   */\n      dup2\n        /* \"#utility.yul\":9815:9946   */\n      tag_336\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":9807:9946   */\n      swap1\n      pop\n        /* \"#utility.yul\":9534:9953   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9959:10123   */\n    tag_337:\n        /* \"#utility.yul\":10099:10115   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":10095:10096   */\n      0x00\n        /* \"#utility.yul\":10087:10093   */\n      dup3\n        /* \"#utility.yul\":10083:10097   */\n      add\n        /* \"#utility.yul\":10076:10116   */\n      mstore\n        /* \"#utility.yul\":9959:10123   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10129:10495   */\n    tag_338:\n        /* \"#utility.yul\":10271:10274   */\n      0x00\n        /* \"#utility.yul\":10292:10359   */\n      tag_448\n        /* \"#utility.yul\":10356:10358   */\n      0x0e\n        /* \"#utility.yul\":10351:10354   */\n      dup4\n        /* \"#utility.yul\":10292:10359   */\n      tag_329\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":10285:10359   */\n      swap2\n      pop\n        /* \"#utility.yul\":10368:10461   */\n      tag_449\n        /* \"#utility.yul\":10457:10460   */\n      dup3\n        /* \"#utility.yul\":10368:10461   */\n      tag_337\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":10486:10488   */\n      0x20\n        /* \"#utility.yul\":10481:10484   */\n      dup3\n        /* \"#utility.yul\":10477:10489   */\n      add\n        /* \"#utility.yul\":10470:10489   */\n      swap1\n      pop\n        /* \"#utility.yul\":10129:10495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10501:10920   */\n    tag_219:\n        /* \"#utility.yul\":10667:10671   */\n      0x00\n        /* \"#utility.yul\":10705:10707   */\n      0x20\n        /* \"#utility.yul\":10694:10703   */\n      dup3\n        /* \"#utility.yul\":10690:10708   */\n      add\n        /* \"#utility.yul\":10682:10708   */\n      swap1\n      pop\n        /* \"#utility.yul\":10754:10763   */\n      dup2\n        /* \"#utility.yul\":10748:10752   */\n      dup2\n        /* \"#utility.yul\":10744:10764   */\n      sub\n        /* \"#utility.yul\":10740:10741   */\n      0x00\n        /* \"#utility.yul\":10729:10738   */\n      dup4\n        /* \"#utility.yul\":10725:10742   */\n      add\n        /* \"#utility.yul\":10718:10765   */\n      mstore\n        /* \"#utility.yul\":10782:10913   */\n      tag_451\n        /* \"#utility.yul\":10908:10912   */\n      dup2\n        /* \"#utility.yul\":10782:10913   */\n      tag_338\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":10774:10913   */\n      swap1\n      pop\n        /* \"#utility.yul\":10501:10920   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10926:11106   */\n    tag_339:\n        /* \"#utility.yul\":10974:11051   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10971:10972   */\n      0x00\n        /* \"#utility.yul\":10964:11052   */\n      mstore\n        /* \"#utility.yul\":11071:11075   */\n      0x11\n        /* \"#utility.yul\":11068:11069   */\n      0x04\n        /* \"#utility.yul\":11061:11076   */\n      mstore\n        /* \"#utility.yul\":11095:11099   */\n      0x24\n        /* \"#utility.yul\":11092:11093   */\n      0x00\n        /* \"#utility.yul\":11085:11100   */\n      revert\n        /* \"#utility.yul\":11112:11306   */\n    tag_231:\n        /* \"#utility.yul\":11152:11156   */\n      0x00\n        /* \"#utility.yul\":11172:11192   */\n      tag_454\n        /* \"#utility.yul\":11190:11191   */\n      dup3\n        /* \"#utility.yul\":11172:11192   */\n      tag_315\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":11167:11192   */\n      swap2\n      pop\n        /* \"#utility.yul\":11206:11226   */\n      tag_455\n        /* \"#utility.yul\":11224:11225   */\n      dup4\n        /* \"#utility.yul\":11206:11226   */\n      tag_315\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":11201:11226   */\n      swap3\n      pop\n        /* \"#utility.yul\":11250:11251   */\n      dup3\n        /* \"#utility.yul\":11247:11248   */\n      dup3\n        /* \"#utility.yul\":11243:11252   */\n      sub\n        /* \"#utility.yul\":11235:11252   */\n      swap1\n      pop\n        /* \"#utility.yul\":11274:11275   */\n      dup2\n        /* \"#utility.yul\":11268:11272   */\n      dup2\n        /* \"#utility.yul\":11265:11276   */\n      gt\n        /* \"#utility.yul\":11262:11299   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":11279:11297   */\n      tag_457\n      tag_339\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":11262:11299   */\n    tag_456:\n        /* \"#utility.yul\":11112:11306   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11312:11503   */\n    tag_234:\n        /* \"#utility.yul\":11352:11355   */\n      0x00\n        /* \"#utility.yul\":11371:11391   */\n      tag_459\n        /* \"#utility.yul\":11389:11390   */\n      dup3\n        /* \"#utility.yul\":11371:11391   */\n      tag_315\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":11366:11391   */\n      swap2\n      pop\n        /* \"#utility.yul\":11405:11425   */\n      tag_460\n        /* \"#utility.yul\":11423:11424   */\n      dup4\n        /* \"#utility.yul\":11405:11425   */\n      tag_315\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":11400:11425   */\n      swap3\n      pop\n        /* \"#utility.yul\":11448:11449   */\n      dup3\n        /* \"#utility.yul\":11445:11446   */\n      dup3\n        /* \"#utility.yul\":11441:11450   */\n      add\n        /* \"#utility.yul\":11434:11450   */\n      swap1\n      pop\n        /* \"#utility.yul\":11469:11472   */\n      dup1\n        /* \"#utility.yul\":11466:11467   */\n      dup3\n        /* \"#utility.yul\":11463:11473   */\n      gt\n        /* \"#utility.yul\":11460:11496   */\n      iszero\n      tag_461\n      jumpi\n        /* \"#utility.yul\":11476:11494   */\n      tag_462\n      tag_339\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":11460:11496   */\n    tag_461:\n        /* \"#utility.yul\":11312:11503   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11509:11689   */\n    tag_340:\n        /* \"#utility.yul\":11557:11634   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11554:11555   */\n      0x00\n        /* \"#utility.yul\":11547:11635   */\n      mstore\n        /* \"#utility.yul\":11654:11658   */\n      0x12\n        /* \"#utility.yul\":11651:11652   */\n      0x04\n        /* \"#utility.yul\":11644:11659   */\n      mstore\n        /* \"#utility.yul\":11678:11682   */\n      0x24\n        /* \"#utility.yul\":11675:11676   */\n      0x00\n        /* \"#utility.yul\":11668:11683   */\n      revert\n        /* \"#utility.yul\":11695:11871   */\n    tag_237:\n        /* \"#utility.yul\":11727:11728   */\n      0x00\n        /* \"#utility.yul\":11744:11764   */\n      tag_465\n        /* \"#utility.yul\":11762:11763   */\n      dup3\n        /* \"#utility.yul\":11744:11764   */\n      tag_315\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":11739:11764   */\n      swap2\n      pop\n        /* \"#utility.yul\":11778:11798   */\n      tag_466\n        /* \"#utility.yul\":11796:11797   */\n      dup4\n        /* \"#utility.yul\":11778:11798   */\n      tag_315\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":11773:11798   */\n      swap3\n      pop\n        /* \"#utility.yul\":11817:11818   */\n      dup3\n        /* \"#utility.yul\":11807:11842   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":11822:11840   */\n      tag_468\n      tag_340\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":11807:11842   */\n    tag_467:\n        /* \"#utility.yul\":11863:11864   */\n      dup3\n        /* \"#utility.yul\":11860:11861   */\n      dup3\n        /* \"#utility.yul\":11856:11865   */\n      mod\n        /* \"#utility.yul\":11851:11865   */\n      swap1\n      pop\n        /* \"#utility.yul\":11695:11871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11877:12287   */\n    tag_241:\n        /* \"#utility.yul\":11917:11924   */\n      0x00\n        /* \"#utility.yul\":11940:11960   */\n      tag_470\n        /* \"#utility.yul\":11958:11959   */\n      dup3\n        /* \"#utility.yul\":11940:11960   */\n      tag_315\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":11935:11960   */\n      swap2\n      pop\n        /* \"#utility.yul\":11974:11994   */\n      tag_471\n        /* \"#utility.yul\":11992:11993   */\n      dup4\n        /* \"#utility.yul\":11974:11994   */\n      tag_315\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11969:11994   */\n      swap3\n      pop\n        /* \"#utility.yul\":12029:12030   */\n      dup3\n        /* \"#utility.yul\":12026:12027   */\n      dup3\n        /* \"#utility.yul\":12022:12031   */\n      mul\n        /* \"#utility.yul\":12051:12081   */\n      tag_472\n        /* \"#utility.yul\":12069:12080   */\n      dup2\n        /* \"#utility.yul\":12051:12081   */\n      tag_315\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":12040:12081   */\n      swap2\n      pop\n        /* \"#utility.yul\":12230:12231   */\n      dup3\n        /* \"#utility.yul\":12221:12228   */\n      dup3\n        /* \"#utility.yul\":12217:12232   */\n      div\n        /* \"#utility.yul\":12214:12215   */\n      dup5\n        /* \"#utility.yul\":12211:12233   */\n      eq\n        /* \"#utility.yul\":12191:12192   */\n      dup4\n        /* \"#utility.yul\":12184:12193   */\n      iszero\n        /* \"#utility.yul\":12164:12247   */\n      or\n        /* \"#utility.yul\":12141:12280   */\n      tag_473\n      jumpi\n        /* \"#utility.yul\":12260:12278   */\n      tag_474\n      tag_339\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":12141:12280   */\n    tag_473:\n        /* \"#utility.yul\":11925:12287   */\n      pop\n        /* \"#utility.yul\":11877:12287   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12293:12478   */\n    tag_243:\n        /* \"#utility.yul\":12333:12334   */\n      0x00\n        /* \"#utility.yul\":12350:12370   */\n      tag_476\n        /* \"#utility.yul\":12368:12369   */\n      dup3\n        /* \"#utility.yul\":12350:12370   */\n      tag_315\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":12345:12370   */\n      swap2\n      pop\n        /* \"#utility.yul\":12384:12404   */\n      tag_477\n        /* \"#utility.yul\":12402:12403   */\n      dup4\n        /* \"#utility.yul\":12384:12404   */\n      tag_315\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12379:12404   */\n      swap3\n      pop\n        /* \"#utility.yul\":12423:12424   */\n      dup3\n        /* \"#utility.yul\":12413:12448   */\n      tag_478\n      jumpi\n        /* \"#utility.yul\":12428:12446   */\n      tag_479\n      tag_340\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":12413:12448   */\n    tag_478:\n        /* \"#utility.yul\":12470:12471   */\n      dup3\n        /* \"#utility.yul\":12467:12468   */\n      dup3\n        /* \"#utility.yul\":12463:12472   */\n      div\n        /* \"#utility.yul\":12458:12472   */\n      swap1\n      pop\n        /* \"#utility.yul\":12293:12478   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12484:12717   */\n    tag_266:\n        /* \"#utility.yul\":12523:12526   */\n      0x00\n        /* \"#utility.yul\":12546:12570   */\n      tag_481\n        /* \"#utility.yul\":12564:12569   */\n      dup3\n        /* \"#utility.yul\":12546:12570   */\n      tag_315\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":12537:12570   */\n      swap2\n      pop\n        /* \"#utility.yul\":12592:12658   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12585:12590   */\n      dup3\n        /* \"#utility.yul\":12582:12659   */\n      sub\n        /* \"#utility.yul\":12579:12682   */\n      tag_482\n      jumpi\n        /* \"#utility.yul\":12662:12680   */\n      tag_483\n      tag_339\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":12579:12682   */\n    tag_482:\n        /* \"#utility.yul\":12709:12710   */\n      0x01\n        /* \"#utility.yul\":12702:12707   */\n      dup3\n        /* \"#utility.yul\":12698:12711   */\n      add\n        /* \"#utility.yul\":12691:12711   */\n      swap1\n      pop\n        /* \"#utility.yul\":12484:12717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12723:12948   */\n    tag_341:\n        /* \"#utility.yul\":12863:12897   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":12859:12860   */\n      0x00\n        /* \"#utility.yul\":12851:12857   */\n      dup3\n        /* \"#utility.yul\":12847:12861   */\n      add\n        /* \"#utility.yul\":12840:12898   */\n      mstore\n        /* \"#utility.yul\":12932:12940   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12927:12929   */\n      0x20\n        /* \"#utility.yul\":12919:12925   */\n      dup3\n        /* \"#utility.yul\":12915:12930   */\n      add\n        /* \"#utility.yul\":12908:12941   */\n      mstore\n        /* \"#utility.yul\":12723:12948   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12954:13320   */\n    tag_342:\n        /* \"#utility.yul\":13096:13099   */\n      0x00\n        /* \"#utility.yul\":13117:13184   */\n      tag_486\n        /* \"#utility.yul\":13181:13183   */\n      0x26\n        /* \"#utility.yul\":13176:13179   */\n      dup4\n        /* \"#utility.yul\":13117:13184   */\n      tag_329\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13110:13184   */\n      swap2\n      pop\n        /* \"#utility.yul\":13193:13286   */\n      tag_487\n        /* \"#utility.yul\":13282:13285   */\n      dup3\n        /* \"#utility.yul\":13193:13286   */\n      tag_341\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":13311:13313   */\n      0x40\n        /* \"#utility.yul\":13306:13309   */\n      dup3\n        /* \"#utility.yul\":13302:13314   */\n      add\n        /* \"#utility.yul\":13295:13314   */\n      swap1\n      pop\n        /* \"#utility.yul\":12954:13320   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13326:13745   */\n    tag_279:\n        /* \"#utility.yul\":13492:13496   */\n      0x00\n        /* \"#utility.yul\":13530:13532   */\n      0x20\n        /* \"#utility.yul\":13519:13528   */\n      dup3\n        /* \"#utility.yul\":13515:13533   */\n      add\n        /* \"#utility.yul\":13507:13533   */\n      swap1\n      pop\n        /* \"#utility.yul\":13579:13588   */\n      dup2\n        /* \"#utility.yul\":13573:13577   */\n      dup2\n        /* \"#utility.yul\":13569:13589   */\n      sub\n        /* \"#utility.yul\":13565:13566   */\n      0x00\n        /* \"#utility.yul\":13554:13563   */\n      dup4\n        /* \"#utility.yul\":13550:13567   */\n      add\n        /* \"#utility.yul\":13543:13590   */\n      mstore\n        /* \"#utility.yul\":13607:13738   */\n      tag_489\n        /* \"#utility.yul\":13733:13737   */\n      dup2\n        /* \"#utility.yul\":13607:13738   */\n      tag_342\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":13599:13738   */\n      swap1\n      pop\n        /* \"#utility.yul\":13326:13745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d0c3dfc2f2355ab9530199aa4fcb683f4053ef7ea0746a229c9dfb502d35e56864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_782": {
									"entryPoint": null,
									"id": 782,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 89,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 97,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526815af1d78b58c4000006005556201518060075560056008556103e860095534801561002f57600080fd5b5061004c61004161005960201b60201c565b61006160201b60201c565b6001600281905550610127565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b611ea4806101366000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c806380faa57d116100f9578063b79ec81211610097578063d1af0c7d11610071578063d1af0c7d146104af578063da4f8431146104cd578063df136d65146104fd578063f2fde38b1461051b576101a8565b8063b79ec81214610443578063c8f33c9114610473578063cdda56e014610491576101a8565b80638b876347116100d35780638b876347146103bb5780638da5cb5b146103eb5780639499c54914610409578063adc9772e14610427576101a8565b806380faa57d1461033d5780638107368b1461035b578063874c120b1461038b576101a8565b80633d18b912116101665780636917c501116101405780636917c501146102d9578063715018a6146102f757806378e97925146103015780637a6fcee71461031f576101a8565b80633d18b912146102955780633e0a322d1461029f5780636139d4b4146102bb576101a8565b80628cc262146101ad5780630700037d146101dd5780630e15561a1461020d57806318e20ecf1461022b57806324d7806c146102475780633c4045cf14610277575b600080fd5b6101c760048036038101906101c29190611709565b610537565b6040516101d4919061174f565b60405180910390f35b6101f760048036038101906101f29190611709565b6106a3565b604051610204919061174f565b60405180910390f35b6102156106bb565b604051610222919061174f565b60405180910390f35b610245600480360381019061024091906117a2565b6106c1565b005b610261600480360381019061025c9190611709565b610832565b60405161026e91906117f1565b60405180910390f35b61027f610887565b60405161028c919061174f565b60405180910390f35b61029d61088d565b005b6102b960048036038101906102b49190611838565b610bdd565b005b6102c3610c36565b6040516102d0919061174f565b60405180910390f35b6102e1610c3c565b6040516102ee919061174f565b60405180910390f35b6102ff610c46565b005b610309610cce565b604051610316919061174f565b60405180910390f35b610327610cd4565b604051610334919061174f565b60405180910390f35b610345610cda565b604051610352919061174f565b60405180910390f35b61037560048036038101906103709190611709565b610ce2565b604051610382919061174f565b60405180910390f35b6103a560048036038101906103a09190611838565b610cfa565b6040516103b2919061174f565b60405180910390f35b6103d560048036038101906103d09190611709565b610d87565b6040516103e2919061174f565b60405180910390f35b6103f3610d9f565b6040516104009190611874565b60405180910390f35b610411610dc9565b60405161041e919061174f565b60405180910390f35b610441600480360381019061043c919061188f565b610dd9565b005b61045d60048036038101906104589190611709565b611138565b60405161046a919061174f565b60405180910390f35b61047b611181565b604051610488919061174f565b60405180910390f35b610499611187565b6040516104a6919061174f565b60405180910390f35b6104b7611197565b6040516104c4919061192e565b60405180910390f35b6104e760048036038101906104e29190611949565b6111bd565b6040516104f4919061174f565b60405180910390f35b6105056113a1565b604051610512919061174f565b60405180910390f35b61053560048036038101906105309190611709565b6113a7565b005b600080610583600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426111bd565b905061069b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461068d670de0b6b3a764000061067f610631600c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461062388610cfa565b61149e90919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114b490919063ffffffff16565b6114ca90919063ffffffff16565b6114e090919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b6106c96114f6565b73ffffffffffffffffffffffffffffffffffffffff166106e7610d9f565b73ffffffffffffffffffffffffffffffffffffffff161461073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490611a0c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16836040516107d0929190611a2c565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b60028054036108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c890611aa1565b60405180910390fd5b60028081905550336000610924600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426111bd565b905061092f81610cfa565b600b8190555061093d610cda565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610a4e5761098082610537565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610bd0576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b3d929190611ac1565b6020604051808303816000875af1158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b809190611aff565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610bc7919061174f565b60405180910390a25b5050506001600281905550565b610bed610be86114f6565b610832565b610c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2390611b9e565b60405180910390fd5b8060068190555050565b60075481565b6000600e54905090565b610c4e6114f6565b73ffffffffffffffffffffffffffffffffffffffff16610c6c610d9f565b73ffffffffffffffffffffffffffffffffffffffff1614610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb990611a0c565b60405180910390fd5b610ccc60006114fe565b565b60065481565b60095481565b600042905090565b600d6020528060005260406000206000915090505481565b600080600e5403610d0f57600b549050610d82565b610d7f610d6e600e54610d60670de0b6b3a7640000610d5287610d44600a54610d36610cda565b61149e90919063ffffffff16565b6114b490919063ffffffff16565b6114b490919063ffffffff16565b6114ca90919063ffffffff16565b600b546114e090919063ffffffff16565b90505b919050565b600c6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610dd4426115c4565b905090565b6002805403610e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1490611aa1565b60405180910390fd5b60028081905550610e34610e2f6114f6565b610832565b610e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6a90611b9e565b60405180910390fd5b336000610ebf600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426111bd565b9050610eca81610cfa565b600b81905550610ed8610cda565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610fe957610f1b82610537565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000831161102c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102390611c0a565b60405180910390fd5b61104183600e546114e090919063ffffffff16565b600e8190555061109983600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114e090919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d84604051611122919061174f565b60405180910390a2505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b600061119242611675565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060065414806111cf5750818311155b156111dd576000905061139b565b60075483836111ec9190611c59565b50506000600754846111fe9190611c8d565b90506000600754600654836112139190611c59565b61121d9190611cf0565b826112289190611c59565b9050600060075482611239886115c4565b6112439190611d21565b61124d9190611d63565b90506000600754600654876112629190611c59565b61126c9190611cf0565b905060006007548261127d896115c4565b6112879190611d21565b6112919190611d63565b905060008585848a6112a39190611c59565b6112ad9190611c59565b6112b79190611c59565b905060006112cf86886112ca9190611c8d565b6115c4565b90506000819050600082905060006112f1898b6112ec9190611c8d565b6115c4565b905060005b600754866113049190611d63565b8110156113605782915060095460085484846113209190611c59565b61132a9190611d21565b6113349190611d63565b8261133f9190611c59565b9250828461134d9190611c8d565b93508061135990611d94565b90506112f6565b508c8c61136d9190611c59565b86898561137a9190611c8d565b6113849190611c8d565b61138e9190611d63565b9a50505050505050505050505b92915050565b600b5481565b6113af6114f6565b73ffffffffffffffffffffffffffffffffffffffff166113cd610d9f565b73ffffffffffffffffffffffffffffffffffffffff1614611423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141a90611a0c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990611e4e565b60405180910390fd5b61149b816114fe565b50565b600081836114ac9190611c59565b905092915050565b600081836114c29190611d21565b905092915050565b600081836114d89190611d63565b905092915050565b600081836114ee9190611c8d565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600654036115d9576006549050611670565b60006001600754600654856115ee9190611c59565b6115f89190611d63565b6116029190611c8d565b90506000600554905060005b8281101561164f57600954600854836116279190611d21565b6116319190611d63565b8261163c9190611c59565b91508061164890611d94565b905061160e565b50600954600854826116619190611d21565b61166b9190611d63565b925050505b919050565b600080611681836115c4565b9050600061169a600754836114ca90919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116d6826116ab565b9050919050565b6116e6816116cb565b81146116f157600080fd5b50565b600081359050611703816116dd565b92915050565b60006020828403121561171f5761171e6116a6565b5b600061172d848285016116f4565b91505092915050565b6000819050919050565b61174981611736565b82525050565b60006020820190506117646000830184611740565b92915050565b60008115159050919050565b61177f8161176a565b811461178a57600080fd5b50565b60008135905061179c81611776565b92915050565b600080604083850312156117b9576117b86116a6565b5b60006117c7858286016116f4565b92505060206117d88582860161178d565b9150509250929050565b6117eb8161176a565b82525050565b600060208201905061180660008301846117e2565b92915050565b61181581611736565b811461182057600080fd5b50565b6000813590506118328161180c565b92915050565b60006020828403121561184e5761184d6116a6565b5b600061185c84828501611823565b91505092915050565b61186e816116cb565b82525050565b60006020820190506118896000830184611865565b92915050565b600080604083850312156118a6576118a56116a6565b5b60006118b4858286016116f4565b92505060206118c585828601611823565b9150509250929050565b6000819050919050565b60006118f46118ef6118ea846116ab565b6118cf565b6116ab565b9050919050565b6000611906826118d9565b9050919050565b6000611918826118fb565b9050919050565b6119288161190d565b82525050565b6000602082019050611943600083018461191f565b92915050565b600080604083850312156119605761195f6116a6565b5b600061196e85828601611823565b925050602061197f85828601611823565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006119f6602283611989565b9150611a018261199a565b604082019050919050565b60006020820190508181036000830152611a25816119e9565b9050919050565b6000604082019050611a4160008301856117e2565b611a4e60208301846117e2565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611a8b601f83611989565b9150611a9682611a55565b602082019050919050565b60006020820190508181036000830152611aba81611a7e565b9050919050565b6000604082019050611ad66000830185611865565b611ae36020830184611740565b9392505050565b600081519050611af981611776565b92915050565b600060208284031215611b1557611b146116a6565b5b6000611b2384828501611aea565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b88602283611989565b9150611b9382611b2c565b604082019050919050565b60006020820190508181036000830152611bb781611b7b565b9050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b6000611bf4600e83611989565b9150611bff82611bbe565b602082019050919050565b60006020820190508181036000830152611c2381611be7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c6482611736565b9150611c6f83611736565b9250828203905081811115611c8757611c86611c2a565b5b92915050565b6000611c9882611736565b9150611ca383611736565b9250828201905080821115611cbb57611cba611c2a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611cfb82611736565b9150611d0683611736565b925082611d1657611d15611cc1565b5b828206905092915050565b6000611d2c82611736565b9150611d3783611736565b9250828202611d4581611736565b91508282048414831517611d5c57611d5b611c2a565b5b5092915050565b6000611d6e82611736565b9150611d7983611736565b925082611d8957611d88611cc1565b5b828204905092915050565b6000611d9f82611736565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd157611dd0611c2a565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e38602683611989565b9150611e4382611ddc565b604082019050919050565b60006020820190508181036000830152611e6781611e2b565b905091905056fea2646970667358221220d0c3dfc2f2355ab9530199aa4fcb683f4053ef7ea0746a229c9dfb502d35e56864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x5 SSTORE PUSH3 0x15180 PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C PUSH2 0x41 PUSH2 0x59 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x61 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1EA4 DUP1 PUSH2 0x136 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x51B JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x491 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x427 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x38B JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x3D18B912 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x31F JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x2BB JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x277 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0x88D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xBDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0xC46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x192E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x505 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x13A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x583 PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP PUSH2 0x69B PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x68D PUSH8 0xDE0B6B3A7640000 PUSH2 0x67F PUSH2 0x631 PUSH1 0xC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x623 DUP9 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x149E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6C9 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6E7 PUSH2 0xD9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH2 0x924 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP PUSH2 0x92F DUP2 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x93D PUSH2 0xCDA JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA4E JUMPI PUSH2 0x980 DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP3 SWAP2 SWAP1 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xBED PUSH2 0xBE8 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC23 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4E PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6C PUSH2 0xD9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCCC PUSH1 0x0 PUSH2 0x14FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD SUB PUSH2 0xD0F JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xD7F PUSH2 0xD6E PUSH1 0xE SLOAD PUSH2 0xD60 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD52 DUP8 PUSH2 0xD44 PUSH1 0xA SLOAD PUSH2 0xD36 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x149E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD4 TIMESTAMP PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE14 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0xE34 PUSH2 0xE2F PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH2 0xEBF PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP PUSH2 0xECA DUP2 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xED8 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE9 JUMPI PUSH2 0xF1B DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1023 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1041 DUP4 PUSH1 0xE SLOAD PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1099 DUP4 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1192 TIMESTAMP PUSH2 0x1675 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x11CF JUMPI POP DUP2 DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x11DD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x139B JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 DUP4 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP4 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST DUP3 PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1239 DUP9 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x124D SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP8 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x127D DUP10 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1291 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 DUP5 DUP11 PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12CF DUP7 DUP9 PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x12F1 DUP10 DUP12 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP7 PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1360 JUMPI DUP3 SWAP2 POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 DUP5 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST DUP3 PUSH2 0x133F SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP5 PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x1359 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP PUSH2 0x12F6 JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x136D SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST DUP7 DUP10 DUP6 PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13AF PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13CD PUSH2 0xD9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141A SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149B DUP2 PUSH2 0x14FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0x15D9 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x164F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0x1627 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1631 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST DUP3 PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1648 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP PUSH2 0x160E JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x166B SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1681 DUP4 PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x169A PUSH1 0x7 SLOAD DUP4 PUSH2 0x14CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D6 DUP3 PUSH2 0x16AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16CB JUMP JUMPDEST DUP2 EQ PUSH2 0x16F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1703 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171F JUMPI PUSH2 0x171E PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172D DUP5 DUP3 DUP6 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1749 DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177F DUP2 PUSH2 0x176A JUMP JUMPDEST DUP2 EQ PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179C DUP2 PUSH2 0x1776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C7 DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D8 DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EB DUP2 PUSH2 0x176A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1806 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1815 DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP2 EQ PUSH2 0x1820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1832 DUP2 PUSH2 0x180C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184E JUMPI PUSH2 0x184D PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185C DUP5 DUP3 DUP6 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x186E DUP2 PUSH2 0x16CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1889 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F4 PUSH2 0x18EF PUSH2 0x18EA DUP5 PUSH2 0x16AB JUMP JUMPDEST PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1906 DUP3 PUSH2 0x18D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1918 DUP3 PUSH2 0x18FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1928 DUP2 PUSH2 0x190D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1943 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1960 JUMPI PUSH2 0x195F PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x196E DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x197F DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F6 PUSH1 0x22 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A01 DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A25 DUP2 PUSH2 0x19E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A41 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x1A4E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8B PUSH1 0x1F DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A96 DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ABA DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0x1AE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1740 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF9 DUP2 PUSH2 0x1776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B23 DUP5 DUP3 DUP6 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B88 PUSH1 0x22 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B93 DUP3 PUSH2 0x1B2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB7 DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 PUSH1 0xE DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFF DUP3 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C23 DUP2 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C64 DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6F DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFB DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D06 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2C DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D37 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D45 DUP2 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D5C JUMPI PUSH2 0x1D5B PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6E DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D79 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DD1 JUMPI PUSH2 0x1DD0 PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 PUSH1 0x26 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP3 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC3 0xDF 0xC2 CALLCODE CALLDATALOAD GAS 0xB9 MSTORE8 ADD SWAP10 0xAA 0x4F 0xCB PUSH9 0x3F4053EF7EA0746A22 SWAP13 SWAP14 0xFB POP 0x2D CALLDATALOAD 0xE5 PUSH9 0x64736F6C6343000811 STOP CALLER ",
							"sourceMap": "297:5421:1:-:0;;;507:14;477:44;;589:6;559:36;;641:1;602:40;;690:4;649:45;;297:5421;;;;;;;;;;603:32:0;622:12;:10;;;:12;;:::i;:::-;603:18;;;:32;;:::i;:::-;1734:1:2;1845:7;:22;;;;297:5421:1;;63:98:0;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;297:5421:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getRewardPool_388": {
									"entryPoint": 5572,
									"id": 388,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getRewardRate_422": {
									"entryPoint": 5749,
									"id": 422,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_10": {
									"entryPoint": 5366,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 5374,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1578": {
									"entryPoint": 5344,
									"id": 1578,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_1623": {
									"entryPoint": 5322,
									"id": 1623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_504": {
									"entryPoint": 1335,
									"id": 504,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurRewardPool_330": {
									"entryPoint": 3529,
									"id": 330,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurRewardRate_399": {
									"entryPoint": 4487,
									"id": 399,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReward_750": {
									"entryPoint": 2189,
									"id": 750,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTimeWeightedAveRate_661": {
									"entryPoint": 4541,
									"id": 661,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAdmin_96": {
									"entryPoint": 2098,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_431": {
									"entryPoint": 3290,
									"id": 431,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_215": {
									"entryPoint": 4481,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@modificationAdmin_174": {
									"entryPoint": 1729,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1608": {
									"entryPoint": 5300,
									"id": 1608,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_84": {
									"entryPoint": 3487,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powersOf_319": {
									"entryPoint": 4408,
									"id": 319,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rateIntervalDenominator_213": {
									"entryPoint": 3284,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateIntervalNumerator_210": {
									"entryPoint": 2183,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateInterval_207": {
									"entryPoint": 3126,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_109": {
									"entryPoint": 3142,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_217": {
									"entryPoint": 5025,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_464": {
									"entryPoint": 3322,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardsToken_191": {
									"entryPoint": 4503,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_195": {
									"entryPoint": 1699,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setStartTime_299": {
									"entryPoint": 3037,
									"id": 299,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_707": {
									"entryPoint": 3545,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_204": {
									"entryPoint": 3278,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1593": {
									"entryPoint": 5278,
									"id": 1593,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalPowers_307": {
									"entryPoint": 3132,
									"id": 307,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_202": {
									"entryPoint": 1723,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_131": {
									"entryPoint": 5031,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLastUpdateTime_225": {
									"entryPoint": 3298,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_221": {
									"entryPoint": 3463,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 6029,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 6890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6050,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 6287,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 6911,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 6245,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 6114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$881_to_t_address_fromStack": {
									"entryPoint": 6431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6633,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7035,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5952,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 6260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6849,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 6129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$881__to_t_address__fromStack_reversed": {
									"entryPoint": 6446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7758,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6817,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 6537,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7309,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$881_to_t_address": {
									"entryPoint": 6413,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6395,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6361,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7572,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 7408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7361,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 7644,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 7102,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb": {
									"entryPoint": 6554,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045": {
									"entryPoint": 6956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 6741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5853,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6156,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13748:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1663:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1688:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1681:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1681:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1674:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1674:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1663:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1635:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1645:7:7",
														"type": ""
													}
												],
												"src": "1611:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1747:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1801:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1810:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1803:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1803:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1803:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1770:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1792:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "1777:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1777:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1767:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1760:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:40:7"
															},
															"nodeType": "YulIf",
															"src": "1757:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1740:5:7",
														"type": ""
													}
												],
												"src": "1707:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1878:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1888:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1910:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1897:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1888:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1950:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1926:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1926:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1926:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1856:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1864:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1872:5:7",
														"type": ""
													}
												],
												"src": "1829:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2048:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2094:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2096:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2096:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2096:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2078:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2065:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2065:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2090:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:32:7"
															},
															"nodeType": "YulIf",
															"src": "2058:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2187:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2202:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2216:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2206:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2231:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2266:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2277:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2262:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2262:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2286:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2241:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2241:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2231:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2314:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2329:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2343:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2333:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2359:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2391:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2402:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2387:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2387:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2411:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2369:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2369:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2359:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2010:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2021:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2033:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2041:6:7",
														"type": ""
													}
												],
												"src": "1968:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2518:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2538:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "2523:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2523:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2489:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2496:3:7",
														"type": ""
													}
												],
												"src": "2442:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2649:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2659:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2671:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2682:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2667:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2667:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2659:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2733:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2746:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2757:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2742:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2742:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2695:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2695:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2695:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2621:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2633:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2644:4:7",
														"type": ""
													}
												],
												"src": "2557:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2816:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2873:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2882:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2885:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2875:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2875:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2875:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2839:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2864:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2846:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2846:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2836:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2836:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2829:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2829:43:7"
															},
															"nodeType": "YulIf",
															"src": "2826:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2809:5:7",
														"type": ""
													}
												],
												"src": "2773:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2963:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2985:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2972:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2972:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2963:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3028:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3001:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3001:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3001:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2931:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2939:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2947:5:7",
														"type": ""
													}
												],
												"src": "2901:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3112:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3158:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3160:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3160:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3160:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3133:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3142:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3129:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3129:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3154:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3125:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3125:32:7"
															},
															"nodeType": "YulIf",
															"src": "3122:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3251:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3266:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3280:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3270:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3295:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3330:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3341:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3326:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3326:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3350:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3305:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3305:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3295:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3082:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3093:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3105:6:7",
														"type": ""
													}
												],
												"src": "3046:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3446:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3463:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3486:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3468:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3468:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3456:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3456:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3456:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3434:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3441:3:7",
														"type": ""
													}
												],
												"src": "3381:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3603:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3613:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3625:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3621:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3621:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3613:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3706:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3717:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3702:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3702:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3649:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3649:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3649:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3575:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3587:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3598:4:7",
														"type": ""
													}
												],
												"src": "3505:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3816:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3862:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3864:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3864:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3864:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3837:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3846:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3833:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3833:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3858:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3829:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:32:7"
															},
															"nodeType": "YulIf",
															"src": "3826:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3955:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3970:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3984:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3974:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3999:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4034:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4045:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4030:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4030:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4054:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4009:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4009:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3999:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4082:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4097:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4111:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4101:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4127:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4162:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4173:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4158:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4158:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4182:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4137:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4137:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4127:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3778:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3789:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3801:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3809:6:7",
														"type": ""
													}
												],
												"src": "3733:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4245:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4255:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4262:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4255:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4231:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4241:3:7",
														"type": ""
													}
												],
												"src": "4213:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4339:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4349:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4407:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "4389:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4389:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "4380:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4380:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4362:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4362:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4349:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4319:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4329:9:7",
														"type": ""
													}
												],
												"src": "4279:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4487:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4497:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4541:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4510:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4510:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4497:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4467:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4477:9:7",
														"type": ""
													}
												],
												"src": "4427:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4633:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4643:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4687:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4656:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4656:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4643:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$881_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4613:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4623:9:7",
														"type": ""
													}
												],
												"src": "4559:140:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4784:80:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4801:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4851:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$881_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4806:44:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4806:51:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4794:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4794:64:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4794:64:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$881_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4772:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4779:3:7",
														"type": ""
													}
												],
												"src": "4705:159:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:138:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4992:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5004:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5015:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5000:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5000:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4992:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5086:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5099:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5110:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5095:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5095:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$881_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5028:57:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5028:85:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5028:85:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$881__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4954:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4966:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4977:4:7",
														"type": ""
													}
												],
												"src": "4870:250:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5209:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5255:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5257:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5257:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5257:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5230:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5239:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5226:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5226:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5251:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5222:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5222:32:7"
															},
															"nodeType": "YulIf",
															"src": "5219:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5348:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5363:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5377:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5367:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5392:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5427:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5438:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5423:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5423:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5447:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5402:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5402:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5392:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5475:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5490:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5504:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5494:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5520:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5555:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5566:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5551:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5551:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5575:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5530:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5530:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5520:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5171:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5182:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5194:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5202:6:7",
														"type": ""
													}
												],
												"src": "5126:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5702:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5719:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5724:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5712:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5712:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5712:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5740:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5759:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5764:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5755:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5755:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5740:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5674:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5679:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5690:11:7",
														"type": ""
													}
												],
												"src": "5606:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5887:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5909:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5917:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5905:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5905:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5921:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5898:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5898:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5898:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "5977:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5985:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5973:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5973:15:7"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5990:4:7",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5966:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5966:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5966:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5879:6:7",
														"type": ""
													}
												],
												"src": "5781:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6154:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6164:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6230:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6235:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6171:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6171:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6164:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6336:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																	"nodeType": "YulIdentifier",
																	"src": "6247:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6247:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6247:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6349:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6360:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6365:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6356:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6356:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6349:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6142:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6150:3:7",
														"type": ""
													}
												],
												"src": "6008:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6551:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6561:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6573:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6584:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6561:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6608:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6619:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6604:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6627:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6633:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6623:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6623:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6597:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6597:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6653:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6787:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6661:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6661:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6653:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6531:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6546:4:7",
														"type": ""
													}
												],
												"src": "6380:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6919:194:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6929:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6941:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6952:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6937:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6937:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6929:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7003:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7016:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7027:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7012:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7012:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6965:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6965:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6965:65:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7078:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7091:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7102:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7087:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7087:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7040:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7040:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7040:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6883:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6895:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6903:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6914:4:7",
														"type": ""
													}
												],
												"src": "6805:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7225:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7247:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7255:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7243:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7243:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7259:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7236:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7236:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7236:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7217:6:7",
														"type": ""
													}
												],
												"src": "7119:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7452:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7462:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7528:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7533:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7469:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7469:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7462:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7634:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "7545:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7545:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7545:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7647:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7658:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7663:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7654:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7654:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7647:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7440:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7448:3:7",
														"type": ""
													}
												],
												"src": "7306:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7849:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7859:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7871:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7882:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7867:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7867:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7859:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7906:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7917:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7902:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7902:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7925:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7931:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7921:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7921:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7895:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7895:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7951:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8085:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7959:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7959:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7951:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7829:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7844:4:7",
														"type": ""
													}
												],
												"src": "7678:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8229:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8239:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8251:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8262:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8247:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8247:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8239:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8319:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8332:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8343:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8328:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8328:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8275:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8275:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8275:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "8400:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8413:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8424:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8409:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8409:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8356:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8356:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8356:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8193:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8205:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8213:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8224:4:7",
														"type": ""
													}
												],
												"src": "8103:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8501:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8511:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8526:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8520:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "8511:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8566:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "8542:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8542:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8542:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8479:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8487:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8495:5:7",
														"type": ""
													}
												],
												"src": "8441:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8658:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8704:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8706:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8706:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8706:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8679:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8688:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8675:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8675:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8700:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8671:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8671:32:7"
															},
															"nodeType": "YulIf",
															"src": "8668:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "8797:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8812:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8826:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8816:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8841:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8884:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8895:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8880:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8880:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8904:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "8851:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8851:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8841:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8628:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8639:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8651:6:7",
														"type": ""
													}
												],
												"src": "8584:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9041:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9063:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9071:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9059:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9059:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9075:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9052:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9052:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9052:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9131:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9139:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9127:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9127:15:7"
																	},
																	{
																		"hexValue": "696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9144:4:7",
																		"type": "",
																		"value": "in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9120:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9120:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9120:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9033:6:7",
														"type": ""
													}
												],
												"src": "8935:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9308:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9318:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9384:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9389:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9325:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9325:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9318:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9490:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																	"nodeType": "YulIdentifier",
																	"src": "9401:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9401:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9401:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9503:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9514:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9519:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9510:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "9503:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9296:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9304:3:7",
														"type": ""
													}
												],
												"src": "9162:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9705:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9715:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9727:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9738:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9723:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9723:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9715:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9762:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9773:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9758:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9758:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "9781:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9787:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9777:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9777:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9751:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9751:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9751:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9807:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "9941:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9815:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9815:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9807:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9685:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9700:4:7",
														"type": ""
													}
												],
												"src": "9534:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10065:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10087:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10095:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10083:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10083:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10099:16:7",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10076:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10076:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10057:6:7",
														"type": ""
													}
												],
												"src": "9959:164:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10275:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10285:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10351:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10356:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10292:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10292:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "10285:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10457:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nodeType": "YulIdentifier",
																	"src": "10368:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10368:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10368:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10470:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10481:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10486:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10477:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10477:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10470:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "10263:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "10271:3:7",
														"type": ""
													}
												],
												"src": "10129:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10672:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10682:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10694:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10705:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10690:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10690:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10682:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10729:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10740:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10725:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10748:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10754:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10744:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10744:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10718:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10718:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10774:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10908:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10782:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10782:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10774:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10652:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10667:4:7",
														"type": ""
													}
												],
												"src": "10501:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10954:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10971:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10974:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10964:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10964:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10964:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11068:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11071:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11061:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11061:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11061:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11092:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11095:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11085:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11085:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11085:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10926:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11157:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11167:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11190:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11172:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11172:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11167:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11201:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11224:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11206:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11206:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11201:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11235:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11247:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11250:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "11243:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11243:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "11235:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11277:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11279:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11279:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11279:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "11268:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11274:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11265:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11265:11:7"
															},
															"nodeType": "YulIf",
															"src": "11262:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11143:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11146:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "11152:4:7",
														"type": ""
													}
												],
												"src": "11112:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11356:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11366:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11389:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11371:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11371:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11366:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11400:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11423:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11405:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11405:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11400:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11434:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11445:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11448:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11441:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11441:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11434:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11474:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11476:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11476:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11476:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11466:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11469:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11463:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11463:10:7"
															},
															"nodeType": "YulIf",
															"src": "11460:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11343:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11346:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11352:3:7",
														"type": ""
													}
												],
												"src": "11312:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11537:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11554:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11557:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11547:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11547:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11547:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11651:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11654:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11644:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11644:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11644:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11675:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11678:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11668:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11668:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11668:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "11509:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11729:142:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11739:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11762:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11744:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11744:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11739:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11773:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11796:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11778:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11778:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11773:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11820:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11822:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11822:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11822:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11817:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11810:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11810:9:7"
															},
															"nodeType": "YulIf",
															"src": "11807:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11851:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11860:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11863:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "11856:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11856:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11851:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11718:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11721:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11727:1:7",
														"type": ""
													}
												],
												"src": "11695:176:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11925:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11935:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11958:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11940:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11940:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11935:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11969:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11992:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11974:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11974:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11969:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12003:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12026:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12029:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "12022:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12022:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "12007:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12040:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "12069:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12051:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12051:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "12040:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12258:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12260:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12260:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12260:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "12191:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "12184:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12184:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "12214:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "12221:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "12230:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "12217:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12217:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "12211:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12211:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "12164:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12164:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12144:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12144:113:7"
															},
															"nodeType": "YulIf",
															"src": "12141:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11908:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11911:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11917:7:7",
														"type": ""
													}
												],
												"src": "11877:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12335:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12345:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12368:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12350:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12350:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "12345:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "12379:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12402:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12384:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12384:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "12379:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12426:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "12428:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12428:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12428:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12423:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12416:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12416:9:7"
															},
															"nodeType": "YulIf",
															"src": "12413:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12458:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "12467:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "12470:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "12463:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12463:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "12458:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "12324:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "12327:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "12333:1:7",
														"type": ""
													}
												],
												"src": "12293:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12527:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12537:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12564:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12546:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12546:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12537:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12660:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12662:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12662:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12662:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12585:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12592:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12582:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12582:77:7"
															},
															"nodeType": "YulIf",
															"src": "12579:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12691:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12702:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12709:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12698:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12698:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12691:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12513:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12523:3:7",
														"type": ""
													}
												],
												"src": "12484:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12829:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12851:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12859:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12847:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12847:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12863:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12840:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12840:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12840:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12919:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12927:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12915:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12915:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12932:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12908:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12908:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12908:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12821:6:7",
														"type": ""
													}
												],
												"src": "12723:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13100:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13110:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13176:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13181:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13117:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13117:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13110:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13282:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13193:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13193:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13193:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13295:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13306:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13302:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13302:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13295:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13088:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13096:3:7",
														"type": ""
													}
												],
												"src": "12954:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13497:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13507:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13519:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13530:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13515:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13515:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13507:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13554:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13565:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13550:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13550:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13573:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13579:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13569:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13569:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13543:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13543:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13543:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13599:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13733:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13607:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13607:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13599:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13477:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13492:4:7",
														"type": ""
													}
												],
												"src": "13326:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$881_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$881_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$881_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$881__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$881_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the adm\")\n\n        mstore(add(memPtr, 32), \"in\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a85760003560e01c806380faa57d116100f9578063b79ec81211610097578063d1af0c7d11610071578063d1af0c7d146104af578063da4f8431146104cd578063df136d65146104fd578063f2fde38b1461051b576101a8565b8063b79ec81214610443578063c8f33c9114610473578063cdda56e014610491576101a8565b80638b876347116100d35780638b876347146103bb5780638da5cb5b146103eb5780639499c54914610409578063adc9772e14610427576101a8565b806380faa57d1461033d5780638107368b1461035b578063874c120b1461038b576101a8565b80633d18b912116101665780636917c501116101405780636917c501146102d9578063715018a6146102f757806378e97925146103015780637a6fcee71461031f576101a8565b80633d18b912146102955780633e0a322d1461029f5780636139d4b4146102bb576101a8565b80628cc262146101ad5780630700037d146101dd5780630e15561a1461020d57806318e20ecf1461022b57806324d7806c146102475780633c4045cf14610277575b600080fd5b6101c760048036038101906101c29190611709565b610537565b6040516101d4919061174f565b60405180910390f35b6101f760048036038101906101f29190611709565b6106a3565b604051610204919061174f565b60405180910390f35b6102156106bb565b604051610222919061174f565b60405180910390f35b610245600480360381019061024091906117a2565b6106c1565b005b610261600480360381019061025c9190611709565b610832565b60405161026e91906117f1565b60405180910390f35b61027f610887565b60405161028c919061174f565b60405180910390f35b61029d61088d565b005b6102b960048036038101906102b49190611838565b610bdd565b005b6102c3610c36565b6040516102d0919061174f565b60405180910390f35b6102e1610c3c565b6040516102ee919061174f565b60405180910390f35b6102ff610c46565b005b610309610cce565b604051610316919061174f565b60405180910390f35b610327610cd4565b604051610334919061174f565b60405180910390f35b610345610cda565b604051610352919061174f565b60405180910390f35b61037560048036038101906103709190611709565b610ce2565b604051610382919061174f565b60405180910390f35b6103a560048036038101906103a09190611838565b610cfa565b6040516103b2919061174f565b60405180910390f35b6103d560048036038101906103d09190611709565b610d87565b6040516103e2919061174f565b60405180910390f35b6103f3610d9f565b6040516104009190611874565b60405180910390f35b610411610dc9565b60405161041e919061174f565b60405180910390f35b610441600480360381019061043c919061188f565b610dd9565b005b61045d60048036038101906104589190611709565b611138565b60405161046a919061174f565b60405180910390f35b61047b611181565b604051610488919061174f565b60405180910390f35b610499611187565b6040516104a6919061174f565b60405180910390f35b6104b7611197565b6040516104c4919061192e565b60405180910390f35b6104e760048036038101906104e29190611949565b6111bd565b6040516104f4919061174f565b60405180910390f35b6105056113a1565b604051610512919061174f565b60405180910390f35b61053560048036038101906105309190611709565b6113a7565b005b600080610583600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426111bd565b905061069b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461068d670de0b6b3a764000061067f610631600c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461062388610cfa565b61149e90919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114b490919063ffffffff16565b6114ca90919063ffffffff16565b6114e090919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b6106c96114f6565b73ffffffffffffffffffffffffffffffffffffffff166106e7610d9f565b73ffffffffffffffffffffffffffffffffffffffff161461073d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073490611a0c565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16836040516107d0929190611a2c565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b60028054036108d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c890611aa1565b60405180910390fd5b60028081905550336000610924600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426111bd565b905061092f81610cfa565b600b8190555061093d610cda565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610a4e5761098082610537565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610bd0576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610b3d929190611ac1565b6020604051808303816000875af1158015610b5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b809190611aff565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610bc7919061174f565b60405180910390a25b5050506001600281905550565b610bed610be86114f6565b610832565b610c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2390611b9e565b60405180910390fd5b8060068190555050565b60075481565b6000600e54905090565b610c4e6114f6565b73ffffffffffffffffffffffffffffffffffffffff16610c6c610d9f565b73ffffffffffffffffffffffffffffffffffffffff1614610cc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cb990611a0c565b60405180910390fd5b610ccc60006114fe565b565b60065481565b60095481565b600042905090565b600d6020528060005260406000206000915090505481565b600080600e5403610d0f57600b549050610d82565b610d7f610d6e600e54610d60670de0b6b3a7640000610d5287610d44600a54610d36610cda565b61149e90919063ffffffff16565b6114b490919063ffffffff16565b6114b490919063ffffffff16565b6114ca90919063ffffffff16565b600b546114e090919063ffffffff16565b90505b919050565b600c6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000610dd4426115c4565b905090565b6002805403610e1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1490611aa1565b60405180910390fd5b60028081905550610e34610e2f6114f6565b610832565b610e73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6a90611b9e565b60405180910390fd5b336000610ebf600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426111bd565b9050610eca81610cfa565b600b81905550610ed8610cda565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614610fe957610f1b82610537565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000831161102c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161102390611c0a565b60405180910390fd5b61104183600e546114e090919063ffffffff16565b600e8190555061109983600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546114e090919063ffffffff16565b600f60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508373ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d84604051611122919061174f565b60405180910390a2505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b600061119242611675565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060065414806111cf5750818311155b156111dd576000905061139b565b60075483836111ec9190611c59565b50506000600754846111fe9190611c8d565b90506000600754600654836112139190611c59565b61121d9190611cf0565b826112289190611c59565b9050600060075482611239886115c4565b6112439190611d21565b61124d9190611d63565b90506000600754600654876112629190611c59565b61126c9190611cf0565b905060006007548261127d896115c4565b6112879190611d21565b6112919190611d63565b905060008585848a6112a39190611c59565b6112ad9190611c59565b6112b79190611c59565b905060006112cf86886112ca9190611c8d565b6115c4565b90506000819050600082905060006112f1898b6112ec9190611c8d565b6115c4565b905060005b600754866113049190611d63565b8110156113605782915060095460085484846113209190611c59565b61132a9190611d21565b6113349190611d63565b8261133f9190611c59565b9250828461134d9190611c8d565b93508061135990611d94565b90506112f6565b508c8c61136d9190611c59565b86898561137a9190611c8d565b6113849190611c8d565b61138e9190611d63565b9a50505050505050505050505b92915050565b600b5481565b6113af6114f6565b73ffffffffffffffffffffffffffffffffffffffff166113cd610d9f565b73ffffffffffffffffffffffffffffffffffffffff1614611423576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141a90611a0c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161148990611e4e565b60405180910390fd5b61149b816114fe565b50565b600081836114ac9190611c59565b905092915050565b600081836114c29190611d21565b905092915050565b600081836114d89190611d63565b905092915050565b600081836114ee9190611c8d565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080600654036115d9576006549050611670565b60006001600754600654856115ee9190611c59565b6115f89190611d63565b6116029190611c8d565b90506000600554905060005b8281101561164f57600954600854836116279190611d21565b6116319190611d63565b8261163c9190611c59565b91508061164890611d94565b905061160e565b50600954600854826116619190611d21565b61166b9190611d63565b925050505b919050565b600080611681836115c4565b9050600061169a600754836114ca90919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116d6826116ab565b9050919050565b6116e6816116cb565b81146116f157600080fd5b50565b600081359050611703816116dd565b92915050565b60006020828403121561171f5761171e6116a6565b5b600061172d848285016116f4565b91505092915050565b6000819050919050565b61174981611736565b82525050565b60006020820190506117646000830184611740565b92915050565b60008115159050919050565b61177f8161176a565b811461178a57600080fd5b50565b60008135905061179c81611776565b92915050565b600080604083850312156117b9576117b86116a6565b5b60006117c7858286016116f4565b92505060206117d88582860161178d565b9150509250929050565b6117eb8161176a565b82525050565b600060208201905061180660008301846117e2565b92915050565b61181581611736565b811461182057600080fd5b50565b6000813590506118328161180c565b92915050565b60006020828403121561184e5761184d6116a6565b5b600061185c84828501611823565b91505092915050565b61186e816116cb565b82525050565b60006020820190506118896000830184611865565b92915050565b600080604083850312156118a6576118a56116a6565b5b60006118b4858286016116f4565b92505060206118c585828601611823565b9150509250929050565b6000819050919050565b60006118f46118ef6118ea846116ab565b6118cf565b6116ab565b9050919050565b6000611906826118d9565b9050919050565b6000611918826118fb565b9050919050565b6119288161190d565b82525050565b6000602082019050611943600083018461191f565b92915050565b600080604083850312156119605761195f6116a6565b5b600061196e85828601611823565b925050602061197f85828601611823565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b60006119f6602283611989565b9150611a018261199a565b604082019050919050565b60006020820190508181036000830152611a25816119e9565b9050919050565b6000604082019050611a4160008301856117e2565b611a4e60208301846117e2565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000611a8b601f83611989565b9150611a9682611a55565b602082019050919050565b60006020820190508181036000830152611aba81611a7e565b9050919050565b6000604082019050611ad66000830185611865565b611ae36020830184611740565b9392505050565b600081519050611af981611776565b92915050565b600060208284031215611b1557611b146116a6565b5b6000611b2384828501611aea565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b88602283611989565b9150611b9382611b2c565b604082019050919050565b60006020820190508181036000830152611bb781611b7b565b9050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b6000611bf4600e83611989565b9150611bff82611bbe565b602082019050919050565b60006020820190508181036000830152611c2381611be7565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611c6482611736565b9150611c6f83611736565b9250828203905081811115611c8757611c86611c2a565b5b92915050565b6000611c9882611736565b9150611ca383611736565b9250828201905080821115611cbb57611cba611c2a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611cfb82611736565b9150611d0683611736565b925082611d1657611d15611cc1565b5b828206905092915050565b6000611d2c82611736565b9150611d3783611736565b9250828202611d4581611736565b91508282048414831517611d5c57611d5b611c2a565b5b5092915050565b6000611d6e82611736565b9150611d7983611736565b925082611d8957611d88611cc1565b5b828204905092915050565b6000611d9f82611736565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611dd157611dd0611c2a565b5b600182019050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611e38602683611989565b9150611e4382611ddc565b604082019050919050565b60006020820190508181036000830152611e6781611e2b565b905091905056fea2646970667358221220d0c3dfc2f2355ab9530199aa4fcb683f4053ef7ea0746a229c9dfb502d35e56864736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x4AF JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x51B JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x443 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x473 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x491 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x3BB JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x427 JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x33D JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x38B JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x3D18B912 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x31F JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x2BB JUMPI PUSH2 0x1A8 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1DD JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x277 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C2 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x537 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D4 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F2 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x215 PUSH2 0x6BB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x222 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x245 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x240 SWAP2 SWAP1 PUSH2 0x17A2 JUMP JUMPDEST PUSH2 0x6C1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x261 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25C SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27F PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28C SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29D PUSH2 0x88D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xBDD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2C3 PUSH2 0xC36 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E1 PUSH2 0xC3C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FF PUSH2 0xC46 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x309 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x316 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x327 PUSH2 0xCD4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x334 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x345 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xCE2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x382 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3A0 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH2 0xCFA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B2 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D0 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0xD87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F3 PUSH2 0xD9F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x400 SWAP2 SWAP1 PUSH2 0x1874 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x411 PUSH2 0xDC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x441 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43C SWAP2 SWAP1 PUSH2 0x188F JUMP JUMPDEST PUSH2 0xDD9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x45D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x458 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x1138 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46A SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47B PUSH2 0x1181 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x488 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x499 PUSH2 0x1187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A6 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B7 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C4 SWAP2 SWAP1 PUSH2 0x192E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4E2 SWAP2 SWAP1 PUSH2 0x1949 JUMP JUMPDEST PUSH2 0x11BD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F4 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x505 PUSH2 0x13A1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x512 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x535 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x530 SWAP2 SWAP1 PUSH2 0x1709 JUMP JUMPDEST PUSH2 0x13A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x583 PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP PUSH2 0x69B PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x68D PUSH8 0xDE0B6B3A7640000 PUSH2 0x67F PUSH2 0x631 PUSH1 0xC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x623 DUP9 PUSH2 0xCFA JUMP JUMPDEST PUSH2 0x149E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x6C9 PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6E7 PUSH2 0xD9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x73D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x734 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP3 SWAP2 SWAP1 PUSH2 0x1A2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x8D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C8 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH2 0x924 PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP PUSH2 0x92F DUP2 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x93D PUSH2 0xCDA JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA4E JUMPI PUSH2 0x980 DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xBD0 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3D SWAP3 SWAP2 SWAP1 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB5C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB80 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xBC7 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xBED PUSH2 0xBE8 PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0xC2C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC23 SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC4E PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6C PUSH2 0xD9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCB9 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCCC PUSH1 0x0 PUSH2 0x14FE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD SUB PUSH2 0xD0F JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0xD82 JUMP JUMPDEST PUSH2 0xD7F PUSH2 0xD6E PUSH1 0xE SLOAD PUSH2 0xD60 PUSH8 0xDE0B6B3A7640000 PUSH2 0xD52 DUP8 PUSH2 0xD44 PUSH1 0xA SLOAD PUSH2 0xD36 PUSH2 0xCDA JUMP JUMPDEST PUSH2 0x149E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14B4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x14CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDD4 TIMESTAMP PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xE1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE14 SWAP1 PUSH2 0x1AA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0xE34 PUSH2 0xE2F PUSH2 0x14F6 JUMP JUMPDEST PUSH2 0x832 JUMP JUMPDEST PUSH2 0xE73 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE6A SWAP1 PUSH2 0x1B9E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 PUSH2 0xEBF PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x11BD JUMP JUMPDEST SWAP1 POP PUSH2 0xECA DUP2 PUSH2 0xCFA JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xED8 PUSH2 0xCDA JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFE9 JUMPI PUSH2 0xF1B DUP3 PUSH2 0x537 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP4 GT PUSH2 0x102C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1023 SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1041 DUP4 PUSH1 0xE SLOAD PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x1099 DUP4 PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x14E0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP5 PUSH1 0x40 MLOAD PUSH2 0x1122 SWAP2 SWAP1 PUSH2 0x174F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1192 TIMESTAMP PUSH2 0x1675 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x11CF JUMPI POP DUP2 DUP4 GT ISZERO JUMPDEST ISZERO PUSH2 0x11DD JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x139B JUMP JUMPDEST PUSH1 0x7 SLOAD DUP4 DUP4 PUSH2 0x11EC SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST POP POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x11FE SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP4 PUSH2 0x1213 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x121D SWAP2 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST DUP3 PUSH2 0x1228 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x1239 DUP9 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1243 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x124D SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP8 PUSH2 0x1262 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x126C SWAP2 SWAP1 PUSH2 0x1CF0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x127D DUP10 PUSH2 0x15C4 JUMP JUMPDEST PUSH2 0x1287 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1291 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 DUP5 DUP11 PUSH2 0x12A3 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x12AD SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x12B7 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12CF DUP7 DUP9 PUSH2 0x12CA SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 PUSH2 0x12F1 DUP10 DUP12 PUSH2 0x12EC SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD DUP7 PUSH2 0x1304 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0x1360 JUMPI DUP3 SWAP2 POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 DUP5 PUSH2 0x1320 SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1334 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST DUP3 PUSH2 0x133F SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP3 POP DUP3 DUP5 PUSH2 0x134D SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x1359 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP PUSH2 0x12F6 JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x136D SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST DUP7 DUP10 DUP6 PUSH2 0x137A SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x1384 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST PUSH2 0x138E SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x13AF PUSH2 0x14F6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13CD PUSH2 0xD9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1423 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x141A SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1492 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1489 SWAP1 PUSH2 0x1E4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x149B DUP2 PUSH2 0x14FE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14AC SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14C2 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x14EE SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0x15D9 JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0x1670 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0x15EE SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST PUSH2 0x15F8 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST PUSH2 0x1602 SWAP2 SWAP1 PUSH2 0x1C8D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x164F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0x1627 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x1631 SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST DUP3 PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x1C59 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x1648 SWAP1 PUSH2 0x1D94 JUMP JUMPDEST SWAP1 POP PUSH2 0x160E JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0x1661 SWAP2 SWAP1 PUSH2 0x1D21 JUMP JUMPDEST PUSH2 0x166B SWAP2 SWAP1 PUSH2 0x1D63 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1681 DUP4 PUSH2 0x15C4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x169A PUSH1 0x7 SLOAD DUP4 PUSH2 0x14CA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16D6 DUP3 PUSH2 0x16AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16E6 DUP2 PUSH2 0x16CB JUMP JUMPDEST DUP2 EQ PUSH2 0x16F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1703 DUP2 PUSH2 0x16DD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x171F JUMPI PUSH2 0x171E PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x172D DUP5 DUP3 DUP6 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1749 DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1764 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1740 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177F DUP2 PUSH2 0x176A JUMP JUMPDEST DUP2 EQ PUSH2 0x178A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x179C DUP2 PUSH2 0x1776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17B9 JUMPI PUSH2 0x17B8 PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17C7 DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x17D8 DUP6 DUP3 DUP7 ADD PUSH2 0x178D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x17EB DUP2 PUSH2 0x176A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1806 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1815 DUP2 PUSH2 0x1736 JUMP JUMPDEST DUP2 EQ PUSH2 0x1820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1832 DUP2 PUSH2 0x180C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x184E JUMPI PUSH2 0x184D PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x185C DUP5 DUP3 DUP6 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x186E DUP2 PUSH2 0x16CB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1889 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1865 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18A6 JUMPI PUSH2 0x18A5 PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x18B4 DUP6 DUP3 DUP7 ADD PUSH2 0x16F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18C5 DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18F4 PUSH2 0x18EF PUSH2 0x18EA DUP5 PUSH2 0x16AB JUMP JUMPDEST PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x16AB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1906 DUP3 PUSH2 0x18D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1918 DUP3 PUSH2 0x18FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1928 DUP2 PUSH2 0x190D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1943 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x191F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1960 JUMPI PUSH2 0x195F PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x196E DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x197F DUP6 DUP3 DUP7 ADD PUSH2 0x1823 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19F6 PUSH1 0x22 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A01 DUP3 PUSH2 0x199A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A25 DUP2 PUSH2 0x19E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1A41 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x17E2 JUMP JUMPDEST PUSH2 0x1A4E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17E2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8B PUSH1 0x1F DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A96 DUP3 PUSH2 0x1A55 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ABA DUP2 PUSH2 0x1A7E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1AD6 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1865 JUMP JUMPDEST PUSH2 0x1AE3 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1740 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1AF9 DUP2 PUSH2 0x1776 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B15 JUMPI PUSH2 0x1B14 PUSH2 0x16A6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B23 DUP5 DUP3 DUP6 ADD PUSH2 0x1AEA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B88 PUSH1 0x22 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B93 DUP3 PUSH2 0x1B2C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BB7 DUP2 PUSH2 0x1B7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BF4 PUSH1 0xE DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BFF DUP3 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C23 DUP2 PUSH2 0x1BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C64 DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6F DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1C87 JUMPI PUSH2 0x1C86 PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C98 DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CA3 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1CBB JUMPI PUSH2 0x1CBA PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1CFB DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D06 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D16 JUMPI PUSH2 0x1D15 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D2C DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D37 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1D45 DUP2 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1D5C JUMPI PUSH2 0x1D5B PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6E DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D79 DUP4 PUSH2 0x1736 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1D89 JUMPI PUSH2 0x1D88 PUSH2 0x1CC1 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9F DUP3 PUSH2 0x1736 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DD1 JUMPI PUSH2 0x1DD0 PUSH2 0x1C2A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E38 PUSH1 0x26 DUP4 PUSH2 0x1989 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E43 DUP3 PUSH2 0x1DDC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E67 DUP2 PUSH2 0x1E2B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 0xC3 0xDF 0xC2 CALLCODE CALLDATALOAD GAS 0xB9 MSTORE8 ADD SWAP10 0xAA 0x4F 0xCB PUSH9 0x3F4053EF7EA0746A22 SWAP13 SWAP14 0xFB POP 0x2D CALLDATALOAD 0xE5 PUSH9 0x64736F6C6343000811 STOP CALLER ",
							"sourceMap": "297:5421:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3238:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;426:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;477:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1642:184:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1004:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;602:40:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5282:303;;;:::i;:::-;;1496:88;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;559:36;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1592:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1123:103:0;;;:::i;:::-;;528:24:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;649:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2767:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;845:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2882:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;781:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1812:115:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4970:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1693:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;701:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2411:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;393:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3577:1385;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;737:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:201:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3238:296:1;3292:7;3312:12;3327:68;3350:18;:27;3369:7;3350:27;;;;;;;;;;;;;;;;3379:15;3327:22;:68::i;:::-;3312:83;;3413:113;3509:7;:16;3517:7;3509:16;;;;;;;;;;;;;;;;3413:91;3499:4;3413:81;3436:57;3461:22;:31;3484:7;3461:31;;;;;;;;;;;;;;;;3436:20;3451:4;3436:14;:20::i;:::-;:24;;:57;;;;:::i;:::-;3413:9;:18;3423:7;3413:18;;;;;;;;;;;;;;;;:22;;:81;;;;:::i;:::-;:85;;:91;;;;:::i;:::-;:95;;:113;;;;:::i;:::-;3406:120;;;3238:296;;;:::o;426:42::-;;;;;;;;;;;;;;;;;:::o;477:44::-;;;;:::o;1642:184:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1755:5:::1;1737:48;;;1763:7;:14:::0;1771:5:::1;1763:14;;;;;;;;;;;;;;;;;;;;;;;;;1779:5;1737:48;;;;;;;:::i;:::-;;;;;;;;1813:5;1796:7;:14:::0;1804:5:::1;1796:14;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1642:184:::0;;:::o;1004:111::-;1067:4;1091:7;:16;1099:7;1091:16;;;;;;;;;;;;;;;;;;;;;;;;;1084:23;;1004:111;;;:::o;602:40:1:-;;;;:::o;5282:303::-;1778:1:2;2376:7;;:19;2368:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1;2509:7;:18;;;;5336:10:1::1;1050:12;1065:68;1088:18;:27;1107:7;1088:27;;;;;;;;;;;;;;;;1117:15;1065:22;:68::i;:::-;1050:83;;1167:20;1182:4;1167:14;:20::i;:::-;1144;:43;;;;1215:26;:24;:26::i;:::-;1198:14;:43;;;;1275:1;1256:21;;:7;:21;;;1252:217;;1313:15;1320:7;1313:6;:15::i;:::-;1294:7;:16;1302:7;1294:16;;;;;;;;;;;;;;;:34;;;;1377:20;;1343:22;:31;1366:7;1343:31;;;;;;;;;;;;;;;:54;;;;1442:15;1412:18;:27;1431:7;1412:27;;;;;;;;;;;;;;;:45;;;;1252:217;5359:14:::2;5376:7;:19;5384:10;5376:19;;;;;;;;;;;;;;;;5359:36;;5419:1;5410:6;:10;5406:172;;;5459:1;5437:7;:19;5445:10;5437:19;;;;;;;;;;;;;;;:23;;;;5475:12;;;;;;;;;;;:21;;;5497:10;5509:6;5475:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5547:10;5536:30;;;5559:6;5536:30;;;;;;:::i;:::-;;;;;;;;5406:172;5348:237;1039:449:::1;2540:1:2;1734::::0;2688:7;:22;;;;5282:303:1:o;1496:88::-;821:21:0;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1572:4:1::1;1560:9;:16;;;;1496:88:::0;:::o;559:36::-;;;;:::o;1592:93::-;1638:7;1665:12;;1658:19;;1592:93;:::o;1123:103:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1188:30:::1;1215:1;1188:18;:30::i;:::-;1123:103::o:0;528:24:1:-;;;;:::o;649:45::-;;;;:::o;2767:107::-;2824:7;2851:15;2844:22;;2767:107;:::o;845:53::-;;;;;;;;;;;;;;;;;:::o;2882:348::-;2947:7;2987:1;2971:12;;:17;2967:77;;3012:20;;3005:27;;;;2967:77;3074:148;3117:90;3194:12;;3117:72;3184:4;3117:62;3168:10;3117:46;3148:14;;3117:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;3074:20;;:24;;:148;;;;:::i;:::-;3054:168;;2882:348;;;;:::o;781:57::-;;;;;;;;;;;;;;;;;:::o;909:87:0:-;955:7;982:6;;;;;;;;;;;975:13;;909:87;:::o;1812:115:1:-;1861:7;1888:31;1903:15;1888:14;:31::i;:::-;1881:38;;1812:115;:::o;4970:300::-;1778:1:2;2376:7;;:19;2368:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1778:1;2509:7;:18;;;;821:21:0::1;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;5060:10:1::2;1050:12;1065:68;1088:18;:27;1107:7;1088:27;;;;;;;;;;;;;;;;1117:15;1065:22;:68::i;:::-;1050:83;;1167:20;1182:4;1167:14;:20::i;:::-;1144;:43;;;;1215:26;:24;:26::i;:::-;1198:14;:43;;;;1275:1;1256:21;;:7;:21;;;1252:217;;1313:15;1320:7;1313:6;:15::i;:::-;1294:7;:16;1302:7;1294:16;;;;;;;;;;;;;;;:34;;;;1377:20;;1343:22;:31;1366:7;1343:31;;;;;;;;;;;;;;;:54;;;;1442:15;1412:18;:27;1431:7;1412:27;;;;;;;;;;;;;;;:45;;;;1252:217;5100:1:::3;5091:6;:10;5083:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;5146:24;5163:6;5146:12;;:16;;:24;;;;:::i;:::-;5131:12;:39;;;;5199:27;5219:6;5199:9;:15;5209:4;5199:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;5181:9;:15;5191:4;5181:15;;;;;;;;;;;;;;;:45;;;;5249:4;5242:20;;;5255:6;5242:20;;;;;;:::i;:::-;;;;;;;;1039:449:::2;892:1:0;1734::2::0;2688:7;:22;;;;4970:300:1;;:::o;1693:111::-;1751:7;1778:9;:18;1788:7;1778:18;;;;;;;;;;;;;;;;1771:25;;1693:111;;;:::o;701:29::-;;;;:::o;2411:115::-;2460:7;2487:31;2502:15;2487:14;:31::i;:::-;2480:38;;2411:115;:::o;393:26::-;;;;;;;;;;;;;:::o;3577:1385::-;3667:7;3712:1;3699:9;;:14;:39;;;;3729:9;3717:8;:21;;3699:39;3696:79;;;3762:1;3755:8;;;;3696:79;3822:12;;3810:8;3798:9;:20;;;;:::i;:::-;:36;;3860:11;3885:12;;3874:8;:23;;;;:::i;:::-;3860:37;;3908:20;3957:12;;3944:9;;3938:3;:15;;;;:::i;:::-;3937:32;;;;:::i;:::-;3931:3;:38;;;;:::i;:::-;3908:61;;3980:18;4043:12;;4028;4001:24;4016:8;4001:14;:24::i;:::-;:39;;;;:::i;:::-;:54;;;;:::i;:::-;3980:75;;4068:21;4118:12;;4105:9;;4093;:21;;;;:::i;:::-;4092:38;;;;:::i;:::-;4068:62;;4141:19;4207:12;;4191:13;4163:25;4178:9;4163:14;:25::i;:::-;:41;;;;:::i;:::-;:56;;;;:::i;:::-;4141:78;;4281:19;4346:3;4331:12;4315:13;4303:9;:25;;;;:::i;:::-;:40;;;;:::i;:::-;:46;;;;:::i;:::-;4281:68;;4360:19;4382:34;4403:12;4397:3;:18;;;;:::i;:::-;4382:14;:34::i;:::-;4360:56;;4428:22;4453:11;4428:36;;4475:18;4496:11;4475:32;;4518:19;4540:34;4561:12;4555:3;:18;;;;:::i;:::-;4540:14;:34::i;:::-;4518:56;;4589:9;4585:284;4622:12;;4608:11;:26;;;;:::i;:::-;4604:1;:30;4585:284;;;4670:10;4656:24;;4775:23;;4751:21;;4737:10;4723:11;:24;;;;:::i;:::-;4722:50;;;;:::i;:::-;:76;;;;:::i;:::-;4708:11;:90;;;;:::i;:::-;4695:103;;4847:10;4830:14;:27;;;;:::i;:::-;4813:44;;4636:3;;;;:::i;:::-;;;4585:284;;;;4945:8;4933:9;:20;;;;:::i;:::-;4917:11;4904:10;4887:14;:27;;;;:::i;:::-;:41;;;;:::i;:::-;4886:68;;;;:::i;:::-;4879:75;;;;;;;;;;;;3577:1385;;;;;:::o;737:35::-;;;;:::o;1234:201:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1343:1:::1;1323:22;;:8;:22;;::::0;1315:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1399:28;1418:8;1399:18;:28::i;:::-;1234:201:::0;:::o;3214:98:6:-;3272:7;3303:1;3299;:5;;;;:::i;:::-;3292:12;;3214:98;;;;:::o;3571:::-;3629:7;3660:1;3656;:5;;;;:::i;:::-;3649:12;;3571:98;;;;:::o;3970:::-;4028:7;4059:1;4055;:5;;;;:::i;:::-;4048:12;;3970:98;;;;:::o;2833:::-;2891:7;2922:1;2918;:5;;;;:::i;:::-;2911:12;;2833:98;;;;:::o;63::0:-;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;1935:468:1:-;1995:7;2031:1;2018:9;;:14;2015:62;;2056:9;;2049:16;;;;2015:62;2087:13;2139:1;2124:12;;2111:9;;2104:4;:16;;;;:::i;:::-;2103:33;;;;:::i;:::-;:37;;;;:::i;:::-;2087:53;;2151:13;2167:12;;2151:28;;2194:9;2190:133;2213:5;2209:1;:9;2190:133;;;2288:23;;2264:21;;2256:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2248:5;:63;;;;:::i;:::-;2240:71;;2220:3;;;;:::i;:::-;;;2190:133;;;;2372:23;;2348:21;;2340:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2333:62;;;;1935:468;;;;:::o;2534:223::-;2594:7;2614:21;2638:20;2653:4;2638:14;:20::i;:::-;2614:44;;2669:18;2690:31;2708:12;;2690:13;:17;;:31;;;;:::i;:::-;2669:52;;2739:10;2732:17;;;;2534:223;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:90::-;1645:7;1688:5;1681:13;1674:21;1663:32;;1611:90;;;:::o;1707:116::-;1777:21;1792:5;1777:21;:::i;:::-;1770:5;1767:32;1757:60;;1813:1;1810;1803:12;1757:60;1707:116;:::o;1829:133::-;1872:5;1910:6;1897:20;1888:29;;1926:30;1950:5;1926:30;:::i;:::-;1829:133;;;;:::o;1968:468::-;2033:6;2041;2090:2;2078:9;2069:7;2065:23;2061:32;2058:119;;;2096:79;;:::i;:::-;2058:119;2216:1;2241:53;2286:7;2277:6;2266:9;2262:22;2241:53;:::i;:::-;2231:63;;2187:117;2343:2;2369:50;2411:7;2402:6;2391:9;2387:22;2369:50;:::i;:::-;2359:60;;2314:115;1968:468;;;;;:::o;2442:109::-;2523:21;2538:5;2523:21;:::i;:::-;2518:3;2511:34;2442:109;;:::o;2557:210::-;2644:4;2682:2;2671:9;2667:18;2659:26;;2695:65;2757:1;2746:9;2742:17;2733:6;2695:65;:::i;:::-;2557:210;;;;:::o;2773:122::-;2846:24;2864:5;2846:24;:::i;:::-;2839:5;2836:35;2826:63;;2885:1;2882;2875:12;2826:63;2773:122;:::o;2901:139::-;2947:5;2985:6;2972:20;2963:29;;3001:33;3028:5;3001:33;:::i;:::-;2901:139;;;;:::o;3046:329::-;3105:6;3154:2;3142:9;3133:7;3129:23;3125:32;3122:119;;;3160:79;;:::i;:::-;3122:119;3280:1;3305:53;3350:7;3341:6;3330:9;3326:22;3305:53;:::i;:::-;3295:63;;3251:117;3046:329;;;;:::o;3381:118::-;3468:24;3486:5;3468:24;:::i;:::-;3463:3;3456:37;3381:118;;:::o;3505:222::-;3598:4;3636:2;3625:9;3621:18;3613:26;;3649:71;3717:1;3706:9;3702:17;3693:6;3649:71;:::i;:::-;3505:222;;;;:::o;3733:474::-;3801:6;3809;3858:2;3846:9;3837:7;3833:23;3829:32;3826:119;;;3864:79;;:::i;:::-;3826:119;3984:1;4009:53;4054:7;4045:6;4034:9;4030:22;4009:53;:::i;:::-;3999:63;;3955:117;4111:2;4137:53;4182:7;4173:6;4162:9;4158:22;4137:53;:::i;:::-;4127:63;;4082:118;3733:474;;;;;:::o;4213:60::-;4241:3;4262:5;4255:12;;4213:60;;;:::o;4279:142::-;4329:9;4362:53;4380:34;4389:24;4407:5;4389:24;:::i;:::-;4380:34;:::i;:::-;4362:53;:::i;:::-;4349:66;;4279:142;;;:::o;4427:126::-;4477:9;4510:37;4541:5;4510:37;:::i;:::-;4497:50;;4427:126;;;:::o;4559:140::-;4623:9;4656:37;4687:5;4656:37;:::i;:::-;4643:50;;4559:140;;;:::o;4705:159::-;4806:51;4851:5;4806:51;:::i;:::-;4801:3;4794:64;4705:159;;:::o;4870:250::-;4977:4;5015:2;5004:9;5000:18;4992:26;;5028:85;5110:1;5099:9;5095:17;5086:6;5028:85;:::i;:::-;4870:250;;;;:::o;5126:474::-;5194:6;5202;5251:2;5239:9;5230:7;5226:23;5222:32;5219:119;;;5257:79;;:::i;:::-;5219:119;5377:1;5402:53;5447:7;5438:6;5427:9;5423:22;5402:53;:::i;:::-;5392:63;;5348:117;5504:2;5530:53;5575:7;5566:6;5555:9;5551:22;5530:53;:::i;:::-;5520:63;;5475:118;5126:474;;;;;:::o;5606:169::-;5690:11;5724:6;5719:3;5712:19;5764:4;5759:3;5755:14;5740:29;;5606:169;;;;:::o;5781:221::-;5921:34;5917:1;5909:6;5905:14;5898:58;5990:4;5985:2;5977:6;5973:15;5966:29;5781:221;:::o;6008:366::-;6150:3;6171:67;6235:2;6230:3;6171:67;:::i;:::-;6164:74;;6247:93;6336:3;6247:93;:::i;:::-;6365:2;6360:3;6356:12;6349:19;;6008:366;;;:::o;6380:419::-;6546:4;6584:2;6573:9;6569:18;6561:26;;6633:9;6627:4;6623:20;6619:1;6608:9;6604:17;6597:47;6661:131;6787:4;6661:131;:::i;:::-;6653:139;;6380:419;;;:::o;6805:308::-;6914:4;6952:2;6941:9;6937:18;6929:26;;6965:65;7027:1;7016:9;7012:17;7003:6;6965:65;:::i;:::-;7040:66;7102:2;7091:9;7087:18;7078:6;7040:66;:::i;:::-;6805:308;;;;;:::o;7119:181::-;7259:33;7255:1;7247:6;7243:14;7236:57;7119:181;:::o;7306:366::-;7448:3;7469:67;7533:2;7528:3;7469:67;:::i;:::-;7462:74;;7545:93;7634:3;7545:93;:::i;:::-;7663:2;7658:3;7654:12;7647:19;;7306:366;;;:::o;7678:419::-;7844:4;7882:2;7871:9;7867:18;7859:26;;7931:9;7925:4;7921:20;7917:1;7906:9;7902:17;7895:47;7959:131;8085:4;7959:131;:::i;:::-;7951:139;;7678:419;;;:::o;8103:332::-;8224:4;8262:2;8251:9;8247:18;8239:26;;8275:71;8343:1;8332:9;8328:17;8319:6;8275:71;:::i;:::-;8356:72;8424:2;8413:9;8409:18;8400:6;8356:72;:::i;:::-;8103:332;;;;;:::o;8441:137::-;8495:5;8526:6;8520:13;8511:22;;8542:30;8566:5;8542:30;:::i;:::-;8441:137;;;;:::o;8584:345::-;8651:6;8700:2;8688:9;8679:7;8675:23;8671:32;8668:119;;;8706:79;;:::i;:::-;8668:119;8826:1;8851:61;8904:7;8895:6;8884:9;8880:22;8851:61;:::i;:::-;8841:71;;8797:125;8584:345;;;;:::o;8935:221::-;9075:34;9071:1;9063:6;9059:14;9052:58;9144:4;9139:2;9131:6;9127:15;9120:29;8935:221;:::o;9162:366::-;9304:3;9325:67;9389:2;9384:3;9325:67;:::i;:::-;9318:74;;9401:93;9490:3;9401:93;:::i;:::-;9519:2;9514:3;9510:12;9503:19;;9162:366;;;:::o;9534:419::-;9700:4;9738:2;9727:9;9723:18;9715:26;;9787:9;9781:4;9777:20;9773:1;9762:9;9758:17;9751:47;9815:131;9941:4;9815:131;:::i;:::-;9807:139;;9534:419;;;:::o;9959:164::-;10099:16;10095:1;10087:6;10083:14;10076:40;9959:164;:::o;10129:366::-;10271:3;10292:67;10356:2;10351:3;10292:67;:::i;:::-;10285:74;;10368:93;10457:3;10368:93;:::i;:::-;10486:2;10481:3;10477:12;10470:19;;10129:366;;;:::o;10501:419::-;10667:4;10705:2;10694:9;10690:18;10682:26;;10754:9;10748:4;10744:20;10740:1;10729:9;10725:17;10718:47;10782:131;10908:4;10782:131;:::i;:::-;10774:139;;10501:419;;;:::o;10926:180::-;10974:77;10971:1;10964:88;11071:4;11068:1;11061:15;11095:4;11092:1;11085:15;11112:194;11152:4;11172:20;11190:1;11172:20;:::i;:::-;11167:25;;11206:20;11224:1;11206:20;:::i;:::-;11201:25;;11250:1;11247;11243:9;11235:17;;11274:1;11268:4;11265:11;11262:37;;;11279:18;;:::i;:::-;11262:37;11112:194;;;;:::o;11312:191::-;11352:3;11371:20;11389:1;11371:20;:::i;:::-;11366:25;;11405:20;11423:1;11405:20;:::i;:::-;11400:25;;11448:1;11445;11441:9;11434:16;;11469:3;11466:1;11463:10;11460:36;;;11476:18;;:::i;:::-;11460:36;11312:191;;;;:::o;11509:180::-;11557:77;11554:1;11547:88;11654:4;11651:1;11644:15;11678:4;11675:1;11668:15;11695:176;11727:1;11744:20;11762:1;11744:20;:::i;:::-;11739:25;;11778:20;11796:1;11778:20;:::i;:::-;11773:25;;11817:1;11807:35;;11822:18;;:::i;:::-;11807:35;11863:1;11860;11856:9;11851:14;;11695:176;;;;:::o;11877:410::-;11917:7;11940:20;11958:1;11940:20;:::i;:::-;11935:25;;11974:20;11992:1;11974:20;:::i;:::-;11969:25;;12029:1;12026;12022:9;12051:30;12069:11;12051:30;:::i;:::-;12040:41;;12230:1;12221:7;12217:15;12214:1;12211:22;12191:1;12184:9;12164:83;12141:139;;12260:18;;:::i;:::-;12141:139;11925:362;11877:410;;;;:::o;12293:185::-;12333:1;12350:20;12368:1;12350:20;:::i;:::-;12345:25;;12384:20;12402:1;12384:20;:::i;:::-;12379:25;;12423:1;12413:35;;12428:18;;:::i;:::-;12413:35;12470:1;12467;12463:9;12458:14;;12293:185;;;;:::o;12484:233::-;12523:3;12546:24;12564:5;12546:24;:::i;:::-;12537:33;;12592:66;12585:5;12582:77;12579:103;;12662:18;;:::i;:::-;12579:103;12709:1;12702:5;12698:13;12691:20;;12484:233;;;:::o;12723:225::-;12863:34;12859:1;12851:6;12847:14;12840:58;12932:8;12927:2;12919:6;12915:15;12908:33;12723:225;:::o;12954:366::-;13096:3;13117:67;13181:2;13176:3;13117:67;:::i;:::-;13110:74;;13193:93;13282:3;13193:93;:::i;:::-;13311:2;13306:3;13302:12;13295:19;;12954:366;;;:::o;13326:419::-;13492:4;13530:2;13519:9;13515:18;13507:26;;13579:9;13573:4;13569:20;13565:1;13554:9;13550:17;13543:47;13607:131;13733:4;13607:131;:::i;:::-;13599:139;;13326:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1568800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"earned(address)": "infinite",
								"getCurRewardPool()": "infinite",
								"getCurRewardRate()": "infinite",
								"getReward()": "infinite",
								"getTimeWeightedAveRate(uint256,uint256)": "infinite",
								"isAdmin(address)": "2995",
								"lastTimeRewardApplicable()": "382",
								"lastUpdateTime()": "2496",
								"modificationAdmin(address,bool)": "infinite",
								"owner()": "2589",
								"powersOf(address)": "2886",
								"rateInterval()": "2519",
								"rateIntervalDenominator()": "2540",
								"rateIntervalNumerator()": "2563",
								"renounceOwnership()": "30441",
								"rewardPerToken(uint256)": "infinite",
								"rewardPerTokenStored()": "2517",
								"rewards(address)": "2860",
								"rewardsToken()": "infinite",
								"setStartTime(uint256)": "24908",
								"stake(address,uint256)": "infinite",
								"startTime()": "2518",
								"totalPowers()": "2482",
								"totalRewards()": "2497",
								"transferOwnership(address)": "30830",
								"userLastUpdateTime(address)": "2882",
								"userRewardPerTokenPaid(address)": "2859"
							},
							"internal": {
								"_getRewardPool(uint256)": "infinite",
								"_getRewardRate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 507,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 477,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 477,
									"end": 521,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 589,
									"end": 595,
									"name": "PUSH",
									"source": 1,
									"value": "15180"
								},
								{
									"begin": 559,
									"end": 595,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 559,
									"end": 595,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 602,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 602,
									"end": 642,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 690,
									"end": 694,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 649,
									"end": 694,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 649,
									"end": 694,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 63,
									"end": 161,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 63,
									"end": 161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 116,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 153,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1562,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1617,
									"end": 1625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1607,
									"end": 1615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 5718,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d0c3dfc2f2355ab9530199aa4fcb683f4053ef7ea0746a229c9dfb502d35e56864736f6c63430008110033",
									".code": [
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "DA4F8431"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "DF136D65"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "C8F33C91"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "CDDA56E0"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "7A6FCEE7"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "6139D4B4"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "8CC262"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "700037D"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "E15561A"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "3C4045CF"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5718,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3238,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3238,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3238,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 426,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 426,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 426,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 477,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 477,
											"end": 521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 602,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 602,
											"end": 642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5282,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1496,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1496,
											"end": 1584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 559,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 559,
											"end": 595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1592,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1592,
											"end": 1685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 552,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 528,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 528,
											"end": 552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 649,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 649,
											"end": 694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2767,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2767,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 845,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 845,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 845,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2882,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2882,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2882,
											"end": 3230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 781,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 781,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1812,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1812,
											"end": 1927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 4970,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4970,
											"end": 5270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 701,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 701,
											"end": 730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2411,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2411,
											"end": 2526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 393,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 393,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3577,
											"end": 4962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3577,
											"end": 4962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 3577,
											"end": 4962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 737,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 737,
											"end": 772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3292,
											"end": 3299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3324,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3350,
											"end": 3368,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3369,
											"end": 3376,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3350,
											"end": 3377,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3379,
											"end": 3394,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3327,
											"end": 3395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3327,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3312,
											"end": 3395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3526,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3524,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3504,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3499,
											"end": 3503,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3413,
											"end": 3494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3436,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3461,
											"end": 3483,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3484,
											"end": 3491,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3461,
											"end": 3492,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3456,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3451,
											"end": 3455,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3436,
											"end": 3456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3456,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3436,
											"end": 3456,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3436,
											"end": 3460,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3436,
											"end": 3493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3493,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3436,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3422,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3423,
											"end": 3430,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3431,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3413,
											"end": 3435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3494,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3494,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3494,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3494,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3494,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3413,
											"end": 3494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3498,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3413,
											"end": 3498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3504,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3504,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3504,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3413,
											"end": 3504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3413,
											"end": 3508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3526,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3413,
											"end": 3526,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3526,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3413,
											"end": 3526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3526,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3406,
											"end": 3526,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3238,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854"
										},
										{
											"begin": 1763,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1776,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 1737,
											"end": 1785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5282,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2368,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5336,
											"end": 5346,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1133,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1088,
											"end": 1106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1114,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1132,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1087,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1065,
											"end": 1133,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1133,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1065,
											"end": 1133,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1133,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1187,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1182,
											"end": 1186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1181,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1167,
											"end": 1187,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1187,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1167,
											"end": 1187,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1241,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1215,
											"end": 1239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1215,
											"end": 1241,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1241,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1215,
											"end": 1241,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1212,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1276,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1263,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1328,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1320,
											"end": 1327,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1313,
											"end": 1328,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1328,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1313,
											"end": 1328,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1309,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1377,
											"end": 1397,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1457,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1438,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5373,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5384,
											"end": 5394,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5376,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5395,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5419,
											"end": 5420,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5410,
											"end": 5416,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5410,
											"end": 5420,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5578,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5578,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5406,
											"end": 5578,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5459,
											"end": 5460,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5444,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5455,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5456,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5460,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5460,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5460,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5460,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5487,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5496,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 5497,
											"end": 5507,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5515,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5475,
											"end": 5516,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5475,
											"end": 5516,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5475,
											"end": 5516,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5557,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 5559,
											"end": 5565,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5536,
											"end": 5566,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5536,
											"end": 5566,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 5406,
											"end": 5578,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5406,
											"end": 5578,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5585,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1488,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2540,
											"end": 2541,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1572,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1569,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1560,
											"end": 1576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1576,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1560,
											"end": 1576,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1665,
											"end": 1677,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1665,
											"end": 1677,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1592,
											"end": 1685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1215,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1188,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 552,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2824,
											"end": 2831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2851,
											"end": 2866,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2844,
											"end": 2866,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2947,
											"end": 2954,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2987,
											"end": 2988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 2983,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2971,
											"end": 2983,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2971,
											"end": 2988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2967,
											"end": 3044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3032,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3012,
											"end": 3032,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 3005,
											"end": 3032,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2967,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2967,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3117,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3184,
											"end": 3188,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3168,
											"end": 3178,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3148,
											"end": 3162,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3148,
											"end": 3162,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3117,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3117,
											"end": 3143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3117,
											"end": 3143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3117,
											"end": 3147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3163,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3117,
											"end": 3163,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3163,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 3117,
											"end": 3163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3117,
											"end": 3167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 3117,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3183,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3117,
											"end": 3183,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3189,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3189,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3117,
											"end": 3189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3189,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3117,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3117,
											"end": 3193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3207,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3117,
											"end": 3207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3207,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3117,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3074,
											"end": 3094,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3074,
											"end": 3098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3222,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3074,
											"end": 3222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3074,
											"end": 3222,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3074,
											"end": 3222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3222,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2882,
											"end": 3230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 955,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1861,
											"end": 1868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1903,
											"end": 1918,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1902,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1888,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1888,
											"end": 1919,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1888,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1881,
											"end": 1919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1812,
											"end": 1927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 2368,
											"end": 2431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2516,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 829,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5060,
											"end": 5070,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1133,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1088,
											"end": 1106,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1107,
											"end": 1114,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1115,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1117,
											"end": 1132,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1087,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1065,
											"end": 1133,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1133,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1065,
											"end": 1133,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1133,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1133,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1187,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1182,
											"end": 1186,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1181,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1167,
											"end": 1187,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1167,
											"end": 1187,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1167,
											"end": 1187,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1144,
											"end": 1187,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1241,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1215,
											"end": 1239,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1215,
											"end": 1241,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1215,
											"end": 1241,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1215,
											"end": 1241,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1212,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1198,
											"end": 1241,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1276,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1263,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1277,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1328,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1320,
											"end": 1327,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1319,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1313,
											"end": 1328,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1328,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 1313,
											"end": 1328,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1301,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1309,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1310,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1328,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1377,
											"end": 1397,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1377,
											"end": 1397,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1365,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1366,
											"end": 1373,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1343,
											"end": 1374,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1343,
											"end": 1397,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1457,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1431,
											"end": 1438,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1412,
											"end": 1439,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1457,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1252,
											"end": 1469,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5101,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5097,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5091,
											"end": 5101,
											"modifierDepth": 3,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5083,
											"end": 5120,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 5083,
											"end": 5120,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5170,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5163,
											"end": 5169,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5158,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5146,
											"end": 5158,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5162,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5146,
											"end": 5162,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5170,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5170,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5170,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5146,
											"end": 5170,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5170,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5146,
											"end": 5170,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5146,
											"end": 5170,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5143,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5131,
											"end": 5170,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5170,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5170,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5170,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5226,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5219,
											"end": 5225,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5208,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5213,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5214,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5218,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5199,
											"end": 5218,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5226,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5226,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5226,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5199,
											"end": 5226,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5226,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5199,
											"end": 5226,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5199,
											"end": 5226,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5190,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5191,
											"end": 5195,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5196,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5226,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5226,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5226,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5226,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5253,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 5255,
											"end": 5261,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 5242,
											"end": 5262,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5242,
											"end": 5262,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1039,
											"end": 1488,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1751,
											"end": 1758,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1795,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1796,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1804,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2487,
											"end": 2518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2502,
											"end": 2517,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2501,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2487,
											"end": 2518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2518,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2487,
											"end": 2518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2518,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2480,
											"end": 2518,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3667,
											"end": 3674,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3712,
											"end": 3713,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3699,
											"end": 3708,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3713,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3738,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3699,
											"end": 3738,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3738,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3729,
											"end": 3738,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3725,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3738,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3717,
											"end": 3738,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3699,
											"end": 3738,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 3699,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3775,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3696,
											"end": 3775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3762,
											"end": 3763,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3755,
											"end": 3763,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3696,
											"end": 3775,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3696,
											"end": 3775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3810,
											"end": 3818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3807,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3798,
											"end": 3818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3798,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3798,
											"end": 3834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3885,
											"end": 3897,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3882,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3874,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3928,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3957,
											"end": 3969,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3957,
											"end": 3969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3944,
											"end": 3953,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3944,
											"end": 3953,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3941,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3938,
											"end": 3953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3938,
											"end": 3953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3937,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3937,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3931,
											"end": 3969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3931,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3931,
											"end": 3969,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3931,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3969,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3908,
											"end": 3969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 3998,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4043,
											"end": 4055,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4043,
											"end": 4055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4028,
											"end": 4040,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4016,
											"end": 4024,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4001,
											"end": 4025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4001,
											"end": 4025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4001,
											"end": 4040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4001,
											"end": 4040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4001,
											"end": 4055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4001,
											"end": 4055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4055,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4001,
											"end": 4055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3980,
											"end": 4055,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4118,
											"end": 4130,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4105,
											"end": 4114,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4102,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4093,
											"end": 4114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4093,
											"end": 4114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4092,
											"end": 4130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4092,
											"end": 4130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 4130,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4092,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4068,
											"end": 4130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4207,
											"end": 4219,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4204,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4178,
											"end": 4187,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4163,
											"end": 4188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4188,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4163,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4163,
											"end": 4204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4204,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4163,
											"end": 4204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4204,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4163,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4163,
											"end": 4219,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4163,
											"end": 4219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4163,
											"end": 4219,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4163,
											"end": 4219,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4219,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4300,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4346,
											"end": 4349,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4331,
											"end": 4343,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4328,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4303,
											"end": 4328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4303,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4303,
											"end": 4343,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4343,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4303,
											"end": 4343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4343,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4303,
											"end": 4343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4303,
											"end": 4349,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4349,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4303,
											"end": 4349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4303,
											"end": 4349,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4303,
											"end": 4349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4349,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4281,
											"end": 4349,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4379,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4403,
											"end": 4415,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4400,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4397,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4397,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4382,
											"end": 4416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4382,
											"end": 4416,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4382,
											"end": 4416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4416,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4360,
											"end": 4416,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4450,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4453,
											"end": 4464,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4464,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4496,
											"end": 4507,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4507,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4537,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4540,
											"end": 4574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4561,
											"end": 4573,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4558,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4555,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4554,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 4540,
											"end": 4574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4574,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4540,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4574,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4622,
											"end": 4634,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4622,
											"end": 4634,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4619,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4608,
											"end": 4634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4608,
											"end": 4634,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4604,
											"end": 4634,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4680,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4656,
											"end": 4680,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4798,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4775,
											"end": 4798,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4751,
											"end": 4772,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4751,
											"end": 4772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4737,
											"end": 4747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4734,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4723,
											"end": 4747,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4747,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4723,
											"end": 4747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4747,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4723,
											"end": 4747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4722,
											"end": 4772,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4772,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4722,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4772,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4722,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4722,
											"end": 4798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4722,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4722,
											"end": 4798,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4722,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4708,
											"end": 4798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4798,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4708,
											"end": 4798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4798,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4708,
											"end": 4798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4798,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4695,
											"end": 4798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4857,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4844,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4830,
											"end": 4857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4857,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4830,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4857,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4830,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4857,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4813,
											"end": 4857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4636,
											"end": 4639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4636,
											"end": 4639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4585,
											"end": 4869,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4945,
											"end": 4953,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4942,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 4933,
											"end": 4953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4933,
											"end": 4953,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4917,
											"end": 4928,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4904,
											"end": 4914,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4901,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4887,
											"end": 4914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4887,
											"end": 4914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4887,
											"end": 4928,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4928,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4887,
											"end": 4928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4887,
											"end": 4928,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4887,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4886,
											"end": 4954,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4954,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4954,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4886,
											"end": 4954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4886,
											"end": 4954,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4886,
											"end": 4954,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4879,
											"end": 4954,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 4962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 1315,
											"end": 1388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1418,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1399,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 3299,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3304,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3292,
											"end": 3304,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3214,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3656,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "tag",
											"source": 6,
											"value": "284"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3661,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3649,
											"end": 3661,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4055,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4060,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4048,
											"end": 4060,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2918,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "tag",
											"source": 6,
											"value": "288"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2911,
											"end": 2923,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 63,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1935,
											"end": 2403,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1935,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1995,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2031,
											"end": 2032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2018,
											"end": 2027,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2015,
											"end": 2077,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2056,
											"end": 2065,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2056,
											"end": 2065,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2049,
											"end": 2065,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2015,
											"end": 2077,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2015,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2140,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2124,
											"end": 2136,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2111,
											"end": 2120,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2108,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2104,
											"end": 2120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2104,
											"end": 2120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2103,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2103,
											"end": 2140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2103,
											"end": 2140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2087,
											"end": 2140,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2164,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2179,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2167,
											"end": 2179,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2210,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2209,
											"end": 2218,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2288,
											"end": 2311,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2288,
											"end": 2311,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2264,
											"end": 2285,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2256,
											"end": 2285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2256,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2256,
											"end": 2311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2256,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2311,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2256,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2248,
											"end": 2311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2248,
											"end": 2311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2311,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2248,
											"end": 2311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2311,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2311,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2220,
											"end": 2223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2372,
											"end": 2395,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2372,
											"end": 2395,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2348,
											"end": 2369,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2345,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2340,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2340,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2340,
											"end": 2395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2395,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2395,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2340,
											"end": 2395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2340,
											"end": 2395,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2340,
											"end": 2395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2395,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2403,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 1935,
											"end": 2403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2403,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2403,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2757,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 2534,
											"end": 2757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2594,
											"end": 2601,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2614,
											"end": 2635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2653,
											"end": 2657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2638,
											"end": 2658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2638,
											"end": 2658,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2638,
											"end": 2658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2614,
											"end": 2658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2690,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2708,
											"end": 2720,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2708,
											"end": 2720,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2703,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2690,
											"end": 2707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2721,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2690,
											"end": 2721,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2721,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2690,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2739,
											"end": 2749,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2749,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2732,
											"end": 2749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2757,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "349"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "352"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "313"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "354"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "357"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "356"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "358"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "361"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "41"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "tag",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1645,
											"end": 1652,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1693,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1681,
											"end": 1694,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1663,
											"end": 1695,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "tag",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1792,
											"end": 1797,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 1777,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "366"
										},
										{
											"begin": 1777,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1770,
											"end": 1775,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1767,
											"end": 1799,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "tag",
											"source": 7,
											"value": "367"
										},
										{
											"begin": 1757,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1823,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1707,
											"end": 1823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "tag",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1872,
											"end": 1877,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1910,
											"end": 1916,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 1917,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1888,
											"end": 1917,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1950,
											"end": 1955,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 1926,
											"end": 1956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 1926,
											"end": 1956,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1829,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2047,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2090,
											"end": 2092,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2078,
											"end": 2087,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2065,
											"end": 2088,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2061,
											"end": 2093,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 2096,
											"end": 2175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "tag",
											"source": 7,
											"value": "372"
										},
										{
											"begin": 2096,
											"end": 2175,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "tag",
											"source": 7,
											"value": "371"
										},
										{
											"begin": 2058,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 2286,
											"end": 2293,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2277,
											"end": 2283,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2266,
											"end": 2275,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2262,
											"end": 2284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 2241,
											"end": 2294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "tag",
											"source": 7,
											"value": "373"
										},
										{
											"begin": 2241,
											"end": 2294,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2231,
											"end": 2294,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2187,
											"end": 2304,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2343,
											"end": 2345,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2411,
											"end": 2418,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2402,
											"end": 2408,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2391,
											"end": 2400,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2387,
											"end": 2409,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "319"
										},
										{
											"begin": 2369,
											"end": 2419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "tag",
											"source": 7,
											"value": "374"
										},
										{
											"begin": 2369,
											"end": 2419,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2419,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2314,
											"end": 2429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1968,
											"end": 2436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "tag",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 2538,
											"end": 2543,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "317"
										},
										{
											"begin": 2523,
											"end": 2544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "tag",
											"source": 7,
											"value": "376"
										},
										{
											"begin": 2523,
											"end": 2544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2518,
											"end": 2521,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2545,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2442,
											"end": 2551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "tag",
											"source": 7,
											"value": "57"
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2644,
											"end": 2648,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2682,
											"end": 2684,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2680,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2667,
											"end": 2685,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2659,
											"end": 2685,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 2757,
											"end": 2758,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2755,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2742,
											"end": 2759,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2733,
											"end": 2739,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 2695,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "tag",
											"source": 7,
											"value": "378"
										},
										{
											"begin": 2695,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2557,
											"end": 2767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 2864,
											"end": 2869,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 2846,
											"end": 2870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "tag",
											"source": 7,
											"value": "380"
										},
										{
											"begin": 2846,
											"end": 2870,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2839,
											"end": 2844,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2836,
											"end": 2871,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2885,
											"end": 2886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2883,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2875,
											"end": 2887,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "tag",
											"source": 7,
											"value": "381"
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2773,
											"end": 2895,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2947,
											"end": 2952,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2985,
											"end": 2991,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2972,
											"end": 2992,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 2992,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 3028,
											"end": 3033,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 3001,
											"end": 3034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "tag",
											"source": 7,
											"value": "383"
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2901,
											"end": 3040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3105,
											"end": 3111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3156,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3142,
											"end": 3151,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3133,
											"end": 3140,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3152,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3125,
											"end": 3157,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3160,
											"end": 3239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "tag",
											"source": 7,
											"value": "386"
										},
										{
											"begin": 3160,
											"end": 3239,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 3122,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3280,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 3350,
											"end": 3357,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3341,
											"end": 3347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3330,
											"end": 3339,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3326,
											"end": 3348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 3305,
											"end": 3358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 3305,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3295,
											"end": 3358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3251,
											"end": 3368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3046,
											"end": 3375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 3486,
											"end": 3491,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "312"
										},
										{
											"begin": 3468,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 3468,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3463,
											"end": 3466,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3456,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3381,
											"end": 3499,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "tag",
											"source": 7,
											"value": "99"
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3598,
											"end": 3602,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3638,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3625,
											"end": 3634,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3621,
											"end": 3639,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3613,
											"end": 3639,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3717,
											"end": 3718,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3706,
											"end": 3715,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3702,
											"end": 3719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 3649,
											"end": 3720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 3649,
											"end": 3720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3505,
											"end": 3727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3801,
											"end": 3807,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3858,
											"end": 3860,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3855,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3837,
											"end": 3844,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3833,
											"end": 3856,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3861,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3864,
											"end": 3943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3864,
											"end": 3943,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 3826,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3984,
											"end": 3985,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 4054,
											"end": 4061,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4045,
											"end": 4051,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4034,
											"end": 4043,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4030,
											"end": 4052,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 4009,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 4009,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4062,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3999,
											"end": 4062,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 4072,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4111,
											"end": 4113,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4182,
											"end": 4189,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4173,
											"end": 4179,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4162,
											"end": 4171,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4180,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 4137,
											"end": 4190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 4137,
											"end": 4190,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4127,
											"end": 4190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4082,
											"end": 4200,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 4207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4241,
											"end": 4244,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4267,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4255,
											"end": 4267,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4213,
											"end": 4273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "tag",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4329,
											"end": 4338,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 4407,
											"end": 4412,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4389,
											"end": 4413,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 4389,
											"end": 4413,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 4380,
											"end": 4414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 4380,
											"end": 4414,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4362,
											"end": 4415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 4362,
											"end": 4415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4415,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4349,
											"end": 4415,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4279,
											"end": 4421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "tag",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4477,
											"end": 4486,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4541,
											"end": 4546,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "325"
										},
										{
											"begin": 4510,
											"end": 4547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 4510,
											"end": 4547,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4547,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4497,
											"end": 4547,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4427,
											"end": 4553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4699,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4559,
											"end": 4699,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4623,
											"end": 4632,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4656,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4687,
											"end": 4692,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "326"
										},
										{
											"begin": 4656,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4656,
											"end": 4693,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 4656,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4643,
											"end": 4693,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4643,
											"end": 4693,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4699,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4699,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4699,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4559,
											"end": 4699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 4864,
											"name": "tag",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 4705,
											"end": 4864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 4851,
											"end": 4856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 4806,
											"end": 4857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4806,
											"end": 4857,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 4806,
											"end": 4857,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4801,
											"end": 4804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4794,
											"end": 4858,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 4864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 4864,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4705,
											"end": 4864,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 5120,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 4870,
											"end": 5120,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4977,
											"end": 4981,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5015,
											"end": 5017,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5004,
											"end": 5013,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5000,
											"end": 5018,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 5018,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 5018,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 5110,
											"end": 5111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5099,
											"end": 5108,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5112,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5086,
											"end": 5092,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "328"
										},
										{
											"begin": 5028,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5028,
											"end": 5113,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 5028,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 5120,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 5120,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 5120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 5120,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4870,
											"end": 5120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5600,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 5126,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5194,
											"end": 5200,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5202,
											"end": 5208,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5251,
											"end": 5253,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5226,
											"end": 5249,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5222,
											"end": 5254,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5338,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 5219,
											"end": 5338,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 5257,
											"end": 5336,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 5257,
											"end": 5336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5257,
											"end": 5336,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 5257,
											"end": 5336,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5219,
											"end": 5338,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 5219,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5377,
											"end": 5378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 5447,
											"end": 5454,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5438,
											"end": 5444,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5427,
											"end": 5436,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5423,
											"end": 5445,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5402,
											"end": 5455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 5402,
											"end": 5455,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5455,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5392,
											"end": 5455,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5348,
											"end": 5465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5504,
											"end": 5506,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5530,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 5575,
											"end": 5582,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5566,
											"end": 5572,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5555,
											"end": 5564,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 5551,
											"end": 5573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5583,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 5530,
											"end": 5583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5530,
											"end": 5583,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 5530,
											"end": 5583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5520,
											"end": 5583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5475,
											"end": 5593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5600,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5600,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5600,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5126,
											"end": 5600,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "tag",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5690,
											"end": 5701,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5724,
											"end": 5730,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5719,
											"end": 5722,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5712,
											"end": 5731,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5764,
											"end": 5768,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5759,
											"end": 5762,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5755,
											"end": 5769,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5740,
											"end": 5769,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5775,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 6002,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 5781,
											"end": 6002,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5921,
											"end": 5955,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E"
										},
										{
											"begin": 5917,
											"end": 5918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5909,
											"end": 5915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5905,
											"end": 5919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5898,
											"end": 5956,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5990,
											"end": 5994,
											"name": "PUSH",
											"source": 7,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5985,
											"end": 5987,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5977,
											"end": 5983,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 5988,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5966,
											"end": 5995,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 6002,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5781,
											"end": 6002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6374,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6008,
											"end": 6374,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6235,
											"end": 6237,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6230,
											"end": 6233,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6171,
											"end": 6238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 6171,
											"end": 6238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6171,
											"end": 6238,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 6171,
											"end": 6238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6238,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6164,
											"end": 6238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6340,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 6247,
											"end": 6340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6247,
											"end": 6340,
											"name": "tag",
											"source": 7,
											"value": "419"
										},
										{
											"begin": 6247,
											"end": 6340,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6365,
											"end": 6367,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6360,
											"end": 6363,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6356,
											"end": 6368,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6374,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6374,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6008,
											"end": 6374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6380,
											"end": 6799,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 6380,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6546,
											"end": 6550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6584,
											"end": 6586,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6587,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6561,
											"end": 6587,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6633,
											"end": 6642,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6627,
											"end": 6631,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6623,
											"end": 6643,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6619,
											"end": 6620,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6608,
											"end": 6617,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6604,
											"end": 6621,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6597,
											"end": 6644,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 6787,
											"end": 6791,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 6661,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6661,
											"end": 6792,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 6661,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6792,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6653,
											"end": 6792,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6380,
											"end": 6799,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6380,
											"end": 6799,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6380,
											"end": 6799,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6380,
											"end": 6799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7113,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 6805,
											"end": 7113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6914,
											"end": 6918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6952,
											"end": 6954,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6941,
											"end": 6950,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6937,
											"end": 6955,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 6955,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6929,
											"end": 6955,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6965,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7016,
											"end": 7025,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7012,
											"end": 7029,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7003,
											"end": 7009,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6965,
											"end": 7030,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 6965,
											"end": 7030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6965,
											"end": 7030,
											"name": "tag",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 6965,
											"end": 7030,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 7102,
											"end": 7104,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7091,
											"end": 7100,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7087,
											"end": 7105,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7078,
											"end": 7084,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7106,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "320"
										},
										{
											"begin": 7040,
											"end": 7106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7040,
											"end": 7106,
											"name": "tag",
											"source": 7,
											"value": "424"
										},
										{
											"begin": 7040,
											"end": 7106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7113,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7113,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7113,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6805,
											"end": 7113,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7300,
											"name": "tag",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7119,
											"end": 7300,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7259,
											"end": 7292,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7255,
											"end": 7256,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7243,
											"end": 7257,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7236,
											"end": 7293,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7300,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7119,
											"end": 7300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7672,
											"name": "tag",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7306,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7448,
											"end": 7451,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 7528,
											"end": 7531,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 7469,
											"end": 7536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7469,
											"end": 7536,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 7469,
											"end": 7536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7462,
											"end": 7536,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7462,
											"end": 7536,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 7634,
											"end": 7637,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7638,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "332"
										},
										{
											"begin": 7545,
											"end": 7638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7545,
											"end": 7638,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 7545,
											"end": 7638,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7663,
											"end": 7665,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7658,
											"end": 7661,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7654,
											"end": 7666,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7647,
											"end": 7666,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7647,
											"end": 7666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7672,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7672,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7672,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7306,
											"end": 7672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 8097,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 7678,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7844,
											"end": 7848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7882,
											"end": 7884,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7871,
											"end": 7880,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7867,
											"end": 7885,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7885,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7859,
											"end": 7885,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7931,
											"end": 7940,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7925,
											"end": 7929,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7921,
											"end": 7941,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7917,
											"end": 7918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7902,
											"end": 7919,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7895,
											"end": 7942,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 8085,
											"end": 8089,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 8090,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "333"
										},
										{
											"begin": 7959,
											"end": 8090,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7959,
											"end": 8090,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 7959,
											"end": 8090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 8090,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7951,
											"end": 8090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 8097,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 8097,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 8097,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7678,
											"end": 8097,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8435,
											"name": "tag",
											"source": 7,
											"value": "167"
										},
										{
											"begin": 8103,
											"end": 8435,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8224,
											"end": 8228,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8262,
											"end": 8264,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8251,
											"end": 8260,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8247,
											"end": 8265,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8239,
											"end": 8265,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 8343,
											"end": 8344,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8332,
											"end": 8341,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8328,
											"end": 8345,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8319,
											"end": 8325,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 8275,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 8275,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 8424,
											"end": 8426,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8413,
											"end": 8422,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8409,
											"end": 8427,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8400,
											"end": 8406,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8428,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 8356,
											"end": 8428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8356,
											"end": 8428,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 8356,
											"end": 8428,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8435,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8435,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8435,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8103,
											"end": 8435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8441,
											"end": 8578,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 8441,
											"end": 8578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8495,
											"end": 8500,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8526,
											"end": 8532,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8520,
											"end": 8533,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8511,
											"end": 8533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8542,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8542,
											"end": 8572,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "318"
										},
										{
											"begin": 8542,
											"end": 8572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8542,
											"end": 8572,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 8542,
											"end": 8572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8441,
											"end": 8578,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8441,
											"end": 8578,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8441,
											"end": 8578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8441,
											"end": 8578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8441,
											"end": 8578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8929,
											"name": "tag",
											"source": 7,
											"value": "171"
										},
										{
											"begin": 8584,
											"end": 8929,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8651,
											"end": 8657,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8700,
											"end": 8702,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8688,
											"end": 8697,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8679,
											"end": 8686,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8675,
											"end": 8698,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8671,
											"end": 8703,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 8706,
											"end": 8785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 8706,
											"end": 8785,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 8668,
											"end": 8787,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8826,
											"end": 8827,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8851,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 8904,
											"end": 8911,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8901,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8884,
											"end": 8893,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8880,
											"end": 8902,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8912,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 8851,
											"end": 8912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8851,
											"end": 8912,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 8851,
											"end": 8912,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 8912,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8841,
											"end": 8912,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8797,
											"end": 8922,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8929,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8929,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8929,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8584,
											"end": 8929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8935,
											"end": 9156,
											"name": "tag",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 8935,
											"end": 9156,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9075,
											"end": 9109,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D"
										},
										{
											"begin": 9071,
											"end": 9072,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9063,
											"end": 9069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9059,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9052,
											"end": 9110,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9144,
											"end": 9148,
											"name": "PUSH",
											"source": 7,
											"value": "696E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9139,
											"end": 9141,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9131,
											"end": 9137,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9127,
											"end": 9142,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9120,
											"end": 9149,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8935,
											"end": 9156,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8935,
											"end": 9156,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9528,
											"name": "tag",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 9162,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9304,
											"end": 9307,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9325,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 9389,
											"end": 9391,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 9384,
											"end": 9387,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 9325,
											"end": 9392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9325,
											"end": 9392,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 9325,
											"end": 9392,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9392,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9318,
											"end": 9392,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9401,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 9490,
											"end": 9493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9401,
											"end": 9494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "335"
										},
										{
											"begin": 9401,
											"end": 9494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9401,
											"end": 9494,
											"name": "tag",
											"source": 7,
											"value": "443"
										},
										{
											"begin": 9401,
											"end": 9494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9519,
											"end": 9521,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9514,
											"end": 9517,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9522,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9503,
											"end": 9522,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9528,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9528,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9528,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9162,
											"end": 9528,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9953,
											"name": "tag",
											"source": 7,
											"value": "178"
										},
										{
											"begin": 9534,
											"end": 9953,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9700,
											"end": 9704,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9738,
											"end": 9740,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9727,
											"end": 9736,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9723,
											"end": 9741,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9715,
											"end": 9741,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9715,
											"end": 9741,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9787,
											"end": 9796,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9781,
											"end": 9785,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9777,
											"end": 9797,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9773,
											"end": 9774,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9771,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9758,
											"end": 9775,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9751,
											"end": 9798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 9941,
											"end": 9945,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9946,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "336"
										},
										{
											"begin": 9815,
											"end": 9946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9815,
											"end": 9946,
											"name": "tag",
											"source": 7,
											"value": "445"
										},
										{
											"begin": 9815,
											"end": 9946,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9807,
											"end": 9946,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9807,
											"end": 9946,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9953,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9534,
											"end": 9953,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 10123,
											"name": "tag",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 9959,
											"end": 10123,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10099,
											"end": 10115,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 10095,
											"end": 10096,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10087,
											"end": 10093,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10083,
											"end": 10097,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10076,
											"end": 10116,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 10123,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9959,
											"end": 10123,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10495,
											"name": "tag",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10129,
											"end": 10495,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10271,
											"end": 10274,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10292,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 10356,
											"end": 10358,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 10351,
											"end": 10354,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 10292,
											"end": 10359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10292,
											"end": 10359,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 10292,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10359,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10285,
											"end": 10359,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 10457,
											"end": 10460,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10461,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "337"
										},
										{
											"begin": 10368,
											"end": 10461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10368,
											"end": 10461,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 10368,
											"end": 10461,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10486,
											"end": 10488,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10481,
											"end": 10484,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10477,
											"end": 10489,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10489,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10470,
											"end": 10489,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10495,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10495,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10495,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10129,
											"end": 10495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10920,
											"name": "tag",
											"source": 7,
											"value": "219"
										},
										{
											"begin": 10501,
											"end": 10920,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10667,
											"end": 10671,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10705,
											"end": 10707,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10694,
											"end": 10703,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10690,
											"end": 10708,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10682,
											"end": 10708,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10682,
											"end": 10708,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10754,
											"end": 10763,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10748,
											"end": 10752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10744,
											"end": 10764,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10740,
											"end": 10741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10729,
											"end": 10738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10725,
											"end": 10742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10718,
											"end": 10765,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10782,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 10908,
											"end": 10912,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10782,
											"end": 10913,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "338"
										},
										{
											"begin": 10782,
											"end": 10913,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10782,
											"end": 10913,
											"name": "tag",
											"source": 7,
											"value": "451"
										},
										{
											"begin": 10782,
											"end": 10913,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10913,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10774,
											"end": 10913,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10920,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10920,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10920,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10501,
											"end": 10920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10926,
											"end": 11106,
											"name": "tag",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 10926,
											"end": 11106,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10974,
											"end": 11051,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10971,
											"end": 10972,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10964,
											"end": 11052,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11071,
											"end": 11075,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 11068,
											"end": 11069,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11061,
											"end": 11076,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11095,
											"end": 11099,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11085,
											"end": 11100,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11306,
											"name": "tag",
											"source": 7,
											"value": "231"
										},
										{
											"begin": 11112,
											"end": 11306,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11152,
											"end": 11156,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11172,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 11190,
											"end": 11191,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11172,
											"end": 11192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11172,
											"end": 11192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11172,
											"end": 11192,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 11172,
											"end": 11192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11192,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11167,
											"end": 11192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 11224,
											"end": 11225,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11226,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11206,
											"end": 11226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11206,
											"end": 11226,
											"name": "tag",
											"source": 7,
											"value": "455"
										},
										{
											"begin": 11206,
											"end": 11226,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11201,
											"end": 11226,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11201,
											"end": 11226,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11250,
											"end": 11251,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11248,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11243,
											"end": 11252,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11252,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11235,
											"end": 11252,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11274,
											"end": 11275,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11268,
											"end": 11272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11265,
											"end": 11276,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11262,
											"end": 11299,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11262,
											"end": 11299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 11262,
											"end": 11299,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 11279,
											"end": 11297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "tag",
											"source": 7,
											"value": "457"
										},
										{
											"begin": 11279,
											"end": 11297,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11262,
											"end": 11299,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 11262,
											"end": 11299,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11306,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11306,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11306,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11112,
											"end": 11306,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11503,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 11312,
											"end": 11503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11355,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11371,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 11389,
											"end": 11390,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11391,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11371,
											"end": 11391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11371,
											"end": 11391,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 11371,
											"end": 11391,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11391,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11366,
											"end": 11391,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 11423,
											"end": 11424,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11425,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11405,
											"end": 11425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11405,
											"end": 11425,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 11405,
											"end": 11425,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11400,
											"end": 11425,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11400,
											"end": 11425,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11448,
											"end": 11449,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11446,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11441,
											"end": 11450,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11434,
											"end": 11450,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11434,
											"end": 11450,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11469,
											"end": 11472,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11466,
											"end": 11467,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11463,
											"end": 11473,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 11476,
											"end": 11494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "tag",
											"source": 7,
											"value": "462"
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 11460,
											"end": 11496,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11503,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11312,
											"end": 11503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11509,
											"end": 11689,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 11509,
											"end": 11689,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11557,
											"end": 11634,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11547,
											"end": 11635,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11654,
											"end": 11658,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11651,
											"end": 11652,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11644,
											"end": 11659,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11678,
											"end": 11682,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11675,
											"end": 11676,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11668,
											"end": 11683,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11871,
											"name": "tag",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 11695,
											"end": 11871,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11727,
											"end": 11728,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11744,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 11762,
											"end": 11763,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11744,
											"end": 11764,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11744,
											"end": 11764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11744,
											"end": 11764,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 11744,
											"end": 11764,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11739,
											"end": 11764,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11739,
											"end": 11764,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 11796,
											"end": 11797,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11778,
											"end": 11798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11778,
											"end": 11798,
											"name": "tag",
											"source": 7,
											"value": "466"
										},
										{
											"begin": 11778,
											"end": 11798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11773,
											"end": 11798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11773,
											"end": 11798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11817,
											"end": 11818,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11807,
											"end": 11842,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 11807,
											"end": 11842,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 11822,
											"end": 11840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 11822,
											"end": 11840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11807,
											"end": 11842,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 11807,
											"end": 11842,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11860,
											"end": 11861,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11865,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11851,
											"end": 11865,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11871,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11871,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11871,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11695,
											"end": 11871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12287,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 11877,
											"end": 12287,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11917,
											"end": 11924,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11940,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 11958,
											"end": 11959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 11960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11940,
											"end": 11960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11940,
											"end": 11960,
											"name": "tag",
											"source": 7,
											"value": "470"
										},
										{
											"begin": 11940,
											"end": 11960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11960,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11935,
											"end": 11960,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 11992,
											"end": 11993,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 11994,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 11974,
											"end": 11994,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11974,
											"end": 11994,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 11974,
											"end": 11994,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11969,
											"end": 11994,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11969,
											"end": 11994,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12029,
											"end": 12030,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12026,
											"end": 12027,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12022,
											"end": 12031,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 12051,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 12069,
											"end": 12080,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12051,
											"end": 12081,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 12051,
											"end": 12081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12051,
											"end": 12081,
											"name": "tag",
											"source": 7,
											"value": "472"
										},
										{
											"begin": 12051,
											"end": 12081,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12040,
											"end": 12081,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12040,
											"end": 12081,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12230,
											"end": 12231,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12221,
											"end": 12228,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12217,
											"end": 12232,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12214,
											"end": 12215,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 12211,
											"end": 12233,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 12191,
											"end": 12192,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12184,
											"end": 12193,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 12164,
											"end": 12247,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12280,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 12141,
											"end": 12280,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 12260,
											"end": 12278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "tag",
											"source": 7,
											"value": "474"
										},
										{
											"begin": 12260,
											"end": 12278,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12141,
											"end": 12280,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 12141,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11925,
											"end": 12287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12287,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12287,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12287,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11877,
											"end": 12287,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12478,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 12293,
											"end": 12478,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12333,
											"end": 12334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12350,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 12368,
											"end": 12369,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12350,
											"end": 12370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 12350,
											"end": 12370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12350,
											"end": 12370,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 12350,
											"end": 12370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12370,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12345,
											"end": 12370,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12384,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 12402,
											"end": 12403,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12384,
											"end": 12404,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 12384,
											"end": 12404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12384,
											"end": 12404,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 12384,
											"end": 12404,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12404,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12379,
											"end": 12404,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12423,
											"end": 12424,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12413,
											"end": 12448,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 12413,
											"end": 12448,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 12428,
											"end": 12446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "tag",
											"source": 7,
											"value": "479"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12413,
											"end": 12448,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 12413,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12470,
											"end": 12471,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12467,
											"end": 12468,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12463,
											"end": 12472,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 12458,
											"end": 12472,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12458,
											"end": 12472,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12478,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12478,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12478,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12293,
											"end": 12478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12484,
											"end": 12717,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 12484,
											"end": 12717,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12523,
											"end": 12526,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12546,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 12564,
											"end": 12569,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "315"
										},
										{
											"begin": 12546,
											"end": 12570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12546,
											"end": 12570,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 12546,
											"end": 12570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12570,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12570,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12592,
											"end": 12658,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12585,
											"end": 12590,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12582,
											"end": 12659,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12682,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 12579,
											"end": 12682,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "339"
										},
										{
											"begin": 12662,
											"end": 12680,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 12662,
											"end": 12680,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12579,
											"end": 12682,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 12579,
											"end": 12682,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12709,
											"end": 12710,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12702,
											"end": 12707,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12698,
											"end": 12711,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12711,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12691,
											"end": 12711,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12484,
											"end": 12717,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12484,
											"end": 12717,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12484,
											"end": 12717,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12484,
											"end": 12717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12723,
											"end": 12948,
											"name": "tag",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 12723,
											"end": 12948,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12863,
											"end": 12897,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 12859,
											"end": 12860,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12851,
											"end": 12857,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12847,
											"end": 12861,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12840,
											"end": 12898,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12932,
											"end": 12940,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12927,
											"end": 12929,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12919,
											"end": 12925,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12915,
											"end": 12930,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12908,
											"end": 12941,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12723,
											"end": 12948,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12723,
											"end": 12948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12954,
											"end": 13320,
											"name": "tag",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 12954,
											"end": 13320,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13096,
											"end": 13099,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13117,
											"end": 13184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 13181,
											"end": 13183,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13176,
											"end": 13179,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13117,
											"end": 13184,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "329"
										},
										{
											"begin": 13117,
											"end": 13184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13117,
											"end": 13184,
											"name": "tag",
											"source": 7,
											"value": "486"
										},
										{
											"begin": 13117,
											"end": 13184,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13110,
											"end": 13184,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13110,
											"end": 13184,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13193,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 13282,
											"end": 13285,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13193,
											"end": 13286,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "341"
										},
										{
											"begin": 13193,
											"end": 13286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13193,
											"end": 13286,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 13193,
											"end": 13286,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13311,
											"end": 13313,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13306,
											"end": 13309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13302,
											"end": 13314,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13295,
											"end": 13314,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13295,
											"end": 13314,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12954,
											"end": 13320,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12954,
											"end": 13320,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12954,
											"end": 13320,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12954,
											"end": 13320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13326,
											"end": 13745,
											"name": "tag",
											"source": 7,
											"value": "279"
										},
										{
											"begin": 13326,
											"end": 13745,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13492,
											"end": 13496,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13530,
											"end": 13532,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13519,
											"end": 13528,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13515,
											"end": 13533,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13507,
											"end": 13533,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13507,
											"end": 13533,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13579,
											"end": 13588,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13573,
											"end": 13577,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13569,
											"end": 13589,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 13565,
											"end": 13566,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13554,
											"end": 13563,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13550,
											"end": 13567,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13543,
											"end": 13590,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13607,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 13733,
											"end": 13737,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13607,
											"end": 13738,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "342"
										},
										{
											"begin": 13607,
											"end": 13738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13607,
											"end": 13738,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 13607,
											"end": 13738,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13599,
											"end": 13738,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13599,
											"end": 13738,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13326,
											"end": 13745,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13326,
											"end": 13745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13326,
											"end": 13745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13326,
											"end": 13745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"earned(address)": "008cc262",
							"getCurRewardPool()": "9499c549",
							"getCurRewardRate()": "cdda56e0",
							"getReward()": "3d18b912",
							"getTimeWeightedAveRate(uint256,uint256)": "da4f8431",
							"isAdmin(address)": "24d7806c",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"powersOf(address)": "b79ec812",
							"rateInterval()": "6139d4b4",
							"rateIntervalDenominator()": "7a6fcee7",
							"rateIntervalNumerator()": "3c4045cf",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setStartTime(uint256)": "3e0a322d",
							"stake(address,uint256)": "adc9772e",
							"startTime()": "78e97925",
							"totalPowers()": "6917c501",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"userLastUpdateTime(address)": "8107368b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightTime\",\"type\":\"uint256\"}],\"name\":\"getTimeWeightedAveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"powersOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/stake.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0xa962465a33722578ec855af2fc2f6e89ab6a5fab1c03f991ccea2848244d5252\",\"urls\":[\"bzz-raw://962df263bfb3e5831fd5458e8104bf519608db49afdd56e185a2e08c560c37e6\",\"dweb:/ipfs/QmNPvxQ4fivsRveugzyx7Qn6yGJeWjpT1NaY8pVaCmVhJo\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 774,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 191,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)881"
							},
							{
								"astId": 195,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 202,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "totalRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 204,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "startTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 207,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateInterval",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 210,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalNumerator",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 213,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalDenominator",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 217,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 221,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 225,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userLastUpdateTime",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 227,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_totalPowers",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 231,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)881": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 774,
								"contract": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x31DA5E5A247088C9AF3ED5ADB1CE3DE9BAA75769 0xBB BALANCE 0xAF 0xC7 PUSH4 0x7D356F16 0xC3 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH20 0x31DA5E5A247088C9AF3ED5ADB1CE3DE9BAA75769 0xBB BALANCE 0xAF 0xC7 PUSH4 0x7D356F16 0xC3 0x4C PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207331da5e5a247088c9af3ed5adb1ce3de9baa75769bb31afc7637d356f16c34c64736f6c63430008110033",
									".code": [
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH26 0xE244ACFE816093E1847A0FD8FE1C3CE565CAAEB547A8C8DAB803 DUP6 0xB8 REVERT 0xDB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE1 PUSH26 0xE244ACFE816093E1847A0FD8FE1C3CE565CAAEB547A8C8DAB803 DUP6 0xB8 REVERT 0xDB PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e179e244acfe816093e1847a0fd8fe1c3ce565caaeb547a8c8dab80385b8fddb64736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH24 0x4D5BF876B18936949106003822D6683A7B19BD496B37DF8B PUSH23 0x4B85C99AE464736F6C6343000811003300000000000000 ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 AND PUSH24 0x4D5BF876B18936949106003822D6683A7B19BD496B37DF8B PUSH23 0x4B85C99AE464736F6C6343000811003300000000000000 ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122016774d5bf876b18936949106003822d6683a7b19bd496b37df8b764b85c99ae464736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/adminable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/adminable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/stake.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/stake.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"inviter_presell/adminable.sol": {
				"ast": {
					"absolutePath": "inviter_presell/adminable.sol",
					"exportedSymbols": {
						"Adminable": [
							175
						],
						"Context": [
							20
						]
					},
					"id": 176,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "48:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "125:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "147:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "136:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "72:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:9:0"
									},
									"scope": 20,
									"src": "63:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "236:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "258:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "254:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "247:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "178:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "220:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:0"
									},
									"scope": 20,
									"src": "169:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 176,
							"src": "30:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "Context",
										"nameLocations": [
											"310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "310:7:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:0"
								}
							],
							"canonicalName": "Adminable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								20
							],
							"name": "Adminable",
							"nameLocation": "297:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "358:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "325:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "388:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "372:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "409:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "446:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "430:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "461:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "403:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854",
									"id": 42,
									"name": "ModificationAdmin",
									"nameLocation": "499:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "517:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:53:0"
									},
									"src": "493:77:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "592:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 46,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "603:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "603:32:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 175,
									"src": "578:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "672:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "702:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "691:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															},
															"value": "Adminable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "683:70:0"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "764:1:0"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"src": "651:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "802:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 68,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "829:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 67,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d696e",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															},
															"value": "Adminable: caller is not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "813:68:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAdmin",
									"nameLocation": "790:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "781:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "964:32:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "975:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "918:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:0"
									},
									"scope": 175,
									"src": "909:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1073:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1084:23:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1013:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 175,
									"src": "1004:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1188:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 99,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"1167:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1167:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 175,
									"src": "1123:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1304:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1335:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1315:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1399:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1243:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 175,
									"src": "1234:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1506:128:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:25:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1553:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1581:45:0"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:18:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:0"
									},
									"scope": 175,
									"src": "1443:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1721:105:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 161,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 163,
															"indexExpression": {
																"id": 162,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 164,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "ModificationAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1732:53:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 167,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1796:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1813:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1796:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1796:22:0"
											}
										]
									},
									"functionSelector": "18e20ecf",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 156,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:0"
										}
									],
									"name": "modificationAdmin",
									"nameLocation": "1651:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:27:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 175,
									"src": "1642:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "279:1550:0",
							"usedErrors": []
						}
					],
					"src": "2:1829:0"
				},
				"id": 0
			},
			"inviter_presell/stake.sol": {
				"ast": {
					"absolutePath": "inviter_presell/stake.sol",
					"exportedSymbols": {
						"Address": [
							1402
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							881
						],
						"ReentrancyGuard": [
							803
						],
						"SafeERC20": [
							1105
						],
						"SafeMath": [
							1714
						],
						"StakingRewards": [
							763
						]
					},
					"id": 764,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "inviter_presell/adminable.sol",
							"file": "./adminable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 176,
							"src": "30:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 1715,
							"src": "57:73:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 1106,
							"src": "132:81:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 764,
							"sourceUnit": 804,
							"src": "215:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 182,
										"name": "Adminable",
										"nameLocations": [
											"324:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "324:9:1"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "324:9:1"
								},
								{
									"baseName": {
										"id": 184,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"336:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 803,
										"src": "336:15:1"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "336:15:1"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 763,
							"linearizedBaseContracts": [
								763,
								803,
								175,
								20
							],
							"name": "StakingRewards",
							"nameLocation": "306:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 188,
									"libraryName": {
										"id": 186,
										"name": "SafeMath",
										"nameLocations": [
											"364:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1714,
										"src": "364:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "358:27:1",
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 191,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "407:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "393:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$881",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 190,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 189,
											"name": "IERC20",
											"nameLocations": [
												"393:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 881,
											"src": "393:6:1"
										},
										"referencedDeclaration": 881,
										"src": "393:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$881",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 195,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "461:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "426:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 194,
										"keyType": {
											"id": 192,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "434:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "426:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 193,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "445:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 202,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "492:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "477:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "477:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_400000000000000000000_by_1",
											"typeString": "int_const 400000000000000000000"
										},
										"id": 201,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "343030",
											"id": 197,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "507:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_400_by_1",
												"typeString": "int_const 400"
											},
											"value": "400"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 200,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 198,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "513:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "519:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "513:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "507:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400000000000000000000_by_1",
											"typeString": "int_const 400000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 204,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "543:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "528:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "528:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6139d4b4",
									"id": 207,
									"mutability": "mutable",
									"name": "rateInterval",
									"nameLocation": "574:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "559:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "589:6:1",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c4045cf",
									"id": 210,
									"mutability": "mutable",
									"name": "rateIntervalNumerator",
									"nameLocation": "617:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "602:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "641:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a6fcee7",
									"id": 213,
									"mutability": "mutable",
									"name": "rateIntervalDenominator",
									"nameLocation": "664:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "649:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 211,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "649:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "690:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 215,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "716:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "701:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 214,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 217,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "752:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "737:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "737:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 221,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "816:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "781:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 220,
										"keyType": {
											"id": 218,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "789:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "781:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 219,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8107368b",
									"id": 225,
									"mutability": "mutable",
									"name": "userLastUpdateTime",
									"nameLocation": "880:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "845:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 224,
										"keyType": {
											"id": 222,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "853:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "845:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 223,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "864:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 227,
									"mutability": "mutable",
									"name": "_totalPowers",
									"nameLocation": "923:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "907:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "907:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "978:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 763,
									"src": "942:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 230,
										"keyType": {
											"id": 228,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "950:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "942:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 229,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 286,
										"nodeType": "Block",
										"src": "1039:449:1",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1058:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 286,
														"src": "1050:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1050:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 244,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 238,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "1088:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 240,
															"indexExpression": {
																"id": 239,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "1107:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1088:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 241,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1117:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1123:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1117:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 237,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "1065:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1065:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1050:83:1"
											},
											{
												"expression": {
													"id": 249,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 245,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1144:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 247,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 236,
																"src": "1182:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 246,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "1167:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1167:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1144:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 250,
												"nodeType": "ExpressionStatement",
												"src": "1144:43:1"
											},
											{
												"expression": {
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "1198:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 252,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 431,
															"src": "1215:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1215:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1198:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 255,
												"nodeType": "ExpressionStatement",
												"src": "1198:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 256,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1256:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1275:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1267:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 257,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1267:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 260,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1267:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1256:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 284,
												"nodeType": "IfStatement",
												"src": "1252:217:1",
												"trueBody": {
													"id": 283,
													"nodeType": "Block",
													"src": "1279:190:1",
													"statements": [
														{
															"expression": {
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 262,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "1294:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 264,
																	"indexExpression": {
																		"id": 263,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "1302:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1294:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 266,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "1320:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 265,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 504,
																		"src": "1313:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1313:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1294:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 269,
															"nodeType": "ExpressionStatement",
															"src": "1294:34:1"
														},
														{
															"expression": {
																"id": 274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 270,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "1343:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 272,
																	"indexExpression": {
																		"id": 271,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "1366:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1343:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 273,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1377:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1343:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 275,
															"nodeType": "ExpressionStatement",
															"src": "1343:54:1"
														},
														{
															"expression": {
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 276,
																		"name": "userLastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "1412:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 278,
																	"indexExpression": {
																		"id": 277,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "1431:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1412:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1442:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1448:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1442:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1412:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 282,
															"nodeType": "ExpressionStatement",
															"src": "1412:45:1"
														}
													]
												}
											},
											{
												"id": 285,
												"nodeType": "PlaceholderStatement",
												"src": "1479:1:1"
											}
										]
									},
									"id": 287,
									"name": "updateReward",
									"nameLocation": "1009:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 287,
												"src": "1022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:17:1"
									},
									"src": "1000:488:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 298,
										"nodeType": "Block",
										"src": "1549:35:1",
										"statements": [
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 294,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "1560:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 295,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "1572:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1560:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "1560:16:1"
											}
										]
									},
									"functionSelector": "3e0a322d",
									"id": 299,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 292,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 291,
												"name": "onlyAdmin",
												"nameLocations": [
													"1539:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "1539:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1539:9:1"
										}
									],
									"name": "setStartTime",
									"nameLocation": "1505:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1526:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 299,
												"src": "1518:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1518:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1517:14:1"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1549:0:1"
									},
									"scope": 763,
									"src": "1496:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "1647:38:1",
										"statements": [
											{
												"expression": {
													"id": 304,
													"name": "_totalPowers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 227,
													"src": "1665:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 303,
												"id": 305,
												"nodeType": "Return",
												"src": "1658:19:1"
											}
										]
									},
									"functionSelector": "6917c501",
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPowers",
									"nameLocation": "1601:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1612:2:1"
									},
									"returnParameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "1638:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1638:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1637:9:1"
									},
									"scope": 763,
									"src": "1592:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1760:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 314,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1778:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 316,
													"indexExpression": {
														"id": 315,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "1788:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1778:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 313,
												"id": 317,
												"nodeType": "Return",
												"src": "1771:25:1"
											}
										]
									},
									"functionSelector": "b79ec812",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "powersOf",
									"nameLocation": "1702:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1719:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1711:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1710:17:1"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "1751:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1751:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1750:9:1"
									},
									"scope": 763,
									"src": "1693:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "1870:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 325,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1903:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1909:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1903:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 324,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "1888:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 323,
												"id": 328,
												"nodeType": "Return",
												"src": "1881:38:1"
											}
										]
									},
									"functionSelector": "9499c549",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardPool",
									"nameLocation": "1821:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 320,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1837:2:1"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "1861:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1860:9:1"
									},
									"scope": 763,
									"src": "1812:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 387,
										"nodeType": "Block",
										"src": "2004:399:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 337,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2018:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2031:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2018:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "IfStatement",
												"src": "2015:62:1",
												"trueBody": {
													"id": 342,
													"nodeType": "Block",
													"src": "2034:43:1",
													"statements": [
														{
															"expression": {
																"id": 340,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2056:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 336,
															"id": 341,
															"nodeType": "Return",
															"src": "2049:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													345
												],
												"declarations": [
													{
														"constant": false,
														"id": 345,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2095:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "2087:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 344,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2087:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 354,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 346,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 332,
																		"src": "2104:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 347,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "2111:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2104:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 349,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2103:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 350,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2124:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2103:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 352,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2139:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2103:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2087:53:1"
											},
											{
												"assignments": [
													356
												],
												"declarations": [
													{
														"constant": false,
														"id": 356,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2159:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 387,
														"src": "2151:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 355,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2151:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 358,
												"initialValue": {
													"id": 357,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "2167:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2151:28:1"
											},
											{
												"body": {
													"id": 379,
													"nodeType": "Block",
													"src": "2225:98:1",
													"statements": [
														{
															"expression": {
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 369,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 356,
																	"src": "2240:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 370,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "2248:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 371,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 356,
																				"src": "2256:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 372,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 210,
																				"src": "2264:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2256:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 374,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "2288:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2256:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2248:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2240:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 378,
															"nodeType": "ExpressionStatement",
															"src": "2240:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 363,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 360,
														"src": "2209:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 364,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 345,
														"src": "2213:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2209:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 380,
												"initializationExpression": {
													"assignments": [
														360
													],
													"declarations": [
														{
															"constant": false,
															"id": 360,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2202:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 380,
															"src": "2194:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 359,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2194:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 362,
													"initialValue": {
														"hexValue": "30",
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2206:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2194:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2220:3:1",
														"subExpression": {
															"id": 366,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "2222:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 368,
													"nodeType": "ExpressionStatement",
													"src": "2220:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2190:133:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 385,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 381,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "2340:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 382,
															"name": "rateIntervalNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2348:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2340:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 384,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2372:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2340:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 386,
												"nodeType": "Return",
												"src": "2333:62:1"
											}
										]
									},
									"id": 388,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardPool",
									"nameLocation": "1944:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1967:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "1959:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1959:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1958:14:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 388,
												"src": "1995:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1995:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1994:9:1"
									},
									"scope": 763,
									"src": "1935:468:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "2469:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 394,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2502:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2508:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2502:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 393,
														"name": "_getRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 422,
														"src": "2487:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2487:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 392,
												"id": 397,
												"nodeType": "Return",
												"src": "2480:38:1"
											}
										]
									},
									"functionSelector": "cdda56e0",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardRate",
									"nameLocation": "2420:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2436:2:1"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "2460:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2460:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2459:9:1"
									},
									"scope": 763,
									"src": "2411:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2603:154:1",
										"statements": [
											{
												"assignments": [
													407
												],
												"declarations": [
													{
														"constant": false,
														"id": 407,
														"mutability": "mutable",
														"name": "curPoolAmount",
														"nameLocation": "2622:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "2614:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 406,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2614:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 411,
												"initialValue": {
													"arguments": [
														{
															"id": 409,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "2653:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 408,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "2638:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2638:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2614:44:1"
											},
											{
												"assignments": [
													413
												],
												"declarations": [
													{
														"constant": false,
														"id": 413,
														"mutability": "mutable",
														"name": "rewardRate",
														"nameLocation": "2677:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "2669:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 412,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2669:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 418,
												"initialValue": {
													"arguments": [
														{
															"id": 416,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2708:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 414,
															"name": "curPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "2690:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2704:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1623,
														"src": "2690:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2690:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2669:52:1"
											},
											{
												"expression": {
													"id": 419,
													"name": "rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 413,
													"src": "2739:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 420,
												"nodeType": "Return",
												"src": "2732:17:1"
											}
										]
									},
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardRate",
									"nameLocation": "2543:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2566:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2558:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2558:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2557:14:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "2594:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2594:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2593:9:1"
									},
									"scope": 763,
									"src": "2534:223:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "2833:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 427,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2851:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2857:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2851:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 426,
												"id": 429,
												"nodeType": "Return",
												"src": "2844:22:1"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "2776:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2800:2:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "2824:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 424,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:9:1"
									},
									"scope": 763,
									"src": "2767:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "2956:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "2971:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2987:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2971:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "2967:77:1",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "2990:54:1",
													"statements": [
														{
															"expression": {
																"id": 441,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "3012:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 437,
															"id": 442,
															"nodeType": "Return",
															"src": "3005:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 459,
																	"name": "_totalPowers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "3194:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3184:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 453,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "3168:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 450,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 215,
																							"src": "3148:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 447,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 431,
																								"src": "3117:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 448,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3117:26:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 449,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3144:3:1",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1593,
																						"src": "3117:30:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3117:46:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3164:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1608,
																				"src": "3117:50:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3117:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 455,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3180:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1608,
																		"src": "3117:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3117:72:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3190:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1623,
																"src": "3117:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3117:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 445,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3074:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3095:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1578,
														"src": "3074:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3074:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 437,
												"id": 462,
												"nodeType": "Return",
												"src": "3054:168:1"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "2891:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "2914:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2906:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:20:1"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "2947:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2947:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2946:9:1"
									},
									"scope": 763,
									"src": "2882:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 503,
										"nodeType": "Block",
										"src": "3301:233:1",
										"statements": [
											{
												"assignments": [
													472
												],
												"declarations": [
													{
														"constant": false,
														"id": 472,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "3320:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 503,
														"src": "3312:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 471,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3312:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 474,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "3350:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 476,
															"indexExpression": {
																"id": 475,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "3369:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3350:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 477,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3379:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3385:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3379:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 661,
														"src": "3327:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3327:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3312:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 498,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "3509:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 500,
															"indexExpression": {
																"id": 499,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "3517:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3509:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3499:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 489,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 221,
																						"src": "3461:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 491,
																					"indexExpression": {
																						"id": 490,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 466,
																						"src": "3484:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3461:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 486,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 472,
																							"src": "3451:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 485,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 464,
																						"src": "3436:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 487,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3436:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3457:3:1",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1593,
																				"src": "3436:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3436:57:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 481,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "3413:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 483,
																			"indexExpression": {
																				"id": 482,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 466,
																				"src": "3423:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3413:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 484,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3432:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1608,
																		"src": "3413:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 493,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3413:81:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3495:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1623,
																"src": "3413:85:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3413:91:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3505:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1578,
														"src": "3413:95:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3413:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 470,
												"id": 502,
												"nodeType": "Return",
												"src": "3406:120:1"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 504,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "3247:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3262:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "3254:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3254:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3253:17:1"
									},
									"returnParameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 504,
												"src": "3292:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3292:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3291:9:1"
									},
									"scope": 763,
									"src": "3238:296:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 660,
										"nodeType": "Block",
										"src": "3675:1287:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 513,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3699:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3712:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3699:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 516,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3717:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<=",
														"rightExpression": {
															"id": 517,
															"name": "rightTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3729:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3717:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3699:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 523,
												"nodeType": "IfStatement",
												"src": "3696:79:1",
												"trueBody": {
													"id": 522,
													"nodeType": "Block",
													"src": "3740:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3762:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 512,
															"id": 521,
															"nodeType": "Return",
															"src": "3755:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 526,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 524,
															"name": "rightTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "3798:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 525,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "3810:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3798:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 527,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3822:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3798:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 530,
												"nodeType": "IfStatement",
												"src": "3795:55:1",
												"trueBody": {
													"id": 529,
													"nodeType": "Block",
													"src": "3836:14:1",
													"statements": []
												}
											},
											{
												"assignments": [
													532
												],
												"declarations": [
													{
														"constant": false,
														"id": 532,
														"mutability": "mutable",
														"name": "tmp",
														"nameLocation": "3868:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3860:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 531,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3860:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 536,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 533,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "3874:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 534,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3885:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3874:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3860:37:1"
											},
											{
												"assignments": [
													538
												],
												"declarations": [
													{
														"constant": false,
														"id": 538,
														"mutability": "mutable",
														"name": "leftInterval",
														"nameLocation": "3916:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3908:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3908:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 539,
														"name": "tmp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "3931:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 545,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 540,
																		"name": "tmp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 532,
																		"src": "3938:3:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 541,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "3944:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3938:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 543,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3937:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"id": 544,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "3957:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3937:32:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3931:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3908:61:1"
											},
											{
												"assignments": [
													549
												],
												"declarations": [
													{
														"constant": false,
														"id": 549,
														"mutability": "mutable",
														"name": "leftReward",
														"nameLocation": "3988:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "3980:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 548,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3980:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 557,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 551,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "4016:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 550,
																"name": "_getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "4001:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4001:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 553,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4028:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4001:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 555,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4043:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4001:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3980:75:1"
											},
											{
												"assignments": [
													559
												],
												"declarations": [
													{
														"constant": false,
														"id": 559,
														"mutability": "mutable",
														"name": "rightInterval",
														"nameLocation": "4076:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "4068:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 558,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4068:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 566,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 560,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "4093:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 561,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "4105:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4093:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 563,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4092:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 564,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4118:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4092:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4068:62:1"
											},
											{
												"assignments": [
													568
												],
												"declarations": [
													{
														"constant": false,
														"id": 568,
														"mutability": "mutable",
														"name": "rightReward",
														"nameLocation": "4149:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "4141:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 567,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4141:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 576,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 573,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 570,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "4178:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 569,
																"name": "_getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 388,
																"src": "4163:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4163:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 572,
															"name": "rightInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "4191:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4163:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 574,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4207:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4163:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4141:78:1"
											},
											{
												"assignments": [
													578
												],
												"declarations": [
													{
														"constant": false,
														"id": 578,
														"mutability": "mutable",
														"name": "midInterval",
														"nameLocation": "4289:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "4281:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 577,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4281:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 586,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 585,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 579,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 508,
																"src": "4303:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 580,
																"name": "rightInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 559,
																"src": "4315:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4303:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 582,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "4331:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4303:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 584,
														"name": "tmp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "4346:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4303:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4281:68:1"
											},
											{
												"assignments": [
													588
												],
												"declarations": [
													{
														"constant": false,
														"id": 588,
														"mutability": "mutable",
														"name": "startReward",
														"nameLocation": "4368:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "4360:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 587,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4360:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 594,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 590,
																"name": "tmp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4397:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 591,
																"name": "leftInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4403:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 589,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "4382:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4382:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4360:56:1"
											},
											{
												"assignments": [
													596
												],
												"declarations": [
													{
														"constant": false,
														"id": 596,
														"mutability": "mutable",
														"name": "midTotalReward",
														"nameLocation": "4436:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "4428:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 595,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4428:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"id": 597,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "4453:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4428:36:1"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "nextReward",
														"nameLocation": "4483:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "4475:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4475:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"id": 601,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 588,
													"src": "4496:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4475:32:1"
											},
											{
												"assignments": [
													604
												],
												"declarations": [
													{
														"constant": false,
														"id": 604,
														"mutability": "mutable",
														"name": "frontReward",
														"nameLocation": "4526:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 660,
														"src": "4518:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 603,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4518:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 606,
																"name": "tmp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 532,
																"src": "4555:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 607,
																"name": "leftInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "4561:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4555:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 605,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "4540:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4540:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4518:56:1"
											},
											{
												"body": {
													"id": 646,
													"nodeType": "Block",
													"src": "4641:228:1",
													"statements": [
														{
															"expression": {
																"id": 625,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 623,
																	"name": "frontReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 604,
																	"src": "4656:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 624,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "4670:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4656:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 626,
															"nodeType": "ExpressionStatement",
															"src": "4656:24:1"
														},
														{
															"expression": {
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 627,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 600,
																	"src": "4695:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 628,
																		"name": "frontReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 604,
																		"src": "4708:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 631,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 629,
																							"name": "frontReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 604,
																							"src": "4723:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 630,
																							"name": "nextReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 600,
																							"src": "4737:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4723:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 632,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4722:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 633,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 210,
																				"src": "4751:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4722:50:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 635,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "4775:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4722:76:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4708:90:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4695:103:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 639,
															"nodeType": "ExpressionStatement",
															"src": "4695:103:1"
														},
														{
															"expression": {
																"id": 644,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 640,
																	"name": "midTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 596,
																	"src": "4813:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 641,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "4830:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 642,
																		"name": "nextReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 600,
																		"src": "4847:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4830:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4813:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 645,
															"nodeType": "ExpressionStatement",
															"src": "4813:44:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 615,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "4604:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 618,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 616,
															"name": "midInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 578,
															"src": "4608:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 617,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4622:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4608:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4604:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 647,
												"initializationExpression": {
													"assignments": [
														612
													],
													"declarations": [
														{
															"constant": false,
															"id": 612,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4597:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 647,
															"src": "4589:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 611,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4589:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 614,
													"initialValue": {
														"hexValue": "30",
														"id": 613,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4601:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4589:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 621,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4636:3:1",
														"subExpression": {
															"id": 620,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "4638:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 622,
													"nodeType": "ExpressionStatement",
													"src": "4636:3:1"
												},
												"nodeType": "ForStatement",
												"src": "4585:284:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 648,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 596,
																		"src": "4887:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 649,
																		"name": "leftReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 549,
																		"src": "4904:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4887:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 651,
																	"name": "rightReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 568,
																	"src": "4917:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4887:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 653,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4886:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 654,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "4933:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 655,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 506,
																	"src": "4945:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4933:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 657,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4932:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4886:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 512,
												"id": 659,
												"nodeType": "Return",
												"src": "4879:75:1"
											}
										]
									},
									"functionSelector": "da4f8431",
									"id": 661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeWeightedAveRate",
									"nameLocation": "3586:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "leftTime",
												"nameLocation": "3617:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3609:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3609:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "rightTime",
												"nameLocation": "3635:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3627:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3627:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3608:37:1"
									},
									"returnParameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 661,
												"src": "3667:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3667:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3666:9:1"
									},
									"scope": 763,
									"src": "3577:1385:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5072:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 679,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 677,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "5091:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5100:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5091:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5103:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 676,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5083:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5083:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "5083:37:1"
											},
											{
												"expression": {
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 683,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "5131:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 686,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "5163:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 684,
																"name": "_totalPowers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "5146:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5159:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "5146:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5146:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5131:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "5131:39:1"
											},
											{
												"expression": {
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 690,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5181:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 692,
														"indexExpression": {
															"id": 691,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "5191:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5181:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 697,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "5219:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 693,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "5199:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 695,
																"indexExpression": {
																	"id": 694,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 663,
																	"src": "5209:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5199:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5215:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1578,
															"src": "5199:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 698,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5199:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5181:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5181:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 702,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 663,
															"src": "5249:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 703,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "5255:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 701,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 756,
														"src": "5242:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5242:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 705,
												"nodeType": "EmitStatement",
												"src": "5237:25:1"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 668,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 667,
												"name": "nonReentrant",
												"nameLocations": [
													"5024:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "5024:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5024:12:1"
										},
										{
											"id": 670,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 669,
												"name": "onlyAdmin",
												"nameLocations": [
													"5037:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "5037:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5037:9:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 672,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5060:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5064:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5060:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 674,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 671,
												"name": "updateReward",
												"nameLocations": [
													"5047:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 287,
												"src": "5047:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5047:24:1"
										}
									],
									"name": "stake",
									"nameLocation": "4979:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4993:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "4985:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4985:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5007:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "4999:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4999:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4984:30:1"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5072:0:1"
									},
									"scope": 763,
									"src": "4970:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 749,
										"nodeType": "Block",
										"src": "5348:237:1",
										"statements": [
											{
												"assignments": [
													717
												],
												"declarations": [
													{
														"constant": false,
														"id": 717,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5367:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 749,
														"src": "5359:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 716,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5359:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"baseExpression": {
														"id": 718,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5376:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 721,
													"indexExpression": {
														"expression": {
															"id": 719,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5384:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5388:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5384:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5376:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5359:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 723,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 717,
														"src": "5410:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 724,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5419:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5410:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 748,
												"nodeType": "IfStatement",
												"src": "5406:172:1",
												"trueBody": {
													"id": 747,
													"nodeType": "Block",
													"src": "5422:156:1",
													"statements": [
														{
															"expression": {
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 726,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "5437:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 729,
																	"indexExpression": {
																		"expression": {
																			"id": 727,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5445:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5449:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5445:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5437:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5459:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5437:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 732,
															"nodeType": "ExpressionStatement",
															"src": "5437:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 736,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5497:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5501:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5497:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 738,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "5509:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 733,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "5475:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$881",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 735,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5488:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 830,
																	"src": "5475:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5475:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 740,
															"nodeType": "ExpressionStatement",
															"src": "5475:41:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 742,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5547:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5551:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5547:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 744,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 717,
																		"src": "5559:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 741,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "5536:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5536:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 746,
															"nodeType": "EmitStatement",
															"src": "5531:35:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 750,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 709,
												"name": "nonReentrant",
												"nameLocations": [
													"5310:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 802,
												"src": "5310:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5310:12:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 712,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5336:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5340:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5336:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 714,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 711,
												"name": "updateReward",
												"nameLocations": [
													"5323:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 287,
												"src": "5323:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5323:24:1"
										}
									],
									"name": "getReward",
									"nameLocation": "5291:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5300:2:1"
									},
									"returnParameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5348:0:1"
									},
									"scope": 763,
									"src": "5282:303:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 756,
									"name": "Staked",
									"nameLocation": "5607:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5630:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "5614:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5614:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5644:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 756,
												"src": "5636:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 753,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5636:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5613:38:1"
									},
									"src": "5601:51:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 762,
									"name": "RewardPaid",
									"nameLocation": "5664:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5691:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5675:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5705:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 762,
												"src": "5697:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:38:1"
									},
									"src": "5658:55:1"
								}
							],
							"scope": 764,
							"src": "297:5421:1",
							"usedErrors": []
						}
					],
					"src": "0:5718:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							803
						]
					},
					"id": 804,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 765,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 766,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 803,
							"linearizedBaseContracts": [
								803
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 769,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 803,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 767,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 768,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 772,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 803,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 770,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 771,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 774,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 803,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 773,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 781,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 779,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 777,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 778,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 780,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 782,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 776,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 803,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 786,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 774,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 787,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 772,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 785,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 791,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 792,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 793,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 772,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 796,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 797,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 774,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 798,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 769,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 802,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 804,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2623:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							881
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 805,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 806,
								"nodeType": "StructuredDocumentation",
								"src": "121:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 881,
							"linearizedBaseContracts": [
								881
							],
							"name": "IERC20",
							"nameLocation": "205:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 807,
										"nodeType": "StructuredDocumentation",
										"src": "219:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "302:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "339:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:9:3"
									},
									"scope": 881,
									"src": "293:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "356:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 820,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:3"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 820,
												"src": "495:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:3"
									},
									"scope": 881,
									"src": "436:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "512:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 830,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "742:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "759:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "751:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "778:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "770:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 824,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:35:3"
									},
									"returnParameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:6:3"
									},
									"scope": 881,
									"src": "733:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "818:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1103:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1121:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1113:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1136:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1128:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:32:3"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "1168:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:9:3"
									},
									"scope": 881,
									"src": "1094:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1185:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 850,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1855:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1871:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1888:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1880:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:33:3"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 847,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:6:3"
									},
									"scope": 881,
									"src": "1846:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "1928:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2247:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2278:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "2270:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2303:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "2295:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2331:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "2323:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:85:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "2363:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:6:3"
									},
									"scope": 881,
									"src": "2238:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "2377:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 871,
									"name": "Transfer",
									"nameLocation": "2552:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2561:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 871,
												"src": "2603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:3"
									},
									"src": "2546:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "2626:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 880,
									"name": "Approval",
									"nameLocation": "2789:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2814:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2798:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2837:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2821:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2854:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "2846:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:63:3"
									},
									"src": "2783:78:3"
								}
							],
							"scope": 882,
							"src": "195:2669:3",
							"usedErrors": []
						}
					],
					"src": "94:2772:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1402
						],
						"IERC20": [
							881
						],
						"SafeERC20": [
							1105
						]
					},
					"id": 1106,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 883,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 884,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1106,
							"sourceUnit": 882,
							"src": "130:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 885,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1106,
							"sourceUnit": 1403,
							"src": "155:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 886,
								"nodeType": "StructuredDocumentation",
								"src": "195:465:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1105,
							"linearizedBaseContracts": [
								1105
							],
							"name": "SafeERC20",
							"nameLocation": "670:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 889,
									"libraryName": {
										"id": 887,
										"name": "Address",
										"nameLocations": [
											"693:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1402,
										"src": "693:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "687:26:4",
									"typeName": {
										"id": 888,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "827:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 900,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 892,
															"src": "858:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 903,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 892,
																			"src": "888:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$881",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "894:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 830,
																		"src": "888:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "903:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "888:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 906,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 894,
																	"src": "913:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 907,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 896,
																	"src": "917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 901,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "865:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "869:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "865:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "865:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 899,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "838:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$881_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 910,
												"nodeType": "ExpressionStatement",
												"src": "838:86:4"
											}
										]
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "730:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "760:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "753:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$881",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 890,
														"name": "IERC20",
														"nameLocations": [
															"753:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "753:6:4"
													},
													"referencedDeclaration": 881,
													"src": "753:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$881",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "784:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "776:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "797:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:75:4"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:0:4"
									},
									"scope": 1105,
									"src": "721:211:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 937,
										"nodeType": "Block",
										"src": "1073:115:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "1104:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 928,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 915,
																			"src": "1134:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$881",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1140:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 862,
																		"src": "1134:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1153:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1134:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 931,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "1163:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 932,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 919,
																	"src": "1169:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 933,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 921,
																	"src": "1173:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 926,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1111:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 927,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1115:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1111:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1111:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 924,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$881_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 936,
												"nodeType": "ExpressionStatement",
												"src": "1084:96:4"
											}
										]
									},
									"id": 938,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "949:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "983:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "976:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$881",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 914,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 913,
														"name": "IERC20",
														"nameLocations": [
															"976:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "976:6:4"
													},
													"referencedDeclaration": 881,
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$881",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1007:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "999:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 916,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1030:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1022:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1051:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "1043:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:98:4"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:4"
									},
									"scope": 1105,
									"src": "940:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "1567:506:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 950,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "1821:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1830:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1821:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 953,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1820:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 958,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1861:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1105",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1105",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 957,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1853:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 956,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1853:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 959,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1853:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 960,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 944,
																					"src": "1868:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 954,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 942,
																					"src": "1837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$881",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1843:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 840,
																				"src": "1837:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 961,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1837:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 962,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1880:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1837:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 964,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1836:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1820:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1897:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 949,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:166:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 968,
												"nodeType": "ExpressionStatement",
												"src": "1798:166:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 970,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 973,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "2025:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$881",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2031:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 850,
																		"src": "2025:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2039:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2025:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 976,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "2049:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 977,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 946,
																	"src": "2058:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 971,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2002:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 972,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2006:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2002:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2002:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 969,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "1975:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$881_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1975:90:4"
											}
										]
									},
									"documentation": {
										"id": 939,
										"nodeType": "StructuredDocumentation",
										"src": "1196:255:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1466:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1488:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$881",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 941,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 940,
														"name": "IERC20",
														"nameLocations": [
															"1488:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "1488:6:4"
													},
													"referencedDeclaration": 881,
													"src": "1488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$881",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 946,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "1537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 945,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:80:4"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:4"
									},
									"scope": 1105,
									"src": "1457:616:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "2201:197:4",
										"statements": [
											{
												"assignments": [
													993
												],
												"declarations": [
													{
														"constant": false,
														"id": 993,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2220:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1017,
														"src": "2212:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 992,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2212:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1004,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 998,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2259:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1105",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1105",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2251:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 996,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2251:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2251:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1000,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 987,
																"src": "2266:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 994,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 985,
																"src": "2235:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$881",
																	"typeString": "contract IERC20"
																}
															},
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2241:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 840,
															"src": "2235:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2235:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1002,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2277:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2235:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2212:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1006,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "2313:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1009,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 985,
																			"src": "2343:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$881",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2349:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 850,
																		"src": "2343:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2357:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2343:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1012,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 987,
																	"src": "2367:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1013,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "2376:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1007,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2320:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1008,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2324:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2320:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1014,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2320:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$881",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1005,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "2293:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$881_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "2293:97:4"
											}
										]
									},
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2129:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2122:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$881",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 984,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 983,
														"name": "IERC20",
														"nameLocations": [
															"2122:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "2122:6:4"
													},
													"referencedDeclaration": 881,
													"src": "2122:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$881",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:80:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:4"
									},
									"scope": 1105,
									"src": "2081:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1065,
										"nodeType": "Block",
										"src": "2526:377:4",
										"statements": [
											{
												"id": 1064,
												"nodeType": "UncheckedBlock",
												"src": "2537:359:4",
												"statements": [
													{
														"assignments": [
															1029
														],
														"declarations": [
															{
																"constant": false,
																"id": 1029,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2570:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1064,
																"src": "2562:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1028,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2562:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1038,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1034,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2609:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1105",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1105",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2601:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1032,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2601:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1035,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2601:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1036,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1023,
																	"src": "2616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1030,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "2585:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$881",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2591:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 840,
																"src": "2585:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1037,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2585:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2562:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1040,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1029,
																		"src": "2647:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1041,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1025,
																		"src": "2663:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2647:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2670:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1039,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2639:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2639:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1045,
														"nodeType": "ExpressionStatement",
														"src": "2639:75:4"
													},
													{
														"assignments": [
															1047
														],
														"declarations": [
															{
																"constant": false,
																"id": 1047,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2737:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1064,
																"src": "2729:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1046,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2729:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1051,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1050,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1048,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1029,
																"src": "2752:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1049,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1025,
																"src": "2767:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2752:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2729:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1053,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "2807:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$881",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1056,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1021,
																					"src": "2837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$881",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1057,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2843:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 850,
																				"src": "2837:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1058,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2851:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2837:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1059,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1023,
																			"src": "2861:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1060,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1047,
																			"src": "2870:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1054,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2814:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2818:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2814:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1061,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2814:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$881",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1052,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1104,
																"src": "2787:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$881_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2787:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1063,
														"nodeType": "ExpressionStatement",
														"src": "2787:97:4"
													}
												]
											}
										]
									},
									"id": 1066,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2415:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2447:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$881",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1020,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1019,
														"name": "IERC20",
														"nameLocations": [
															"2447:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "2447:6:4"
													},
													"referencedDeclaration": 881,
													"src": "2447:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$881",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2478:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2470:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2504:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1066,
												"src": "2496:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:80:4"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:0:4"
									},
									"scope": 1105,
									"src": "2406:497:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "3364:646:4",
										"statements": [
											{
												"assignments": [
													1076
												],
												"declarations": [
													{
														"constant": false,
														"id": 1076,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3731:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1103,
														"src": "3718:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1075,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3718:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1085,
												"initialValue": {
													"arguments": [
														{
															"id": 1082,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1072,
															"src": "3772:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3778:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1079,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "3752:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$881",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$881",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3744:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1077,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3744:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3744:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3759:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1196,
														"src": "3744:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1084,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3744:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3718:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1086,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "3828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1087,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3839:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3828:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1088,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3848:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3828:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1102,
												"nodeType": "IfStatement",
												"src": "3824:179:4",
												"trueBody": {
													"id": 1101,
													"nodeType": "Block",
													"src": "3851:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1093,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1076,
																				"src": "3925:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1095,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3938:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1094,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3938:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1096,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3937:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1091,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3914:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3918:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3914:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3914:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1098,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3946:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1090,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3906:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3906:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1100,
															"nodeType": "ExpressionStatement",
															"src": "3906:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1067,
										"nodeType": "StructuredDocumentation",
										"src": "2911:377:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3303:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3330:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3323:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$881",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1069,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1068,
														"name": "IERC20",
														"nameLocations": [
															"3323:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "3323:6:4"
													},
													"referencedDeclaration": 881,
													"src": "3323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$881",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "3337:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1071,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3337:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:33:4"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:0:4"
									},
									"scope": 1105,
									"src": "3294:716:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1106,
							"src": "662:3351:4",
							"usedErrors": []
						}
					],
					"src": "103:3912:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1402
						]
					},
					"id": 1403,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1107,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1108,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1402,
							"linearizedBaseContracts": [
								1402
							],
							"name": "Address",
							"nameLocation": "195:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1124,
										"nodeType": "Block",
										"src": "863:321:5",
										"statements": [
											{
												"assignments": [
													1117
												],
												"declarations": [
													{
														"constant": false,
														"id": 1117,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1124,
														"src": "1065:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1116,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1111,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1117,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:5",
														"valueSize": 1
													}
												],
												"id": 1119,
												"nodeType": "InlineAssembly",
												"src": "1088:63:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1117,
														"src": "1168:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1115,
												"id": 1123,
												"nodeType": "Return",
												"src": "1161:15:5"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1125,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "817:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:5"
									},
									"returnParameters": {
										"id": 1115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "857:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:5"
									},
									"scope": 1402,
									"src": "797:387:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "2190:246:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1136,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1134,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2223:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1139,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "2234:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1133,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1143,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:5"
											},
											{
												"assignments": [
													1145,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1145,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1158,
														"src": "2288:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1144,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1152,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1146,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1128,
																"src": "2306:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2316:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1148,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1130,
																"src": "2328:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1154,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "2358:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1153,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1157,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:5"
											}
										]
									},
									"documentation": {
										"id": 1126,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2138:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1130,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "2165:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:5"
									},
									"returnParameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:5"
									},
									"scope": 1402,
									"src": "2119:317:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "3287:86:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1170,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "3318:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1164,
															"src": "3326:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1172,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1169,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1176,
															1196
														],
														"referencedDeclaration": 1196,
														"src": "3305:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1168,
												"id": 1174,
												"nodeType": "Return",
												"src": "3298:67:5"
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3220:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1163,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:5"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "3273:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1166,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:5"
									},
									"scope": 1402,
									"src": "3198:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1195,
										"nodeType": "Block",
										"src": "3754:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1189,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "3794:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1190,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1181,
															"src": "3802:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1191,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1192,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "3811:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1188,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1216,
															1266
														],
														"referencedDeclaration": 1266,
														"src": "3772:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1194,
												"nodeType": "Return",
												"src": "3765:59:5"
											}
										]
									},
									"documentation": {
										"id": 1177,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1196,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "3635:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "3660:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1180,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "3688:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:5"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1196,
												"src": "3740:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1185,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:5"
									},
									"scope": 1402,
									"src": "3603:229:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1215,
										"nodeType": "Block",
										"src": "4354:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1209,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1199,
															"src": "4394:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1210,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1201,
															"src": "4402:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1211,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1203,
															"src": "4408:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1212,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1208,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1216,
															1266
														],
														"referencedDeclaration": 1266,
														"src": "4372:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1207,
												"id": 1214,
												"nodeType": "Return",
												"src": "4365:94:5"
											}
										]
									},
									"documentation": {
										"id": 1197,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4248:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4273:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4301:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:5"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1216,
												"src": "4340:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1205,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:5"
									},
									"scope": 1402,
									"src": "4207:260:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "4907:326:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1233,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1402",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1231,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1234,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4940:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1236,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "4951:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1230,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1240,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1243,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1219,
																	"src": "5029:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1242,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "5018:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1241,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1247,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:5"
											},
											{
												"assignments": [
													1249,
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "5084:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "5098:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1258,
												"initialValue": {
													"arguments": [
														{
															"id": 1256,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1221,
															"src": "5151:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1252,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1219,
																"src": "5125:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5132:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1254,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "5144:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "5191:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1261,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "5200:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1262,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "5212:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1259,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "5174:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1229,
												"id": 1264,
												"nodeType": "Return",
												"src": "5167:58:5"
											}
										]
									},
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4764:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4789:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1220,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4817:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4841:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1224,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:5"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "4893:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:5"
									},
									"scope": 1402,
									"src": "4723:510:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1282,
										"nodeType": "Block",
										"src": "5518:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1277,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "5555:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1278,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "5563:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1276,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1283,
															1318
														],
														"referencedDeclaration": 1318,
														"src": "5536:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1275,
												"id": 1281,
												"nodeType": "Return",
												"src": "5529:80:5"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "5446:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "5462:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:5"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "5504:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:5"
									},
									"scope": 1402,
									"src": "5418:199:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "5971:233:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1297,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "6001:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1296,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "5990:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1298,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1299,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1295,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:5"
											},
											{
												"assignments": [
													1303,
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "6063:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "6077:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1304,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"id": 1308,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "6122:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1306,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1286,
															"src": "6104:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6111:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "6162:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1313,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "6171:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1314,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "6183:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1311,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "6145:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1316,
												"nodeType": "Return",
												"src": "6138:58:5"
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "5847:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "5872:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1287,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "5900:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1289,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:5"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "5957:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1292,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:5"
									},
									"scope": 1402,
									"src": "5809:395:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "6488:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1329,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1321,
															"src": "6527:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1330,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1323,
															"src": "6535:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1328,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1335,
															1370
														],
														"referencedDeclaration": 1370,
														"src": "6506:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1327,
												"id": 1333,
												"nodeType": "Return",
												"src": "6499:84:5"
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "6421:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "6437:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1322,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:5"
									},
									"returnParameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "6474:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1325,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:5"
									},
									"scope": 1402,
									"src": "6391:200:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1369,
										"nodeType": "Block",
										"src": "6944:237:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1349,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "6974:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1348,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1125,
																"src": "6963:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1347,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:5"
											},
											{
												"assignments": [
													1355,
													1357
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "7038:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1354,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1357,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1369,
														"src": "7052:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1356,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"arguments": [
														{
															"id": 1360,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "7099:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1358,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "7079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7086:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1364,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "7139:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1365,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1357,
															"src": "7148:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1366,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1342,
															"src": "7160:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1363,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1401,
														"src": "7122:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1346,
												"id": 1368,
												"nodeType": "Return",
												"src": "7115:58:5"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "6825:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "6850:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1339,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1342,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "6878:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1341,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:5"
									},
									"returnParameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1370,
												"src": "6930:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:5"
									},
									"scope": 1402,
									"src": "6785:396:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1400,
										"nodeType": "Block",
										"src": "7573:548:5",
										"statements": [
											{
												"condition": {
													"id": 1382,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1373,
													"src": "7588:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1398,
													"nodeType": "Block",
													"src": "7647:467:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1386,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "7733:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7744:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1396,
																"nodeType": "Block",
																"src": "8048:55:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1393,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1377,
																					"src": "8074:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1392,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1394,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1395,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:5"
																	}
																]
															},
															"id": 1397,
															"nodeType": "IfStatement",
															"src": "7729:374:5",
															"trueBody": {
																"id": 1391,
																"nodeType": "Block",
																"src": "7756:286:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1375,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1375,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1390,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:5"
																	}
																]
															}
														}
													]
												},
												"id": 1399,
												"nodeType": "IfStatement",
												"src": "7584:530:5",
												"trueBody": {
													"id": 1385,
													"nodeType": "Block",
													"src": "7597:44:5",
													"statements": [
														{
															"expression": {
																"id": 1383,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "7619:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1381,
															"id": 1384,
															"nodeType": "Return",
															"src": "7612:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1371,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7445:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7468:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1374,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7502:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1376,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:5"
									},
									"returnParameters": {
										"id": 1381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1401,
												"src": "7559:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1379,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:5"
									},
									"scope": 1402,
									"src": "7409:712:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1403,
							"src": "187:7937:5",
							"usedErrors": []
						}
					],
					"src": "89:8037:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1714
						]
					},
					"id": 1715,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1404,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1405,
								"nodeType": "StructuredDocumentation",
								"src": "279:201:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1714,
							"linearizedBaseContracts": [
								1714
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "723:146:6",
										"statements": [
											{
												"id": 1435,
												"nodeType": "UncheckedBlock",
												"src": "734:128:6",
												"statements": [
													{
														"assignments": [
															1418
														],
														"declarations": [
															{
																"constant": false,
																"id": 1418,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1435,
																"src": "759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1417,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1422,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1419,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1420,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1423,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1418,
																"src": "795:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1424,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1408,
																"src": "799:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1430,
														"nodeType": "IfStatement",
														"src": "791:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1426,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "817:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1428,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "809:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1416,
															"id": 1429,
															"nodeType": "Return",
															"src": "802:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1432,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1418,
																	"src": "848:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1433,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "841:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1416,
														"id": 1434,
														"nodeType": "Return",
														"src": "834:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1406,
										"nodeType": "StructuredDocumentation",
										"src": "506:135:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "656:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "671:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "663:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1407,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "682:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "674:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:22:6"
									},
									"returnParameters": {
										"id": 1416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "708:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1412,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "714:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:15:6"
									},
									"scope": 1714,
									"src": "647:222:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "1098:118:6",
										"statements": [
											{
												"id": 1463,
												"nodeType": "UncheckedBlock",
												"src": "1109:100:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1449,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1442,
																"src": "1138:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1450,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1440,
																"src": "1142:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1138:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1456,
														"nodeType": "IfStatement",
														"src": "1134:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1153:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1160:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1454,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1152:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1448,
															"id": 1455,
															"nodeType": "Return",
															"src": "1145:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1457,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1185:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1458,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1440,
																		"src": "1191:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1459,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1442,
																		"src": "1195:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1191:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1184:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1448,
														"id": 1462,
														"nodeType": "Return",
														"src": "1177:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "877:139:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1031:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1046:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1038:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1439,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1442,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1057:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1049:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:22:6"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1083:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1444,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1083:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:15:6"
									},
									"scope": 1714,
									"src": "1022:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1506,
										"nodeType": "Block",
										"src": "1447:427:6",
										"statements": [
											{
												"id": 1505,
												"nodeType": "UncheckedBlock",
												"src": "1458:409:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1477,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "1720:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1478,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1725:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1720:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1484,
														"nodeType": "IfStatement",
														"src": "1716:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1480,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1736:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1481,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1482,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1735:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1483,
															"nodeType": "Return",
															"src": "1728:16:6"
														}
													},
													{
														"assignments": [
															1486
														],
														"declarations": [
															{
																"constant": false,
																"id": 1486,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1505,
																"src": "1759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1485,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1490,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1487,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1468,
																"src": "1771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1488,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "1775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1491,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1795:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1492,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "1799:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1494,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1470,
																"src": "1804:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1795:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1500,
														"nodeType": "IfStatement",
														"src": "1791:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1496,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1815:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1822:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1498,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1814:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1476,
															"id": 1499,
															"nodeType": "Return",
															"src": "1807:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1502,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1486,
																	"src": "1853:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1503,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1846:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1476,
														"id": 1504,
														"nodeType": "Return",
														"src": "1839:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1224:141:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1380:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1395:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1387:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1406:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1398:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:22:6"
									},
									"returnParameters": {
										"id": 1476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1432:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1432:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1507,
												"src": "1438:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:15:6"
									},
									"scope": 1714,
									"src": "1371:503:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1534,
										"nodeType": "Block",
										"src": "2106:119:6",
										"statements": [
											{
												"id": 1533,
												"nodeType": "UncheckedBlock",
												"src": "2117:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1519,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1512,
																"src": "2146:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1520,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2146:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1526,
														"nodeType": "IfStatement",
														"src": "2142:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1522,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2162:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1524,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1518,
															"id": 1525,
															"nodeType": "Return",
															"src": "2154:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2194:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1528,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1510,
																		"src": "2200:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1529,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1512,
																		"src": "2204:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2200:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1531,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2193:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1518,
														"id": 1532,
														"nodeType": "Return",
														"src": "2186:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1508,
										"nodeType": "StructuredDocumentation",
										"src": "1882:142:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2039:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2054:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2046:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2065:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2057:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:22:6"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2091:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1535,
												"src": "2097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1516,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:15:6"
									},
									"scope": 1714,
									"src": "2030:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "2467:119:6",
										"statements": [
											{
												"id": 1561,
												"nodeType": "UncheckedBlock",
												"src": "2478:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1547,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "2507:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2512:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2507:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1554,
														"nodeType": "IfStatement",
														"src": "2503:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2523:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2530:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1552,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1546,
															"id": 1553,
															"nodeType": "Return",
															"src": "2515:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2555:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1556,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "2561:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1557,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1540,
																		"src": "2565:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2561:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1559,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2554:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1546,
														"id": 1560,
														"nodeType": "Return",
														"src": "2547:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1536,
										"nodeType": "StructuredDocumentation",
										"src": "2233:152:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2400:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2415:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2407:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2426:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2418:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:22:6"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2452:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2452:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "2458:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:15:6"
									},
									"scope": 1714,
									"src": "2391:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1577,
										"nodeType": "Block",
										"src": "2900:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1573,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "2918:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1574,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1568,
														"src": "2922:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2918:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1572,
												"id": 1576,
												"nodeType": "Return",
												"src": "2911:12:6"
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "2594:233:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2842:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2854:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2846:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2865:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2857:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:22:6"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1578,
												"src": "2891:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:9:6"
									},
									"scope": 1714,
									"src": "2833:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1592,
										"nodeType": "Block",
										"src": "3281:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1588,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1581,
														"src": "3299:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1589,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1583,
														"src": "3303:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3299:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1587,
												"id": 1591,
												"nodeType": "Return",
												"src": "3292:12:6"
											}
										]
									},
									"documentation": {
										"id": 1579,
										"nodeType": "StructuredDocumentation",
										"src": "2939:269:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3223:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1581,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3235:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "3227:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1580,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3246:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "3238:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3226:22:6"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1593,
												"src": "3272:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3271:9:6"
									},
									"scope": 1714,
									"src": "3214:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1607,
										"nodeType": "Block",
										"src": "3638:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1603,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1596,
														"src": "3656:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1604,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1598,
														"src": "3660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3656:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1602,
												"id": 1606,
												"nodeType": "Return",
												"src": "3649:12:6"
											}
										]
									},
									"documentation": {
										"id": 1594,
										"nodeType": "StructuredDocumentation",
										"src": "3320:245:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3580:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3592:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3584:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3603:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3595:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3583:22:6"
									},
									"returnParameters": {
										"id": 1602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1608,
												"src": "3629:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3628:9:6"
									},
									"scope": 1714,
									"src": "3571:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1622,
										"nodeType": "Block",
										"src": "4037:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1618,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1611,
														"src": "4055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1619,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "4059:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4055:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1617,
												"id": 1621,
												"nodeType": "Return",
												"src": "4048:12:6"
											}
										]
									},
									"documentation": {
										"id": 1609,
										"nodeType": "StructuredDocumentation",
										"src": "3677:287:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3979:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "3983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4002:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "3994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:22:6"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1623,
												"src": "4028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:9:6"
									},
									"scope": 1714,
									"src": "3970:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "4602:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1633,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1626,
														"src": "4620:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1634,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1628,
														"src": "4624:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4620:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1632,
												"id": 1636,
												"nodeType": "Return",
												"src": "4613:12:6"
											}
										]
									},
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "4076:453:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4544:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4556:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4548:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4567:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4559:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4547:22:6"
									},
									"returnParameters": {
										"id": 1632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4593:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:9:6"
									},
									"scope": 1714,
									"src": "4535:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "5241:111:6",
										"statements": [
											{
												"id": 1661,
												"nodeType": "UncheckedBlock",
												"src": "5252:93:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1651,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1643,
																		"src": "5285:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1652,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1641,
																		"src": "5290:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5285:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1654,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "5293:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1650,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5277:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5277:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1656,
														"nodeType": "ExpressionStatement",
														"src": "5277:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1657,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "5328:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1658,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1643,
																"src": "5332:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5328:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1649,
														"id": 1660,
														"nodeType": "Return",
														"src": "5321:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "4641:465:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5121:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5189:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5175:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1644,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5175:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:84:6"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "5232:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1647,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5231:9:6"
									},
									"scope": 1714,
									"src": "5112:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "5979:110:6",
										"statements": [
											{
												"id": 1686,
												"nodeType": "UncheckedBlock",
												"src": "5990:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1676,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1668,
																		"src": "6023:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6027:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6023:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1679,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1670,
																	"src": "6030:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1675,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6015:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6015:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1681,
														"nodeType": "ExpressionStatement",
														"src": "6015:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1682,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "6065:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1683,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1668,
																"src": "6069:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6065:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1674,
														"id": 1685,
														"nodeType": "Return",
														"src": "6058:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "5360:484:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5881:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5873:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1665,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5901:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5893:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5927:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5913:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5913:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:84:6"
									},
									"returnParameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1688,
												"src": "5970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:9:6"
									},
									"scope": 1714,
									"src": "5850:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "6881:110:6",
										"statements": [
											{
												"id": 1711,
												"nodeType": "UncheckedBlock",
												"src": "6892:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1701,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1693,
																		"src": "6925:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1702,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6929:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6925:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1704,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1695,
																	"src": "6932:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1700,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6917:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6917:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1706,
														"nodeType": "ExpressionStatement",
														"src": "6917:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1707,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "6967:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1708,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "6971:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6967:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1699,
														"id": 1710,
														"nodeType": "Return",
														"src": "6960:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "6097:649:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6761:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6783:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6775:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6803:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6795:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6795:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6829:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6815:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1694,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6815:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6764:84:6"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "6872:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6872:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6871:9:6"
									},
									"scope": 1714,
									"src": "6752:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1715,
							"src": "482:6512:6",
							"usedErrors": []
						}
					],
					"src": "95:6901:6"
				},
				"id": 6
			}
		}
	}
}
{
	"id": "154fd91b1ce9c6eee73321e382ba0539",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"inviter_presell/stake.sol": {
				"content": "pragma solidity ^0.8.10;\r\n\r\n\r\nimport \"./adminable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\n\r\ncontract StakingRewards is Adminable , ReentrancyGuard{\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public rewardsToken;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 public totalRewards = 400 * 10 ** 18;\r\n    uint256 public startTime;\r\n    uint256 public rateInterval = 1 days;\r\n    uint256 public rateIntervalNumerator = 5;\r\n    uint256 public rateIntervalDenominator = 1000;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public userLastUpdateTime;\r\n\r\n    uint256 private _totalPowers;\r\n    mapping(address => uint256) private _balances;\r\n\r\n\r\n\r\n    modifier updateReward(address account) {\r\n        uint256 time = userLastUpdateTime[account];\r\n        if(time == 0) {\r\n            time = startTime;\r\n        }\r\n        uint256 rate = getTimeWeightedAveRate(time, block.timestamp);\r\n        rewardPerTokenStored = rewardPerToken(rate);\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            userLastUpdateTime[account] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setStartTime(uint256 time) public onlyAdmin {\r\n        startTime = time;\r\n    }\r\n\r\n    function totalPowers() external view returns (uint256) {\r\n        return _totalPowers;\r\n    }\r\n\r\n    function powersOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getCurRewardPool() public view returns (uint256) {\r\n        return _getRewardPool(block.timestamp);\r\n    }\r\n\r\n    function _getRewardPool(uint256 time) private view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value * rateIntervalNumerator / rateIntervalDenominator;\r\n    }\r\n\r\n    function getCurRewardRate() public view returns (uint256) {\r\n        return _getRewardRate(block.timestamp);\r\n    }\r\n\r\n    function _getRewardRate(uint256 time) private view returns (uint256) {\r\n        uint256 curPoolAmount = _getRewardPool(time);\r\n        uint256 rewardRate = curPoolAmount.div(rateInterval);\r\n        return rewardRate;\r\n    }\r\n\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function rewardPerToken(uint256 rewardRate) public view returns (uint256) {\r\n        if (_totalPowers == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    // Time-weighted average rate\r\n    function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){\r\n        \r\n        if(startTime == 0 || leftTime >= rightTime) {\r\n            return 0;\r\n        }\r\n\r\n        if(leftTime < startTime) {\r\n            leftTime = startTime;\r\n        }\r\n\r\n        uint256 tmp = leftTime + rateInterval;\r\n        uint256 leftInterval = rateInterval - tmp % rateInterval;\r\n        uint256 leftReward = _getRewardPool(leftTime) * leftInterval / rateInterval;\r\n\r\n        uint256 rightInterval = (rightTime - startTime) % rateInterval;\r\n        uint256 rightReward = _getRewardPool(rightTime) * rightInterval / rateInterval;\r\n\r\n        // 存在被减数大于减数得情况\r\n        uint256 midInterval = rightTime - rightInterval - leftInterval - tmp;\r\n        uint256 startReward = _getRewardPool(tmp + leftInterval); \r\n        uint256 midTotalReward = startReward;\r\n        uint256 nextReward = startReward;\r\n        uint256 frontReward = _getRewardPool(tmp + leftInterval);\r\n        for(uint256 i = 0; i < midInterval / rateInterval; ++i) {\r\n            frontReward = nextReward;\r\n            nextReward = frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator;\r\n            midTotalReward = midTotalReward + nextReward;\r\n        }\r\n        return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime);\r\n    }\r\n\r\n    function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalPowers = _totalPowers.add(amount);\r\n        _balances[user] = _balances[user].add(amount);\r\n        emit Staked(user, amount);\r\n    }\r\n\r\n\r\n\r\n    function getReward() public nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n}"
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Contract module that helps prevent reentrant calls to a function.\r\n *\r\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\r\n * available, which can be applied to functions to make sure there are no nested\r\n * (reentrant) calls to them.\r\n *\r\n * Note that because there is a single `nonReentrant` guard, functions marked as\r\n * `nonReentrant` may not call one another. This can be worked around by making\r\n * those functions `private`, and then adding `external` `nonReentrant` entry\r\n * points to them.\r\n *\r\n * TIP: If you would like to learn more about reentrancy and alternative ways\r\n * to protect against it, check out our blog post\r\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\r\n */\r\nabstract contract ReentrancyGuard {\r\n    // Booleans are more expensive than uint256 or any type that takes up a full\r\n    // word because each write operation emits an extra SLOAD to first read the\r\n    // slot's contents, replace the bits taken up by the boolean, and then write\r\n    // back. This is the compiler's defense against contract upgrades and\r\n    // pointer aliasing, and it cannot be disabled.\r\n\r\n    // The values being non-zero value makes deployment a bit more expensive,\r\n    // but in exchange the refund on every call to nonReentrant will be lower in\r\n    // amount. Since refunds are capped to a percentage of the total\r\n    // transaction's gas, it is best to keep them low in cases like this one, to\r\n    // increase the likelihood of the full refund coming into effect.\r\n    uint256 private constant _NOT_ENTERED = 1;\r\n    uint256 private constant _ENTERED = 2;\r\n\r\n    uint256 private _status;\r\n\r\n    constructor() {\r\n        _status = _NOT_ENTERED;\r\n    }\r\n\r\n    /**\r\n     * @dev Prevents a contract from calling itself, directly or indirectly.\r\n     * Calling a `nonReentrant` function from another `nonReentrant`\r\n     * function is not supported. It is possible to prevent this from happening\r\n     * by making the `nonReentrant` function external, and making it call a\r\n     * `private` function that does the actual work.\r\n     */\r\n    modifier nonReentrant() {\r\n        // On the first call to nonReentrant, _notEntered will be true\r\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\r\n\r\n        // Any calls to nonReentrant after this point will fail\r\n        _status = _ENTERED;\r\n\r\n        _;\r\n\r\n        // By storing the original value once again, a refund is triggered (see\r\n        // https://eips.ethereum.org/EIPS/eip-2200)\r\n        _status = _NOT_ENTERED;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../IERC20.sol\";\r\nimport \"../../../utils/Address.sol\";\r\n\r\n/**\r\n * @title SafeERC20\r\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\r\n * contract returns false). Tokens that return no value (and instead revert or\r\n * throw on failure) are also supported, non-reverting calls are assumed to be\r\n * successful.\r\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\r\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\r\n */\r\nlibrary SafeERC20 {\r\n    using Address for address;\r\n\r\n    function safeTransfer(\r\n        IERC20 token,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\r\n    }\r\n\r\n    function safeTransferFrom(\r\n        IERC20 token,\r\n        address from,\r\n        address to,\r\n        uint256 value\r\n    ) internal {\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\r\n    }\r\n\r\n    /**\r\n     * @dev Deprecated. This function has issues similar to the ones found in\r\n     * {IERC20-approve}, and its usage is discouraged.\r\n     *\r\n     * Whenever possible, use {safeIncreaseAllowance} and\r\n     * {safeDecreaseAllowance} instead.\r\n     */\r\n    function safeApprove(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        // safeApprove should only be called when setting an initial allowance,\r\n        // or when resetting it to zero. To increase and decrease it, use\r\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\r\n        require(\r\n            (value == 0) || (token.allowance(address(this), spender) == 0),\r\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\r\n        );\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\r\n    }\r\n\r\n    function safeIncreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\r\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n    }\r\n\r\n    function safeDecreaseAllowance(\r\n        IERC20 token,\r\n        address spender,\r\n        uint256 value\r\n    ) internal {\r\n        unchecked {\r\n            uint256 oldAllowance = token.allowance(address(this), spender);\r\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\r\n            uint256 newAllowance = oldAllowance - value;\r\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\r\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\r\n     * @param token The token targeted by the call.\r\n     * @param data The call data (encoded using abi.encode or one of its variants).\r\n     */\r\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\r\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\r\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\r\n        // the target address contains contract code and also asserts for success in the low-level call.\r\n\r\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\r\n        if (returndata.length > 0) {\r\n            // Return data is optional\r\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n// CAUTION\r\n// This version of SafeMath should only be used with Solidity 0.8 or later,\r\n// because it relies on the compiler's built in overflow checks.\r\n\r\n/**\r\n * @dev Wrappers over Solidity's arithmetic operations.\r\n *\r\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\r\n * now has built in overflow checking.\r\n */\r\nlibrary SafeMath {\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            uint256 c = a + b;\r\n            if (c < a) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b > a) return (false, 0);\r\n            return (true, a - b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\r\n            // benefit is lost if 'b' is also tested.\r\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\r\n            if (a == 0) return (true, 0);\r\n            uint256 c = a * b;\r\n            if (c / a != b) return (false, 0);\r\n            return (true, c);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a / b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\r\n        unchecked {\r\n            if (b == 0) return (false, 0);\r\n            return (true, a % b);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the addition of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `+` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Addition cannot overflow.\r\n     */\r\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a + b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a - b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the multiplication of two unsigned integers, reverting on\r\n     * overflow.\r\n     *\r\n     * Counterpart to Solidity's `*` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Multiplication cannot overflow.\r\n     */\r\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a * b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a / b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting when dividing by zero.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\r\n        return a % b;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\r\n     * overflow (when the result is negative).\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {trySub}.\r\n     *\r\n     * Counterpart to Solidity's `-` operator.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - Subtraction cannot overflow.\r\n     */\r\n    function sub(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b <= a, errorMessage);\r\n            return a - b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\r\n     * division by zero. The result is rounded towards zero.\r\n     *\r\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\r\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\r\n     * uses an invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function div(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a / b;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\r\n     * reverting with custom message when dividing by zero.\r\n     *\r\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\r\n     * message unnecessarily. For custom revert reasons use {tryMod}.\r\n     *\r\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\r\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\r\n     * invalid opcode to revert (consuming all remaining gas).\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - The divisor cannot be zero.\r\n     */\r\n    function mod(\r\n        uint256 a,\r\n        uint256 b,\r\n        string memory errorMessage\r\n    ) internal pure returns (uint256) {\r\n        unchecked {\r\n            require(b > 0, errorMessage);\r\n            return a % b;\r\n        }\r\n    }\r\n}\r\n"
			},
			"inviter_presell/adminable.sol": {
				"content": "\r\npragma solidity ^0.8.16;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Adminable is Context {\r\n    mapping(address => bool) private _admins;\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ModificationAdmin(address indexed admin, bool oldState, bool newState);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Adminable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function isAdmin(address account) public view virtual returns (bool) {\r\n        return _admins[account];\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    function modificationAdmin(address admin, bool state) public virtual onlyOwner {\r\n        emit ModificationAdmin(admin,  _admins[admin], state);\r\n        _admins[admin] = state;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Collection of functions related to the address type\r\n */\r\nlibrary Address {\r\n    /**\r\n     * @dev Returns true if `account` is a contract.\r\n     *\r\n     * [IMPORTANT]\r\n     * ====\r\n     * It is unsafe to assume that an address for which this function returns\r\n     * false is an externally-owned account (EOA) and not a contract.\r\n     *\r\n     * Among others, `isContract` will return false for the following\r\n     * types of addresses:\r\n     *\r\n     *  - an externally-owned account\r\n     *  - a contract in construction\r\n     *  - an address where a contract will be created\r\n     *  - an address where a contract lived, but was destroyed\r\n     * ====\r\n     */\r\n    function isContract(address account) internal view returns (bool) {\r\n        // This method relies on extcodesize, which returns 0 for contracts in\r\n        // construction, since the code is only stored at the end of the\r\n        // constructor execution.\r\n\r\n        uint256 size;\r\n        assembly {\r\n            size := extcodesize(account)\r\n        }\r\n        return size > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\r\n     * `recipient`, forwarding all available gas and reverting on errors.\r\n     *\r\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\r\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\r\n     * imposed by `transfer`, making them unable to receive funds via\r\n     * `transfer`. {sendValue} removes this limitation.\r\n     *\r\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\r\n     *\r\n     * IMPORTANT: because control is transferred to `recipient`, care must be\r\n     * taken to not create reentrancy vulnerabilities. Consider using\r\n     * {ReentrancyGuard} or the\r\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\r\n     */\r\n    function sendValue(address payable recipient, uint256 amount) internal {\r\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\r\n\r\n        (bool success, ) = recipient.call{value: amount}(\"\");\r\n        require(success, \"Address: unable to send value, recipient may have reverted\");\r\n    }\r\n\r\n    /**\r\n     * @dev Performs a Solidity function call using a low level `call`. A\r\n     * plain `call` is an unsafe replacement for a function call: use this\r\n     * function instead.\r\n     *\r\n     * If `target` reverts with a revert reason, it is bubbled up by this\r\n     * function (like regular Solidity function calls).\r\n     *\r\n     * Returns the raw returned data. To convert to the expected return value,\r\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `target` must be a contract.\r\n     * - calling `target` with `data` must not revert.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionCall(target, data, \"Address: low-level call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\r\n     * `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, 0, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but also transferring `value` wei to `target`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the calling contract must have an ETH balance of at least `value`.\r\n     * - the called Solidity function must be `payable`.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value\r\n    ) internal returns (bytes memory) {\r\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\r\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\r\n     *\r\n     * _Available since v3.1._\r\n     */\r\n    function functionCallWithValue(\r\n        address target,\r\n        bytes memory data,\r\n        uint256 value,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\r\n        require(isContract(target), \"Address: call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\r\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a static call.\r\n     *\r\n     * _Available since v3.3._\r\n     */\r\n    function functionStaticCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal view returns (bytes memory) {\r\n        require(isContract(target), \"Address: static call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.staticcall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\r\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\r\n     * but performing a delegate call.\r\n     *\r\n     * _Available since v3.4._\r\n     */\r\n    function functionDelegateCall(\r\n        address target,\r\n        bytes memory data,\r\n        string memory errorMessage\r\n    ) internal returns (bytes memory) {\r\n        require(isContract(target), \"Address: delegate call to non-contract\");\r\n\r\n        (bool success, bytes memory returndata) = target.delegatecall(data);\r\n        return verifyCallResult(success, returndata, errorMessage);\r\n    }\r\n\r\n    /**\r\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\r\n     * revert reason using the provided one.\r\n     *\r\n     * _Available since v4.3._\r\n     */\r\n    function verifyCallResult(\r\n        bool success,\r\n        bytes memory returndata,\r\n        string memory errorMessage\r\n    ) internal pure returns (bytes memory) {\r\n        if (success) {\r\n            return returndata;\r\n        } else {\r\n            // Look for revert reason and bubble it up if present\r\n            if (returndata.length > 0) {\r\n                // The easiest way to bubble the revert reason is using memory via assembly\r\n\r\n                assembly {\r\n                    let returndata_size := mload(returndata)\r\n                    revert(add(32, returndata), returndata_size)\r\n                }\r\n            } else {\r\n                revert(errorMessage);\r\n            }\r\n        }\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"inviter_presell/adminable.sol": {
				"Adminable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Adminable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/stake.sol": {
				"StakingRewards": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "leftTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rightTime",
									"type": "uint256"
								}
							],
							"name": "getTimeWeightedAveRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "powersOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalNumerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPowers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/stake.sol\":297:5821  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n    /* \"inviter_presell/stake.sol\":507:521  400 * 10 ** 18 */\n  0x15af1d78b58c400000\n    /* \"inviter_presell/stake.sol\":477:521  uint256 public totalRewards = 400 * 10 ** 18 */\n  0x05\n  sstore\n    /* \"inviter_presell/stake.sol\":589:595  1 days */\n  0x015180\n    /* \"inviter_presell/stake.sol\":559:595  uint256 public rateInterval = 1 days */\n  0x07\n  sstore\n    /* \"inviter_presell/stake.sol\":641:642  5 */\n  0x05\n    /* \"inviter_presell/stake.sol\":602:642  uint256 public rateIntervalNumerator = 5 */\n  0x08\n  sstore\n    /* \"inviter_presell/stake.sol\":690:694  1000 */\n  0x03e8\n    /* \"inviter_presell/stake.sol\":649:694  uint256 public rateIntervalDenominator = 1000 */\n  0x09\n  sstore\n    /* \"inviter_presell/stake.sol\":297:5821  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n  caller\n    /* \"inviter_presell/adminable.sol\":603:621  _transferOwnership */\n  tag_8\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1852  _status */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1845:1867  _status = _NOT_ENTERED */\n  sstore\n    /* \"inviter_presell/stake.sol\":297:5821  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  0x01\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  swap1\n  swap4\n  sstore\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  swap2\n  and\n  swap2\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  swap1\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  dup3\n  swap1\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n  0x00\n  swap1\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n  pop\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"inviter_presell/stake.sol\":297:5821  contract StakingRewards is Adminable , ReentrancyGuard{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/stake.sol\":297:5821  contract StakingRewards is Adminable , ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x80faa57d\n      gt\n      tag_30\n      jumpi\n      dup1\n      0xb79ec812\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xda4f8431\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0xb79ec812\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xcdda56e0\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x8b876347\n      gt\n      tag_33\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9499c549\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xadc9772e\n      eq\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x80faa57d\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x8107368b\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x874c120b\n      eq\n      tag_18\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup1\n      0x3d18b912\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x6917c501\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x6917c501\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7a6fcee7\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x3d18b912\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3e0a322d\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6139d4b4\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18e20ecf\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3c4045cf\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/stake.sol\":3335:3631  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_36\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n    tag_36:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"inviter_presell/stake.sol\":3335:3631  function earned(address account) public view returns (uint256) {... */\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":426:468  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_36\n      tag_43\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_43:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":477:521  uint256 public totalRewards = 400 * 10 ** 18 */\n    tag_5:\n      tag_36\n      sload(0x05)\n      dup2\n      jump\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_6:\n      tag_49\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      stop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_7:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_54:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      and\n        /* \"inviter_presell/adminable.sol\":1067:1071  bool */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      jump\n    tag_53:\n      mload(0x40)\n        /* \"#utility.yul\":1173:1187   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1166:1188   */\n      iszero\n        /* \"#utility.yul\":1148:1189   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1136:1138   */\n      0x20\n        /* \"#utility.yul\":1121:1139   */\n      add\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      tag_40\n        /* \"#utility.yul\":1008:1195   */\n      jump\n        /* \"inviter_presell/stake.sol\":602:642  uint256 public rateIntervalNumerator = 5 */\n    tag_8:\n      tag_36\n      sload(0x08)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":5385:5688  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_9:\n      tag_49\n      tag_62\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":1593:1681  function setStartTime(uint256 time) public onlyAdmin {... */\n    tag_10:\n      tag_49\n      tag_64\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_64:\n      tag_66\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":559:595  uint256 public rateInterval = 1 days */\n    tag_11:\n      tag_36\n      sload(0x07)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":1689:1782  function totalPowers() external view returns (uint256) {... */\n    tag_12:\n        /* \"inviter_presell/stake.sol\":1762:1774  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":1689:1782  function totalPowers() external view returns (uint256) {... */\n      jump(tag_36)\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_49\n      tag_74\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":528:552  uint256 public startTime */\n    tag_14:\n      tag_36\n      sload(0x06)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":649:694  uint256 public rateIntervalDenominator = 1000 */\n    tag_15:\n      tag_36\n      sload(0x09)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":2864:2971  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_16:\n        /* \"inviter_presell/stake.sol\":2948:2963  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2864:2971  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      jump(tag_36)\n        /* \"inviter_presell/stake.sol\":845:898  mapping(address => uint256) public userLastUpdateTime */\n    tag_17:\n      tag_36\n      tag_85\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_85:\n      mstore(0x20, 0x0d)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":2979:3327  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_18:\n      tag_36\n      tag_89\n      calldatasize\n      0x04\n      tag_65\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":781:838  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_19:\n      tag_36\n      tag_93\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_93:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_20:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_96:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1549:1581   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1531:1582   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1519:1521   */\n      0x20\n        /* \"#utility.yul\":1504:1522   */\n      add\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n      tag_40\n        /* \"#utility.yul\":1385:1588   */\n      jump\n        /* \"inviter_presell/stake.sol\":1909:2024  function getCurRewardPool() public view returns (uint256) {... */\n    tag_21:\n      tag_36\n      tag_101\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":5073:5373  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n    tag_22:\n      tag_49\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":1790:1901  function powersOf(address account) external view returns (uint256) {... */\n    tag_23:\n      tag_36\n      tag_108\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1875:1893  _balances[account] */\n      and\n        /* \"inviter_presell/stake.sol\":1848:1855  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1875:1893  _balances[account] */\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1875:1884  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":1875:1893  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"inviter_presell/stake.sol\":1790:1901  function powersOf(address account) external view returns (uint256) {... */\n      jump\n        /* \"inviter_presell/stake.sol\":701:730  uint256 public lastUpdateTime */\n    tag_24:\n      tag_36\n      sload(0x0a)\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":2508:2623  function getCurRewardRate() public view returns (uint256) {... */\n    tag_25:\n      tag_36\n      tag_115\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":393:419  IERC20 public rewardsToken */\n    tag_26:\n      sload(0x03)\n      tag_96\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"inviter_presell/stake.sol\":3674:5065  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_27:\n      tag_36\n      tag_122\n      calldatasize\n      0x04\n      tag_123\n      jump\t// in\n    tag_122:\n      tag_124\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":737:772  uint256 public rewardPerTokenStored */\n    tag_28:\n      tag_36\n      sload(0x0b)\n      dup2\n      jump\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_29:\n      tag_49\n      tag_130\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":3335:3631  function earned(address account) public view returns (uint256) {... */\n    tag_39:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":3447:3474  userLastUpdateTime[account] */\n      dup2\n      and\n        /* \"inviter_presell/stake.sol\":3389:3396  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3447:3474  userLastUpdateTime[account] */\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":3447:3465  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":3447:3474  userLastUpdateTime[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3389:3396  uint256 */\n      dup2\n      swap1\n        /* \"inviter_presell/stake.sol\":3424:3492  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_133\n      swap1\n        /* \"inviter_presell/stake.sol\":3476:3491  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":3424:3446  getTimeWeightedAveRate */\n      tag_124\n        /* \"inviter_presell/stake.sol\":3424:3492  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_133:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":3606:3622  rewards[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":3606:3613  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":3606:3622  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3558:3580  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":3558:3589  userRewardPerTokenPaid[account] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":3409:3492  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap2\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":3510:3623  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_134\n      swap2\n        /* \"inviter_presell/stake.sol\":3510:3601  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_135\n      swap1\n        /* \"inviter_presell/stake.sol\":3596:3600  1e18 */\n      0x0de0b6b3a7640000\n      swap1\n        /* \"inviter_presell/stake.sol\":3510:3591  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      tag_136\n      swap1\n        /* \"inviter_presell/stake.sol\":3533:3590  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      tag_137\n      swap1\n        /* \"inviter_presell/stake.sol\":3533:3553  rewardPerToken(rate) */\n      tag_138\n        /* \"inviter_presell/stake.sol\":3409:3492  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      dup9\n        /* \"inviter_presell/stake.sol\":3533:3547  rewardPerToken */\n      tag_90\n        /* \"inviter_presell/stake.sol\":3533:3553  rewardPerToken(rate) */\n      jump\t// in\n    tag_138:\n        /* \"inviter_presell/stake.sol\":3533:3557  rewardPerToken(rate).sub */\n      swap1\n      tag_139\n        /* \"inviter_presell/stake.sol\":3533:3590  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      jump\t// in\n    tag_137:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":3510:3528  _balances[account] */\n      dup10\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":3510:3519  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":3510:3528  _balances[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"inviter_presell/stake.sol\":3510:3532  _balances[account].mul */\n      tag_140\n        /* \"inviter_presell/stake.sol\":3510:3591  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      jump\t// in\n    tag_136:\n        /* \"inviter_presell/stake.sol\":3510:3595  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div */\n      swap1\n      tag_141\n        /* \"inviter_presell/stake.sol\":3510:3601  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      jump\t// in\n    tag_135:\n        /* \"inviter_presell/stake.sol\":3510:3605  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      swap1\n      tag_142\n        /* \"inviter_presell/stake.sol\":3510:3623  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      jump\t// in\n    tag_134:\n        /* \"inviter_presell/stake.sol\":3503:3623  return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap4\n        /* \"inviter_presell/stake.sol\":3335:3631  function earned(address account) public view returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_52:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      dup3\n      and\n        /* \"inviter_presell/adminable.sol\":1763:1770  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      dup3\n      mload\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      0xff\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2917:2931   */\n      iszero\n        /* \"#utility.yul\":2910:2932   */\n      iszero\n        /* \"#utility.yul\":2892:2933   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2976:2990   */\n      dup5\n      iszero\n        /* \"#utility.yul\":2969:2991   */\n      iszero\n        /* \"#utility.yul\":2949:2967   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":2942:2992   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      0x82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854\n      swap2\n        /* \"#utility.yul\":2865:2883   */\n      add\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"inviter_presell/adminable.sol\":1796:1803  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"inviter_presell/adminable.sol\":1796:1818  _admins[admin] = state */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":5385:5688  function getReward() public nonReentrant updateReward(msg.sender) {... */\n    tag_62:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3205:3207   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3187:3208   */\n      mstore\n        /* \"#utility.yul\":3244:3246   */\n      0x1f\n        /* \"#utility.yul\":3224:3242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3217:3247   */\n      mstore\n        /* \"#utility.yul\":3283:3316   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3263:3281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3256:3317   */\n      mstore\n        /* \"#utility.yul\":3334:3352   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_148\n        /* \"#utility.yul\":3003:3358   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_155:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"inviter_presell/stake.sol\":5439:5449  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1050:1062  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1065:1092  userLastUpdateTime[account] */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1065:1083  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1065:1092  userLastUpdateTime[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"inviter_presell/stake.sol\":1106:1115  time == 0 */\n      dup2\n      swap1\n      sub\n        /* \"inviter_presell/stake.sol\":1103:1160  if(time == 0) {... */\n      tag_159\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":1139:1148  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1103:1160  if(time == 0) {... */\n    tag_159:\n        /* \"inviter_presell/stake.sol\":1170:1182  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1185:1230  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_160\n        /* \"inviter_presell/stake.sol\":1208:1212  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1214:1229  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1185:1207  getTimeWeightedAveRate */\n      tag_124\n        /* \"inviter_presell/stake.sol\":1185:1230  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_160:\n        /* \"inviter_presell/stake.sol\":1170:1230  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1264:1284  rewardPerToken(rate) */\n      tag_161\n        /* \"inviter_presell/stake.sol\":1279:1283  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1264:1278  rewardPerToken */\n      tag_90\n        /* \"inviter_presell/stake.sol\":1264:1284  rewardPerToken(rate) */\n      jump\t// in\n    tag_161:\n        /* \"inviter_presell/stake.sol\":1241:1261  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1241:1284  rewardPerTokenStored = rewardPerToken(rate) */\n      sstore\n        /* \"inviter_presell/stake.sol\":2948:2963  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1295:1309  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1295:1338  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1353:1374  account != address(0) */\n      dup4\n      and\n      iszero\n        /* \"inviter_presell/stake.sol\":1349:1566  if (account != address(0)) {... */\n      tag_163\n      jumpi\n        /* \"inviter_presell/stake.sol\":1410:1425  earned(account) */\n      tag_164\n        /* \"inviter_presell/stake.sol\":1417:1424  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1410:1416  earned */\n      tag_39\n        /* \"inviter_presell/stake.sol\":1410:1425  earned(account) */\n      jump\t// in\n    tag_164:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1391:1407  rewards[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1391:1398  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1391:1407  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1391:1425  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"inviter_presell/stake.sol\":1474:1494  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1440:1462  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1440:1471  userRewardPerTokenPaid[account] */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1440:1494  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"inviter_presell/stake.sol\":1509:1527  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1509:1536  userLastUpdateTime[account] */\n      swap1\n      mstore\n      keccak256\n        /* \"inviter_presell/stake.sol\":1539:1554  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1509:1554  userLastUpdateTime[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"inviter_presell/stake.sol\":1349:1566  if (account != address(0)) {... */\n    tag_163:\n        /* \"inviter_presell/stake.sol\":5487:5497  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":5462:5476  uint256 reward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5479:5498  rewards[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":5479:5486  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":5479:5498  rewards[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5513:5523  reward > 0 */\n      dup1\n      iszero\n        /* \"inviter_presell/stake.sol\":5509:5681  if (reward > 0) {... */\n      tag_166\n      jumpi\n        /* \"inviter_presell/stake.sol\":5548:5558  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":5562:5563  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5540:5559  rewards[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":5540:5547  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":5540:5559  rewards[msg.sender] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":5540:5563  rewards[msg.sender] = 0 */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"inviter_presell/stake.sol\":5578:5590  rewardsToken */\n      sload(0x03)\n        /* \"inviter_presell/stake.sol\":5578:5619  rewardsToken.transfer(msg.sender, reward) */\n      swap2\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":3537:3588   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3604:3622   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3597:3631   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":5578:5590  rewardsToken */\n      and\n      swap1\n        /* \"inviter_presell/stake.sol\":5578:5599  rewardsToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3510:3528   */\n      0x44\n      add\n        /* \"inviter_presell/stake.sol\":5578:5619  rewardsToken.transfer(msg.sender, reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_170\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n      pop\n        /* \"inviter_presell/stake.sol\":5639:5669  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":5650:5660  msg.sender */\n      caller\n      swap1\n        /* \"inviter_presell/stake.sol\":5639:5669  RewardPaid(msg.sender, reward) */\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n      swap1\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"inviter_presell/stake.sol\":5639:5669  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":5509:5681  if (reward > 0) {... */\n    tag_166:\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":5385:5688  function getReward() public nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1593:1681  function setStartTime(uint256 time) public onlyAdmin {... */\n    tag_66:\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_175\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_54\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n    tag_175:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_179\n      jump\t// in\n    tag_177:\n        /* \"inviter_presell/stake.sol\":1657:1666  startTime */\n      0x06\n        /* \"inviter_presell/stake.sol\":1657:1673  startTime = time */\n      sstore\n        /* \"inviter_presell/stake.sol\":1593:1681  function setStartTime(uint256 time) public onlyAdmin {... */\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_74:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_185:\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      tag_188\n        /* \"inviter_presell/adminable.sol\":1215:1216  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1188:1206  _transferOwnership */\n      tag_189\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_188:\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2979:3327  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_90:\n        /* \"inviter_presell/stake.sol\":3044:3051  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3068:3080  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":3084:3085  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3068:3085  _totalPowers == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":3064:3141  if (_totalPowers == 0) {... */\n      tag_192\n      jumpi\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3109:3129  rewardPerTokenStored */\n      sload(0x0b)\n      swap1\n        /* \"inviter_presell/stake.sol\":2979:3327  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3064:3141  if (_totalPowers == 0) {... */\n    tag_192:\n        /* \"inviter_presell/stake.sol\":3171:3319  rewardPerTokenStored.add(... */\n      tag_193\n        /* \"inviter_presell/stake.sol\":3214:3304  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      tag_194\n        /* \"inviter_presell/stake.sol\":3291:3303  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":3214:3286  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_136\n        /* \"inviter_presell/stake.sol\":3281:3285  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":3214:3276  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_197\n        /* \"inviter_presell/stake.sol\":3265:3275  rewardRate */\n      dup8\n        /* \"inviter_presell/stake.sol\":3214:3260  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_197\n        /* \"inviter_presell/stake.sol\":3245:3259  lastUpdateTime */\n      sload(0x0a)\n        /* \"inviter_presell/stake.sol\":3214:3240  lastTimeRewardApplicable() */\n      tag_138\n        /* \"inviter_presell/stake.sol\":2948:2963  block.timestamp */\n      timestamp\n      swap1\n        /* \"inviter_presell/stake.sol\":2864:2971  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      jump\n        /* \"inviter_presell/stake.sol\":3214:3260  lastTimeRewardApplicable().sub(lastUpdateTime) */\n    tag_197:\n        /* \"inviter_presell/stake.sol\":3214:3264  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      swap1\n      tag_140\n        /* \"inviter_presell/stake.sol\":3214:3276  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":3214:3304  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n    tag_194:\n        /* \"inviter_presell/stake.sol\":3171:3191  rewardPerTokenStored */\n      sload(0x0b)\n      swap1\n        /* \"inviter_presell/stake.sol\":3171:3195  rewardPerTokenStored.add */\n      tag_142\n        /* \"inviter_presell/stake.sol\":3171:3319  rewardPerTokenStored.add(... */\n      jump\t// in\n    tag_193:\n        /* \"inviter_presell/stake.sol\":3151:3319  return... */\n      swap3\n        /* \"inviter_presell/stake.sol\":2979:3327  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1909:2024  function getCurRewardPool() public view returns (uint256) {... */\n    tag_101:\n        /* \"inviter_presell/stake.sol\":1958:1965  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1985:2016  _getRewardPool(block.timestamp) */\n      tag_201\n        /* \"inviter_presell/stake.sol\":2000:2015  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1985:1999  _getRewardPool */\n      tag_202\n        /* \"inviter_presell/stake.sol\":1985:2016  _getRewardPool(block.timestamp) */\n      jump\t// in\n    tag_201:\n        /* \"inviter_presell/stake.sol\":1978:2016  return _getRewardPool(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1909:2024  function getCurRewardPool() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":5073:5373  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n    tag_106:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2383  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2376:2395  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_204\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3205:3207   */\n      0x20\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3187:3208   */\n      mstore\n        /* \"#utility.yul\":3244:3246   */\n      0x1f\n        /* \"#utility.yul\":3224:3242   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3217:3247   */\n      mstore\n        /* \"#utility.yul\":3283:3316   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":3263:3281   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3256:3317   */\n      mstore\n        /* \"#utility.yul\":3334:3352   */\n      0x64\n      add\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_148\n        /* \"#utility.yul\":3003:3358   */\n      jump\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2368:2431  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n    tag_204:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1778:1779  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2509:2527  _status = _ENTERED */\n      dup1\n      sstore\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_207\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_54\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n    tag_207:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_179\n      jump\t// in\n    tag_209:\n        /* \"inviter_presell/stake.sol\":5163:5173  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1050:1062  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1065:1092  userLastUpdateTime[account] */\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1065:1083  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1065:1092  userLastUpdateTime[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"inviter_presell/stake.sol\":1106:1115  time == 0 */\n      dup2\n      swap1\n      sub\n        /* \"inviter_presell/stake.sol\":1103:1160  if(time == 0) {... */\n      tag_212\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":1139:1148  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1103:1160  if(time == 0) {... */\n    tag_212:\n        /* \"inviter_presell/stake.sol\":1170:1182  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1185:1230  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_213\n        /* \"inviter_presell/stake.sol\":1208:1212  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1214:1229  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1185:1207  getTimeWeightedAveRate */\n      tag_124\n        /* \"inviter_presell/stake.sol\":1185:1230  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_213:\n        /* \"inviter_presell/stake.sol\":1170:1230  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1264:1284  rewardPerToken(rate) */\n      tag_214\n        /* \"inviter_presell/stake.sol\":1279:1283  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1264:1278  rewardPerToken */\n      tag_90\n        /* \"inviter_presell/stake.sol\":1264:1284  rewardPerToken(rate) */\n      jump\t// in\n    tag_214:\n        /* \"inviter_presell/stake.sol\":1241:1261  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1241:1284  rewardPerTokenStored = rewardPerToken(rate) */\n      sstore\n        /* \"inviter_presell/stake.sol\":2948:2963  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1295:1309  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1295:1338  lastUpdateTime = lastTimeRewardApplicable() */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1353:1374  account != address(0) */\n      dup4\n      and\n      iszero\n        /* \"inviter_presell/stake.sol\":1349:1566  if (account != address(0)) {... */\n      tag_216\n      jumpi\n        /* \"inviter_presell/stake.sol\":1410:1425  earned(account) */\n      tag_217\n        /* \"inviter_presell/stake.sol\":1417:1424  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1410:1416  earned */\n      tag_39\n        /* \"inviter_presell/stake.sol\":1410:1425  earned(account) */\n      jump\t// in\n    tag_217:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":1391:1407  rewards[account] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":1391:1398  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1391:1407  rewards[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1391:1425  rewards[account] = earned(account) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"inviter_presell/stake.sol\":1474:1494  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1440:1462  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1440:1471  userRewardPerTokenPaid[account] */\n      dup3\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"inviter_presell/stake.sol\":1440:1494  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      sstore\n        /* \"inviter_presell/stake.sol\":1509:1527  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1509:1536  userLastUpdateTime[account] */\n      swap1\n      mstore\n      keccak256\n        /* \"inviter_presell/stake.sol\":1539:1554  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1509:1554  userLastUpdateTime[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"inviter_presell/stake.sol\":1349:1566  if (account != address(0)) {... */\n    tag_216:\n        /* \"inviter_presell/stake.sol\":5203:5204  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5194:5200  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":5194:5204  amount > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":5186:5223  require(amount > 0, \"Cannot stake 0\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4497:4499   */\n      0x20\n        /* \"inviter_presell/stake.sol\":5186:5223  require(amount > 0, \"Cannot stake 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4479:4500   */\n      mstore\n        /* \"#utility.yul\":4536:4538   */\n      0x0e\n        /* \"#utility.yul\":4516:4534   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4509:4539   */\n      mstore\n      shl(0x94, 0x043616e6e6f74207374616b65203)\n        /* \"#utility.yul\":4555:4573   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4548:4592   */\n      mstore\n        /* \"#utility.yul\":4609:4627   */\n      0x64\n      add\n        /* \"inviter_presell/stake.sol\":5186:5223  require(amount > 0, \"Cannot stake 0\") */\n      tag_148\n        /* \"#utility.yul\":4295:4633   */\n      jump\n        /* \"inviter_presell/stake.sol\":5186:5223  require(amount > 0, \"Cannot stake 0\") */\n    tag_219:\n        /* \"inviter_presell/stake.sol\":5249:5261  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":5249:5273  _totalPowers.add(amount) */\n      tag_222\n      swap1\n        /* \"inviter_presell/stake.sol\":5266:5272  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":5249:5265  _totalPowers.add */\n      tag_142\n        /* \"inviter_presell/stake.sol\":5249:5273  _totalPowers.add(amount) */\n      jump\t// in\n    tag_222:\n        /* \"inviter_presell/stake.sol\":5234:5246  _totalPowers */\n      0x0e\n        /* \"inviter_presell/stake.sol\":5234:5273  _totalPowers = _totalPowers.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":5302:5317  _balances[user] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":5302:5311  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":5302:5317  _balances[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":5302:5329  _balances[user].add(amount) */\n      tag_223\n      swap1\n        /* \"inviter_presell/stake.sol\":5322:5328  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":5302:5321  _balances[user].add */\n      tag_142\n        /* \"inviter_presell/stake.sol\":5302:5329  _balances[user].add(amount) */\n      jump\t// in\n    tag_223:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/stake.sol\":5284:5299  _balances[user] */\n      dup7\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"inviter_presell/stake.sol\":5284:5293  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":5284:5299  _balances[user] */\n      0x20\n      mstore\n      0x40\n      swap1\n      dup2\n      swap1\n      keccak256\n        /* \"inviter_presell/stake.sol\":5284:5329  _balances[user] = _balances[user].add(amount) */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"inviter_presell/stake.sol\":5345:5365  Staked(user, amount) */\n      swap1\n      mload\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n      swap1\n      tag_224\n      swap1\n        /* \"inviter_presell/stake.sol\":5358:5364  amount */\n      dup8\n        /* \"#utility.yul\":529:554   */\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n      swap1\n        /* \"#utility.yul\":383:560   */\n      jump\n        /* \"inviter_presell/stake.sol\":5345:5365  Staked(user, amount) */\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1734:1735  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2695  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2688:2710  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":5073:5373  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2508:2623  function getCurRewardRate() public view returns (uint256) {... */\n    tag_115:\n        /* \"inviter_presell/stake.sol\":2557:2564  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2584:2615  _getRewardRate(block.timestamp) */\n      tag_201\n        /* \"inviter_presell/stake.sol\":2599:2614  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2584:2598  _getRewardRate */\n      tag_228\n        /* \"inviter_presell/stake.sol\":2584:2615  _getRewardRate(block.timestamp) */\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":3674:5065  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_124:\n        /* \"inviter_presell/stake.sol\":3764:3771  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3796:3805  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3809:3810  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3796:3810  startTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":3796:3835  startTime == 0 || leftTime >= rightTime */\n      dup1\n      tag_230\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":3826:3835  rightTime */\n      dup2\n        /* \"inviter_presell/stake.sol\":3814:3822  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":3814:3835  leftTime >= rightTime */\n      lt\n      iszero\n        /* \"inviter_presell/stake.sol\":3796:3835  startTime == 0 || leftTime >= rightTime */\n    tag_230:\n        /* \"inviter_presell/stake.sol\":3793:3872  if(startTime == 0 || leftTime >= rightTime) {... */\n      iszero\n      tag_231\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":3859:3860  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3852:3860  return 0 */\n      jump(tag_193)\n        /* \"inviter_presell/stake.sol\":3793:3872  if(startTime == 0 || leftTime >= rightTime) {... */\n    tag_231:\n        /* \"inviter_presell/stake.sol\":3898:3907  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3887:3895  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":3887:3907  leftTime < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":3884:3956  if(leftTime < startTime) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"inviter_presell/stake.sol\":3935:3944  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3924:3944  leftTime = startTime */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":3884:3956  if(leftTime < startTime) {... */\n    tag_232:\n        /* \"inviter_presell/stake.sol\":3968:3979  uint256 tmp */\n      0x00\n        /* \"inviter_presell/stake.sol\":3993:4005  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3982:3990  leftTime */\n      dup5\n        /* \"inviter_presell/stake.sol\":3982:4005  leftTime + rateInterval */\n      tag_233\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n        /* \"inviter_presell/stake.sol\":3968:4005  uint256 tmp = leftTime + rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4016:4036  uint256 leftInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":4060:4072  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4054:4057  tmp */\n      dup3\n        /* \"inviter_presell/stake.sol\":4054:4072  tmp % rateInterval */\n      tag_235\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_235:\n        /* \"inviter_presell/stake.sol\":4039:4051  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4039:4072  rateInterval - tmp % rateInterval */\n      tag_237\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n        /* \"inviter_presell/stake.sol\":4016:4072  uint256 leftInterval = rateInterval - tmp % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4083:4101  uint256 leftReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4146:4158  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4131:4143  leftInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":4104:4128  _getRewardPool(leftTime) */\n      tag_239\n        /* \"inviter_presell/stake.sol\":4119:4127  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":4104:4118  _getRewardPool */\n      tag_202\n        /* \"inviter_presell/stake.sol\":4104:4128  _getRewardPool(leftTime) */\n      jump\t// in\n    tag_239:\n        /* \"inviter_presell/stake.sol\":4104:4143  _getRewardPool(leftTime) * leftInterval */\n      tag_240\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"inviter_presell/stake.sol\":4104:4158  _getRewardPool(leftTime) * leftInterval / rateInterval */\n      tag_242\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n        /* \"inviter_presell/stake.sol\":4083:4158  uint256 leftReward = _getRewardPool(leftTime) * leftInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4171:4192  uint256 rightInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":4221:4233  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4208:4217  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":4196:4205  rightTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":4196:4217  rightTime - startTime */\n      tag_244\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_244:\n        /* \"inviter_presell/stake.sol\":4195:4233  (rightTime - startTime) % rateInterval */\n      tag_245\n      swap2\n      swap1\n      tag_236\n      jump\t// in\n    tag_245:\n        /* \"inviter_presell/stake.sol\":4171:4233  uint256 rightInterval = (rightTime - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4244:4263  uint256 rightReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4310:4322  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4294:4307  rightInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":4266:4291  _getRewardPool(rightTime) */\n      tag_246\n        /* \"inviter_presell/stake.sol\":4281:4290  rightTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":4266:4280  _getRewardPool */\n      tag_202\n        /* \"inviter_presell/stake.sol\":4266:4291  _getRewardPool(rightTime) */\n      jump\t// in\n    tag_246:\n        /* \"inviter_presell/stake.sol\":4266:4307  _getRewardPool(rightTime) * rightInterval */\n      tag_247\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_247:\n        /* \"inviter_presell/stake.sol\":4266:4322  _getRewardPool(rightTime) * rightInterval / rateInterval */\n      tag_248\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_248:\n        /* \"inviter_presell/stake.sol\":4244:4322  uint256 rightReward = _getRewardPool(rightTime) * rightInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4384:4403  uint256 midInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":4449:4452  tmp */\n      dup6\n        /* \"inviter_presell/stake.sol\":4434:4446  leftInterval */\n      dup6\n        /* \"inviter_presell/stake.sol\":4406:4431  rightTime - rightInterval */\n      tag_249\n        /* \"inviter_presell/stake.sol\":4418:4431  rightInterval */\n      dup6\n        /* \"inviter_presell/stake.sol\":4406:4415  rightTime */\n      dup12\n        /* \"inviter_presell/stake.sol\":4406:4431  rightTime - rightInterval */\n      tag_238\n      jump\t// in\n    tag_249:\n        /* \"inviter_presell/stake.sol\":4406:4446  rightTime - rightInterval - leftInterval */\n      tag_250\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_250:\n        /* \"inviter_presell/stake.sol\":4406:4452  rightTime - rightInterval - leftInterval - tmp */\n      tag_251\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_251:\n        /* \"inviter_presell/stake.sol\":4384:4452  uint256 midInterval = rightTime - rightInterval - leftInterval - tmp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4463:4482  uint256 startReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4485:4519  _getRewardPool(tmp + leftInterval) */\n      tag_252\n        /* \"inviter_presell/stake.sol\":4500:4518  tmp + leftInterval */\n      tag_253\n        /* \"inviter_presell/stake.sol\":4506:4518  leftInterval */\n      dup8\n        /* \"inviter_presell/stake.sol\":4500:4503  tmp */\n      dup10\n        /* \"inviter_presell/stake.sol\":4500:4518  tmp + leftInterval */\n      tag_234\n      jump\t// in\n    tag_253:\n        /* \"inviter_presell/stake.sol\":4485:4499  _getRewardPool */\n      tag_202\n        /* \"inviter_presell/stake.sol\":4485:4519  _getRewardPool(tmp + leftInterval) */\n      jump\t// in\n    tag_252:\n        /* \"inviter_presell/stake.sol\":4463:4519  uint256 startReward = _getRewardPool(tmp + leftInterval) */\n      swap1\n      pop\n      dup1\n      dup1\n        /* \"inviter_presell/stake.sol\":4531:4553  uint256 midTotalReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":4643:4677  _getRewardPool(tmp + leftInterval) */\n      tag_254\n        /* \"inviter_presell/stake.sol\":4658:4676  tmp + leftInterval */\n      tag_253\n        /* \"inviter_presell/stake.sol\":4664:4676  leftInterval */\n      dup11\n        /* \"inviter_presell/stake.sol\":4658:4661  tmp */\n      dup13\n        /* \"inviter_presell/stake.sol\":4658:4676  tmp + leftInterval */\n      tag_234\n      jump\t// in\n        /* \"inviter_presell/stake.sol\":4643:4677  _getRewardPool(tmp + leftInterval) */\n    tag_254:\n        /* \"inviter_presell/stake.sol\":4621:4677  uint256 frontReward = _getRewardPool(tmp + leftInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4692:4701  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":4688:4972  for(uint256 i = 0; i < midInterval / rateInterval; ++i) {... */\n    tag_256:\n        /* \"inviter_presell/stake.sol\":4725:4737  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4711:4737  midInterval / rateInterval */\n      tag_259\n      swap1\n        /* \"inviter_presell/stake.sol\":4711:4722  midInterval */\n      dup8\n        /* \"inviter_presell/stake.sol\":4711:4737  midInterval / rateInterval */\n      tag_243\n      jump\t// in\n    tag_259:\n        /* \"inviter_presell/stake.sol\":4707:4708  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":4707:4737  i < midInterval / rateInterval */\n      lt\n        /* \"inviter_presell/stake.sol\":4688:4972  for(uint256 i = 0; i < midInterval / rateInterval; ++i) {... */\n      iszero\n      tag_257\n      jumpi\n        /* \"inviter_presell/stake.sol\":4878:4901  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":4854:4875  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":4773:4783  nextReward */\n      dup5\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":4826:4850  frontReward - nextReward */\n      tag_260\n        /* \"inviter_presell/stake.sol\":4773:4783  nextReward */\n      dup5\n      dup1\n        /* \"inviter_presell/stake.sol\":4826:4850  frontReward - nextReward */\n      tag_238\n      jump\t// in\n    tag_260:\n        /* \"inviter_presell/stake.sol\":4825:4875  (frontReward - nextReward) * rateIntervalNumerator */\n      tag_261\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_261:\n        /* \"inviter_presell/stake.sol\":4825:4901  (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      tag_262\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_262:\n        /* \"inviter_presell/stake.sol\":4811:4901  frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      tag_263\n      swap1\n        /* \"inviter_presell/stake.sol\":4811:4822  frontReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":4811:4901  frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      tag_238\n      jump\t// in\n    tag_263:\n        /* \"inviter_presell/stake.sol\":4798:4901  nextReward = frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":4933:4960  midTotalReward + nextReward */\n      tag_264\n        /* \"inviter_presell/stake.sol\":4798:4901  nextReward = frontReward - (frontReward - nextReward) * rateIntervalNumerator / rateIntervalDenominator */\n      dup4\n        /* \"inviter_presell/stake.sol\":4933:4947  midTotalReward */\n      dup6\n        /* \"inviter_presell/stake.sol\":4933:4960  midTotalReward + nextReward */\n      tag_234\n      jump\t// in\n    tag_264:\n        /* \"inviter_presell/stake.sol\":4916:4960  midTotalReward = midTotalReward + nextReward */\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":4739:4742  ++i */\n      tag_265\n      dup2\n      tag_266\n      jump\t// in\n    tag_265:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4688:4972  for(uint256 i = 0; i < midInterval / rateInterval; ++i) {... */\n      jump(tag_256)\n    tag_257:\n      pop\n        /* \"inviter_presell/stake.sol\":5036:5056  rightTime - leftTime */\n      tag_267\n        /* \"inviter_presell/stake.sol\":5048:5056  leftTime */\n      dup14\n        /* \"inviter_presell/stake.sol\":5036:5045  rightTime */\n      dup14\n        /* \"inviter_presell/stake.sol\":5036:5056  rightTime - leftTime */\n      tag_238\n      jump\t// in\n    tag_267:\n        /* \"inviter_presell/stake.sol\":5020:5031  rightReward */\n      dup7\n        /* \"inviter_presell/stake.sol\":4990:5017  midTotalReward + leftReward */\n      tag_268\n        /* \"inviter_presell/stake.sol\":5007:5017  leftReward */\n      dup11\n        /* \"inviter_presell/stake.sol\":4990:5004  midTotalReward */\n      dup7\n        /* \"inviter_presell/stake.sol\":4990:5017  midTotalReward + leftReward */\n      tag_234\n      jump\t// in\n    tag_268:\n        /* \"inviter_presell/stake.sol\":4990:5031  midTotalReward + leftReward + rightReward */\n      tag_269\n      swap2\n      swap1\n      tag_234\n      jump\t// in\n    tag_269:\n        /* \"inviter_presell/stake.sol\":4989:5057  (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      tag_270\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_270:\n        /* \"inviter_presell/stake.sol\":4982:5057  return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      swap14\n        /* \"inviter_presell/stake.sol\":3674:5065  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n      swap13\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_131:\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_274\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_148\n      swap1\n      tag_149\n      jump\t// in\n    tag_274:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      dup2\n      and\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_277\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5922:5924   */\n      0x20\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5904:5925   */\n      mstore\n        /* \"#utility.yul\":5961:5963   */\n      0x26\n        /* \"#utility.yul\":5941:5959   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5934:5964   */\n      mstore\n        /* \"#utility.yul\":6000:6034   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":5980:5998   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5973:6035   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":6051:6069   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6044:6080   */\n      mstore\n        /* \"#utility.yul\":6097:6116   */\n      0x84\n      add\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_148\n        /* \"#utility.yul\":5720:6122   */\n      jump\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_277:\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      tag_280\n        /* \"inviter_presell/adminable.sol\":1418:1426  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1399:1417  _transferOwnership */\n      tag_189\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_280:\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3214:3312  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3272:3279  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3304  a - b */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3303:3304  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3300  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3299:3304  a - b */\n      tag_238\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3571:3669  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_140:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3629:3636  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3661  a * b */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3660:3661  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3657  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3656:3661  a * b */\n      tag_241\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3970:4068  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_141:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4028:4035  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4060  a / b */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4059:4060  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4056  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":4055:4060  a / b */\n      tag_243\n      jump\t// in\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2833:2931  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_142:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2891:2898  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2923  a + b */\n      tag_134\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2922:2923  b */\n      dup3\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2919  a */\n      dup5\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2918:2923  a + b */\n      tag_234\n      jump\t// in\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_189:\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      swap2\n      and\n      swap2\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      swap1\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      dup3\n      swap1\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n      0x00\n      swap1\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2032:2500  function _getRewardPool(uint256 time) private view returns (uint256) {... */\n    tag_202:\n        /* \"inviter_presell/stake.sol\":2092:2099  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2115:2124  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2128:2129  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2115:2129  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2112:2174  if(startTime == 0) {... */\n      tag_292\n      jumpi\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2153:2162  startTime */\n      sload(0x06)\n      swap1\n        /* \"inviter_presell/stake.sol\":2032:2500  function _getRewardPool(uint256 time) private view returns (uint256) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2112:2174  if(startTime == 0) {... */\n    tag_292:\n        /* \"inviter_presell/stake.sol\":2184:2197  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2221:2233  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2208:2217  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2201:2205  time */\n      dup5\n        /* \"inviter_presell/stake.sol\":2201:2217  time - startTime */\n      tag_293\n      swap2\n      swap1\n      tag_238\n      jump\t// in\n    tag_293:\n        /* \"inviter_presell/stake.sol\":2200:2233  (time - startTime) / rateInterval */\n      tag_294\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_294:\n        /* \"inviter_presell/stake.sol\":2200:2237  (time - startTime) / rateInterval + 1 */\n      tag_295\n      swap1\n        /* \"inviter_presell/stake.sol\":2236:2237  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2200:2237  (time - startTime) / rateInterval + 1 */\n      tag_234\n      jump\t// in\n    tag_295:\n        /* \"inviter_presell/stake.sol\":2264:2276  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2184:2237  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2248:2261  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2287:2420  for(uint256 i = 0; i < times; ++i) {... */\n    tag_296:\n        /* \"inviter_presell/stake.sol\":2310:2315  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2306:2307  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2306:2315  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2287:2420  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_297\n      jumpi\n        /* \"inviter_presell/stake.sol\":2385:2408  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2361:2382  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2353:2382  value * rateIntervalNumerator */\n      tag_299\n      swap1\n        /* \"inviter_presell/stake.sol\":2353:2358  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":2353:2382  value * rateIntervalNumerator */\n      tag_241\n      jump\t// in\n    tag_299:\n        /* \"inviter_presell/stake.sol\":2353:2408  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_300\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_300:\n        /* \"inviter_presell/stake.sol\":2345:2408  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_301\n      swap1\n        /* \"inviter_presell/stake.sol\":2345:2350  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2345:2408  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_238\n      jump\t// in\n    tag_301:\n        /* \"inviter_presell/stake.sol\":2337:2408  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2317:2320  ++i */\n      tag_302\n      dup2\n      tag_266\n      jump\t// in\n    tag_302:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2287:2420  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_296)\n    tag_297:\n      pop\n        /* \"inviter_presell/stake.sol\":2469:2492  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2445:2466  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2437:2466  value * rateIntervalNumerator */\n      tag_303\n      swap1\n        /* \"inviter_presell/stake.sol\":2437:2442  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2437:2466  value * rateIntervalNumerator */\n      tag_241\n      jump\t// in\n    tag_303:\n        /* \"inviter_presell/stake.sol\":2437:2492  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_304\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_304:\n        /* \"inviter_presell/stake.sol\":2430:2492  return value * rateIntervalNumerator / rateIntervalDenominator */\n      swap5\n        /* \"inviter_presell/stake.sol\":2032:2500  function _getRewardPool(uint256 time) private view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2631:2854  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n    tag_228:\n        /* \"inviter_presell/stake.sol\":2691:2698  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2711:2732  uint256 curPoolAmount */\n      dup1\n        /* \"inviter_presell/stake.sol\":2735:2755  _getRewardPool(time) */\n      tag_306\n        /* \"inviter_presell/stake.sol\":2750:2754  time */\n      dup4\n        /* \"inviter_presell/stake.sol\":2735:2749  _getRewardPool */\n      tag_202\n        /* \"inviter_presell/stake.sol\":2735:2755  _getRewardPool(time) */\n      jump\t// in\n    tag_306:\n        /* \"inviter_presell/stake.sol\":2711:2755  uint256 curPoolAmount = _getRewardPool(time) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2766:2784  uint256 rewardRate */\n      0x00\n        /* \"inviter_presell/stake.sol\":2787:2818  curPoolAmount.div(rateInterval) */\n      tag_304\n        /* \"inviter_presell/stake.sol\":2805:2817  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2787:2800  curPoolAmount */\n      dup4\n        /* \"inviter_presell/stake.sol\":2787:2804  curPoolAmount.div */\n      tag_141\n      swap1\n        /* \"inviter_presell/stake.sol\":2787:2818  curPoolAmount.div(rateInterval) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_308:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_314\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_314:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_38:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_316:\n        /* \"#utility.yul\":343:372   */\n      tag_134\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_308\n      jump\t// in\n        /* \"#utility.yul\":565:683   */\n    tag_309:\n        /* \"#utility.yul\":651:656   */\n      dup1\n        /* \"#utility.yul\":644:657   */\n      iszero\n        /* \"#utility.yul\":637:658   */\n      iszero\n        /* \"#utility.yul\":630:635   */\n      dup2\n        /* \"#utility.yul\":627:659   */\n      eq\n        /* \"#utility.yul\":617:677   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":673:674   */\n      0x00\n        /* \"#utility.yul\":670:671   */\n      dup1\n        /* \"#utility.yul\":663:675   */\n      revert\n        /* \"#utility.yul\":688:1003   */\n    tag_51:\n        /* \"#utility.yul\":753:759   */\n      0x00\n        /* \"#utility.yul\":761:767   */\n      dup1\n        /* \"#utility.yul\":814:816   */\n      0x40\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":793:800   */\n      dup6\n        /* \"#utility.yul\":789:812   */\n      sub\n        /* \"#utility.yul\":785:817   */\n      slt\n        /* \"#utility.yul\":782:834   */\n      iszero\n      tag_322\n      jumpi\n        /* \"#utility.yul\":830:831   */\n      0x00\n        /* \"#utility.yul\":827:828   */\n      dup1\n        /* \"#utility.yul\":820:832   */\n      revert\n        /* \"#utility.yul\":782:834   */\n    tag_322:\n        /* \"#utility.yul\":853:882   */\n      tag_323\n        /* \"#utility.yul\":872:881   */\n      dup4\n        /* \"#utility.yul\":853:882   */\n      tag_308\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":843:882   */\n      swap2\n      pop\n        /* \"#utility.yul\":932:934   */\n      0x20\n        /* \"#utility.yul\":921:930   */\n      dup4\n        /* \"#utility.yul\":917:935   */\n      add\n        /* \"#utility.yul\":904:936   */\n      calldataload\n        /* \"#utility.yul\":945:973   */\n      tag_324\n        /* \"#utility.yul\":967:972   */\n      dup2\n        /* \"#utility.yul\":945:973   */\n      tag_309\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":992:997   */\n      dup1\n        /* \"#utility.yul\":982:997   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":688:1003   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1200:1380   */\n    tag_65:\n        /* \"#utility.yul\":1259:1265   */\n      0x00\n        /* \"#utility.yul\":1312:1314   */\n      0x20\n        /* \"#utility.yul\":1300:1309   */\n      dup3\n        /* \"#utility.yul\":1291:1298   */\n      dup5\n        /* \"#utility.yul\":1287:1310   */\n      sub\n        /* \"#utility.yul\":1283:1315   */\n      slt\n        /* \"#utility.yul\":1280:1332   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":1328:1329   */\n      0x00\n        /* \"#utility.yul\":1325:1326   */\n      dup1\n        /* \"#utility.yul\":1318:1330   */\n      revert\n        /* \"#utility.yul\":1280:1332   */\n    tag_327:\n      pop\n        /* \"#utility.yul\":1351:1374   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1200:1380   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1593:1847   */\n    tag_105:\n        /* \"#utility.yul\":1661:1667   */\n      0x00\n        /* \"#utility.yul\":1669:1675   */\n      dup1\n        /* \"#utility.yul\":1722:1724   */\n      0x40\n        /* \"#utility.yul\":1710:1719   */\n      dup4\n        /* \"#utility.yul\":1701:1708   */\n      dup6\n        /* \"#utility.yul\":1697:1720   */\n      sub\n        /* \"#utility.yul\":1693:1725   */\n      slt\n        /* \"#utility.yul\":1690:1742   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":1738:1739   */\n      0x00\n        /* \"#utility.yul\":1735:1736   */\n      dup1\n        /* \"#utility.yul\":1728:1740   */\n      revert\n        /* \"#utility.yul\":1690:1742   */\n    tag_330:\n        /* \"#utility.yul\":1761:1790   */\n      tag_331\n        /* \"#utility.yul\":1780:1789   */\n      dup4\n        /* \"#utility.yul\":1761:1790   */\n      tag_308\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":1751:1790   */\n      swap5\n        /* \"#utility.yul\":1837:1839   */\n      0x20\n        /* \"#utility.yul\":1822:1840   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1809:1841   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1593:1847   */\n      jump\t// out\n        /* \"#utility.yul\":2074:2322   */\n    tag_123:\n        /* \"#utility.yul\":2142:2148   */\n      0x00\n        /* \"#utility.yul\":2150:2156   */\n      dup1\n        /* \"#utility.yul\":2203:2205   */\n      0x40\n        /* \"#utility.yul\":2191:2200   */\n      dup4\n        /* \"#utility.yul\":2182:2189   */\n      dup6\n        /* \"#utility.yul\":2178:2201   */\n      sub\n        /* \"#utility.yul\":2174:2206   */\n      slt\n        /* \"#utility.yul\":2171:2223   */\n      iszero\n      tag_334\n      jumpi\n        /* \"#utility.yul\":2219:2220   */\n      0x00\n        /* \"#utility.yul\":2216:2217   */\n      dup1\n        /* \"#utility.yul\":2209:2221   */\n      revert\n        /* \"#utility.yul\":2171:2223   */\n    tag_334:\n      pop\n      pop\n        /* \"#utility.yul\":2242:2265   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":2312:2314   */\n      0x20\n        /* \"#utility.yul\":2297:2315   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2284:2316   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2074:2322   */\n      jump\t// out\n        /* \"#utility.yul\":2327:2725   */\n    tag_149:\n        /* \"#utility.yul\":2529:2531   */\n      0x20\n        /* \"#utility.yul\":2511:2532   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":2568:2570   */\n      0x22\n        /* \"#utility.yul\":2548:2566   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2541:2571   */\n      mstore\n        /* \"#utility.yul\":2607:2641   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e\n        /* \"#utility.yul\":2602:2604   */\n      0x40\n        /* \"#utility.yul\":2587:2605   */\n      dup3\n      add\n        /* \"#utility.yul\":2580:2642   */\n      mstore\n      shl(0xf1, 0x32b9)\n        /* \"#utility.yul\":2673:2675   */\n      0x60\n        /* \"#utility.yul\":2658:2676   */\n      dup3\n      add\n        /* \"#utility.yul\":2651:2683   */\n      mstore\n        /* \"#utility.yul\":2715:2718   */\n      0x80\n        /* \"#utility.yul\":2700:2719   */\n      add\n      swap1\n        /* \"#utility.yul\":2327:2725   */\n      jump\t// out\n        /* \"#utility.yul\":3642:3887   */\n    tag_172:\n        /* \"#utility.yul\":3709:3715   */\n      0x00\n        /* \"#utility.yul\":3762:3764   */\n      0x20\n        /* \"#utility.yul\":3750:3759   */\n      dup3\n        /* \"#utility.yul\":3741:3748   */\n      dup5\n        /* \"#utility.yul\":3737:3760   */\n      sub\n        /* \"#utility.yul\":3733:3765   */\n      slt\n        /* \"#utility.yul\":3730:3782   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":3778:3779   */\n      0x00\n        /* \"#utility.yul\":3775:3776   */\n      dup1\n        /* \"#utility.yul\":3768:3780   */\n      revert\n        /* \"#utility.yul\":3730:3782   */\n    tag_340:\n        /* \"#utility.yul\":3810:3819   */\n      dup2\n        /* \"#utility.yul\":3804:3820   */\n      mload\n        /* \"#utility.yul\":3829:3857   */\n      tag_134\n        /* \"#utility.yul\":3851:3856   */\n      dup2\n        /* \"#utility.yul\":3829:3857   */\n      tag_309\n      jump\t// in\n        /* \"#utility.yul\":3892:4290   */\n    tag_179:\n        /* \"#utility.yul\":4094:4096   */\n      0x20\n        /* \"#utility.yul\":4076:4097   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4133:4135   */\n      0x22\n        /* \"#utility.yul\":4113:4131   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4106:4136   */\n      mstore\n        /* \"#utility.yul\":4172:4206   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d\n        /* \"#utility.yul\":4167:4169   */\n      0x40\n        /* \"#utility.yul\":4152:4170   */\n      dup3\n      add\n        /* \"#utility.yul\":4145:4207   */\n      mstore\n      shl(0xf1, 0x34b7)\n        /* \"#utility.yul\":4238:4240   */\n      0x60\n        /* \"#utility.yul\":4223:4241   */\n      dup3\n      add\n        /* \"#utility.yul\":4216:4248   */\n      mstore\n        /* \"#utility.yul\":4280:4283   */\n      0x80\n        /* \"#utility.yul\":4265:4284   */\n      add\n      swap1\n        /* \"#utility.yul\":3892:4290   */\n      jump\t// out\n        /* \"#utility.yul\":4638:4765   */\n    tag_310:\n        /* \"#utility.yul\":4699:4709   */\n      0x4e487b71\n        /* \"#utility.yul\":4694:4697   */\n      0xe0\n        /* \"#utility.yul\":4690:4710   */\n      shl\n        /* \"#utility.yul\":4687:4688   */\n      0x00\n        /* \"#utility.yul\":4680:4711   */\n      mstore\n        /* \"#utility.yul\":4730:4734   */\n      0x11\n        /* \"#utility.yul\":4727:4728   */\n      0x04\n        /* \"#utility.yul\":4720:4735   */\n      mstore\n        /* \"#utility.yul\":4754:4758   */\n      0x24\n        /* \"#utility.yul\":4751:4752   */\n      0x00\n        /* \"#utility.yul\":4744:4759   */\n      revert\n        /* \"#utility.yul\":4770:4895   */\n    tag_234:\n        /* \"#utility.yul\":4835:4844   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":4856:4866   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":4853:4889   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":4869:4887   */\n      tag_193\n      tag_310\n      jump\t// in\n        /* \"#utility.yul\":4900:5027   */\n    tag_311:\n        /* \"#utility.yul\":4961:4971   */\n      0x4e487b71\n        /* \"#utility.yul\":4956:4959   */\n      0xe0\n        /* \"#utility.yul\":4952:4972   */\n      shl\n        /* \"#utility.yul\":4949:4950   */\n      0x00\n        /* \"#utility.yul\":4942:4973   */\n      mstore\n        /* \"#utility.yul\":4992:4996   */\n      0x12\n        /* \"#utility.yul\":4989:4990   */\n      0x04\n        /* \"#utility.yul\":4982:4997   */\n      mstore\n        /* \"#utility.yul\":5016:5020   */\n      0x24\n        /* \"#utility.yul\":5013:5014   */\n      0x00\n        /* \"#utility.yul\":5006:5021   */\n      revert\n        /* \"#utility.yul\":5032:5144   */\n    tag_236:\n        /* \"#utility.yul\":5064:5065   */\n      0x00\n        /* \"#utility.yul\":5090:5091   */\n      dup3\n        /* \"#utility.yul\":5080:5115   */\n      tag_351\n      jumpi\n        /* \"#utility.yul\":5095:5113   */\n      tag_351\n      tag_311\n      jump\t// in\n    tag_351:\n      pop\n        /* \"#utility.yul\":5129:5138   */\n      mod\n      swap1\n        /* \"#utility.yul\":5032:5144   */\n      jump\t// out\n        /* \"#utility.yul\":5149:5277   */\n    tag_238:\n        /* \"#utility.yul\":5216:5225   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":5237:5248   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":5234:5271   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":5251:5269   */\n      tag_193\n      tag_310\n      jump\t// in\n        /* \"#utility.yul\":5282:5450   */\n    tag_241:\n        /* \"#utility.yul\":5355:5364   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":5386:5395   */\n      dup2\n      iszero\n        /* \"#utility.yul\":5403:5418   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":5397:5419   */\n      dup5\n      eq\n        /* \"#utility.yul\":5383:5420   */\n      or\n        /* \"#utility.yul\":5373:5444   */\n      tag_193\n      jumpi\n        /* \"#utility.yul\":5424:5442   */\n      tag_193\n      tag_310\n      jump\t// in\n        /* \"#utility.yul\":5455:5575   */\n    tag_243:\n        /* \"#utility.yul\":5495:5496   */\n      0x00\n        /* \"#utility.yul\":5521:5522   */\n      dup3\n        /* \"#utility.yul\":5511:5546   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5526:5544   */\n      tag_360\n      tag_311\n      jump\t// in\n    tag_360:\n      pop\n        /* \"#utility.yul\":5560:5569   */\n      div\n      swap1\n        /* \"#utility.yul\":5455:5575   */\n      jump\t// out\n        /* \"#utility.yul\":5580:5715   */\n    tag_266:\n        /* \"#utility.yul\":5619:5622   */\n      0x00\n        /* \"#utility.yul\":5640:5657   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":5637:5680   */\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5660:5678   */\n      tag_363\n      tag_310\n      jump\t// in\n    tag_363:\n      pop\n        /* \"#utility.yul\":5707:5708   */\n      0x01\n        /* \"#utility.yul\":5696:5709   */\n      add\n      swap1\n        /* \"#utility.yul\":5580:5715   */\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208071ac002ef6409dd412d89d8aa1e912753377f6322c4ee3fa03889168047e9a64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_794": {
									"entryPoint": null,
									"id": 794,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 67,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526815af1d78b58c4000006005556201518060075560056008556103e860095534801561002f57600080fd5b5061003933610043565b6001600255610095565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610f71806100a46000396000f3fe608060405234801561001057600080fd5b50600436106101a85760003560e01c806380faa57d116100f9578063b79ec81211610097578063d1af0c7d11610071578063d1af0c7d1461036f578063da4f843114610382578063df136d6514610395578063f2fde38b1461039e57600080fd5b8063b79ec81214610335578063c8f33c911461035e578063cdda56e01461036757600080fd5b80638b876347116100d35780638b876347146102d55780638da5cb5b146102f55780639499c5491461031a578063adc9772e1461032257600080fd5b806380faa57d1461029c5780638107368b146102a2578063874c120b146102c257600080fd5b80633d18b912116101665780636917c501116101405780636917c5011461027a578063715018a61461028257806378e979251461028a5780637a6fcee71461029357600080fd5b80633d18b912146102565780633e0a322d1461025e5780636139d4b41461027157600080fd5b80628cc262146101ad5780630700037d146101d35780630e15561a146101f357806318e20ecf146101fc57806324d7806c146102115780633c4045cf1461024d575b600080fd5b6101c06101bb366004610d2b565b6103b1565b6040519081526020015b60405180910390f35b6101c06101e1366004610d2b565b60046020526000908152604090205481565b6101c060055481565b61020f61020a366004610d54565b610459565b005b61023d61021f366004610d2b565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020016101ca565b6101c060085481565b61020f610512565b61020f61026c366004610d8b565b6106ce565b6101c060075481565b600e546101c0565b61020f6106f8565b6101c060065481565b6101c060095481565b426101c0565b6101c06102b0366004610d2b565b600d6020526000908152604090205481565b6101c06102d0366004610d8b565b61072e565b6101c06102e3366004610d2b565b600c6020526000908152604090205481565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016101ca565b6101c061077d565b61020f610330366004610da4565b61078d565b6101c0610343366004610d2b565b6001600160a01b03166000908152600f602052604090205490565b6101c0600a5481565b6101c0610964565b600354610302906001600160a01b031681565b6101c0610390366004610dce565b61096f565b6101c0600b5481565b61020f6103ac366004610d2b565b610b27565b6001600160a01b0381166000908152600d602052604081205481906103d6904261096f565b6001600160a01b038416600090815260046020908152604080832054600c909252909120549192506104529161044c90670de0b6b3a76400009061044690610427906104218861072e565b90610bc2565b6001600160a01b0389166000908152600f602052604090205490610bce565b90610bda565b90610be6565b9392505050565b6001546001600160a01b0316331461048c5760405162461bcd60e51b815260040161048390610df0565b60405180910390fd5b6001600160a01b0382166000818152602081815260409182902054825160ff90911615158152841515918101919091527f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854910160405180910390a26001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b60028054036105635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610483565b60028055336000818152600d60205260408120549081900361058457506006545b6000610590824261096f565b905061059b8161072e565b600b5542600a556001600160a01b038316156105ed576105ba836103b1565b6001600160a01b038416600090815260046020908152604080832093909355600b54600c825283832055600d9052204290555b3360009081526004602052604090205480156106c35733600081815260046020819052604080832092909255600354915163a9059cbb60e01b815290810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190610e32565b5060405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b505060016002555050565b6106d73361021f565b6106f35760405162461bcd60e51b815260040161048390610e4f565b600655565b6001546001600160a01b031633146107225760405162461bcd60e51b815260040161048390610df0565b61072c6000610bf2565b565b6000600e54600003610742575050600b5490565b61077761076e600e54610446670de0b6b3a764000061076887610768600a546104214290565b90610bce565b600b5490610be6565b92915050565b600061078842610c44565b905090565b60028054036107de5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610483565b600280556107eb3361021f565b6108075760405162461bcd60e51b815260040161048390610e4f565b336000818152600d60205260408120549081900361082457506006545b6000610830824261096f565b905061083b8161072e565b600b5542600a556001600160a01b0383161561088d5761085a836103b1565b6001600160a01b038416600090815260046020908152604080832093909355600b54600c825283832055600d9052204290555b600084116108ce5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610483565b600e546108db9085610be6565b600e556001600160a01b0385166000908152600f60205260409020546109019085610be6565b6001600160a01b0386166000818152600f6020526040908190209290925590517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906109509087815260200190565b60405180910390a250506001600255505050565b600061078842610cea565b6000600654600014806109825750818310155b1561098f57506000610777565b60065483101561099f5760065492505b6000600754846109af9190610ea7565b90506000600754826109c19190610ed0565b6007546109ce9190610ee4565b90506000600754826109df88610c44565b6109e99190610ef7565b6109f39190610f0e565b9050600060075460065487610a089190610ee4565b610a129190610ed0565b9050600060075482610a2389610c44565b610a2d9190610ef7565b610a379190610f0e565b905060008585610a47858b610ee4565b610a519190610ee4565b610a5b9190610ee4565b90506000610a71610a6c8789610ea7565b610c44565b905080806000610a84610a6c8a8c610ea7565b905060005b600754610a969087610f0e565b811015610aec57600954600854849350610ab08480610ee4565b610aba9190610ef7565b610ac49190610f0e565b610ace9083610ee4565b9250610ada8385610ea7565b9350610ae581610f22565b9050610a89565b50610af78d8d610ee4565b86610b028a86610ea7565b610b0c9190610ea7565b610b169190610f0e565b9d9c50505050505050505050505050565b6001546001600160a01b03163314610b515760405162461bcd60e51b815260040161048390610df0565b6001600160a01b038116610bb65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610483565b610bbf81610bf2565b50565b60006104528284610ee4565b60006104528284610ef7565b60006104528284610f0e565b60006104528284610ea7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600654600003610c5857505060065490565b600060075460065484610c6b9190610ee4565b610c759190610f0e565b610c80906001610ea7565b60055490915060005b82811015610cc757600954600854610ca19084610ef7565b610cab9190610f0e565b610cb59083610ee4565b9150610cc081610f22565b9050610c89565b50600954600854610cd89083610ef7565b610ce29190610f0e565b949350505050565b600080610cf683610c44565b90506000610ce260075483610bda90919063ffffffff16565b80356001600160a01b0381168114610d2657600080fd5b919050565b600060208284031215610d3d57600080fd5b61045282610d0f565b8015158114610bbf57600080fd5b60008060408385031215610d6757600080fd5b610d7083610d0f565b91506020830135610d8081610d46565b809150509250929050565b600060208284031215610d9d57600080fd5b5035919050565b60008060408385031215610db757600080fd5b610dc083610d0f565b946020939093013593505050565b60008060408385031215610de157600080fd5b50508035926020909101359150565b60208082526022908201527f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60408201526132b960f11b606082015260800190565b600060208284031215610e4457600080fd5b815161045281610d46565b60208082526022908201527f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60408201526134b760f11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561077757610777610e91565b634e487b7160e01b600052601260045260246000fd5b600082610edf57610edf610eba565b500690565b8181038181111561077757610777610e91565b808202811582820484141761077757610777610e91565b600082610f1d57610f1d610eba565b500490565b600060018201610f3457610f34610e91565b506001019056fea26469706673582212208071ac002ef6409dd412d89d8aa1e912753377f6322c4ee3fa03889168047e9a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH9 0x15AF1D78B58C400000 PUSH1 0x5 SSTORE PUSH3 0x15180 PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x39 CALLER PUSH2 0x43 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SSTORE PUSH2 0x95 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xF71 DUP1 PUSH2 0xA4 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D18B912 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x24D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x512 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x20F PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x302 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x3D6 SWAP1 TIMESTAMP PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x452 SWAP2 PUSH2 0x44C SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x446 SWAP1 PUSH2 0x427 SWAP1 PUSH2 0x421 DUP9 PUSH2 0x72E JUMP JUMPDEST SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBCE JUMP JUMPDEST SWAP1 PUSH2 0xBDA JUMP JUMPDEST SWAP1 PUSH2 0xBE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE DUP5 ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x584 JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x590 DUP3 TIMESTAMP PUSH2 0x96F JUMP JUMPDEST SWAP1 POP PUSH2 0x59B DUP2 PUSH2 0x72E JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5BA DUP4 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x6C3 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6D7 CALLER PUSH2 0x21F JUMP JUMPDEST PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x72C PUSH1 0x0 PUSH2 0xBF2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD PUSH1 0x0 SUB PUSH2 0x742 JUMPI POP POP PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x777 PUSH2 0x76E PUSH1 0xE SLOAD PUSH2 0x446 PUSH8 0xDE0B6B3A7640000 PUSH2 0x768 DUP8 PUSH2 0x768 PUSH1 0xA SLOAD PUSH2 0x421 TIMESTAMP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x788 TIMESTAMP PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x7EB CALLER PUSH2 0x21F JUMP JUMPDEST PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xE4F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x824 JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x830 DUP3 TIMESTAMP PUSH2 0x96F JUMP JUMPDEST SWAP1 POP PUSH2 0x83B DUP2 PUSH2 0x72E JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x88D JUMPI PUSH2 0x85A DUP4 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x8DB SWAP1 DUP6 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x901 SWAP1 DUP6 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x950 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x788 TIMESTAMP PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x982 JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST ISZERO PUSH2 0x98F JUMPI POP PUSH1 0x0 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x9DF DUP9 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP8 PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xA23 DUP10 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 PUSH2 0xA47 DUP6 DUP12 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA71 PUSH2 0xA6C DUP8 DUP10 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH1 0x0 PUSH2 0xA84 PUSH2 0xA6C DUP11 DUP13 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xA96 SWAP1 DUP8 PUSH2 0xF0E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 SWAP4 POP PUSH2 0xAB0 DUP5 DUP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xABA SWAP2 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xACE SWAP1 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 POP PUSH2 0xADA DUP4 DUP6 PUSH2 0xEA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xAE5 DUP2 PUSH2 0xF22 JUMP JUMPDEST SWAP1 POP PUSH2 0xA89 JUMP JUMPDEST POP PUSH2 0xAF7 DUP14 DUP14 PUSH2 0xEE4 JUMP JUMPDEST DUP7 PUSH2 0xB02 DUP11 DUP7 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x483 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0xC58 JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0xC6B SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xC75 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xC80 SWAP1 PUSH1 0x1 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0xCA1 SWAP1 DUP5 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xCB5 SWAP1 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC0 DUP2 PUSH2 0xF22 JUMP JUMPDEST SWAP1 POP PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0xCD8 SWAP1 DUP4 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCF6 DUP4 PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCE2 PUSH1 0x7 SLOAD DUP4 PUSH2 0xBDA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x452 DUP3 PUSH2 0xD0F JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD70 DUP4 PUSH2 0xD0F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD80 DUP2 PUSH2 0xD46 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC0 DUP4 PUSH2 0xD0F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x452 DUP2 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x777 JUMPI PUSH2 0x777 PUSH2 0xE91 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDF JUMPI PUSH2 0xEDF PUSH2 0xEBA JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x777 JUMPI PUSH2 0x777 PUSH2 0xE91 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x777 JUMPI PUSH2 0x777 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF1D JUMPI PUSH2 0xF1D PUSH2 0xEBA JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF34 JUMPI PUSH2 0xF34 PUSH2 0xE91 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH18 0xAC002EF6409DD412D89D8AA1E912753377F6 ORIGIN 0x2C 0x4E 0xE3 STATICCALL SUB DUP9 SWAP2 PUSH9 0x47E9A64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "297:5524:1:-:0;;;507:14;477:44;;589:6;559:36;;641:1;602:40;;690:4;649:45;;297:5524;;;;;;;;;-1:-1:-1;603:32:0;143:10;603:18;:32::i;:::-;1734:1:2;1845:7;:22;297:5524:1;;1443:191:0;1536:6;;;-1:-1:-1;;;;;1553:17:0;;;-1:-1:-1;;;;;;1553:17:0;;;;;;;1586:40;;1536:6;;;1553:17;1536:6;;1586:40;;1517:16;;1586:40;1506:128;1443:191;:::o;297:5524:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getRewardPool_401": {
									"entryPoint": 3140,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_getRewardRate_435": {
									"entryPoint": 3306,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_10": {
									"entryPoint": null,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 3058,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1590": {
									"entryPoint": 3046,
									"id": 1590,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_1635": {
									"entryPoint": 3034,
									"id": 1635,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_517": {
									"entryPoint": 945,
									"id": 517,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getCurRewardPool_343": {
									"entryPoint": 1917,
									"id": 343,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurRewardRate_412": {
									"entryPoint": 2404,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getReward_762": {
									"entryPoint": 1298,
									"id": 762,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTimeWeightedAveRate_673": {
									"entryPoint": 2415,
									"id": 673,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAdmin_96": {
									"entryPoint": null,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_215": {
									"entryPoint": null,
									"id": 215,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@modificationAdmin_174": {
									"entryPoint": 1113,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1620": {
									"entryPoint": 3022,
									"id": 1620,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powersOf_332": {
									"entryPoint": null,
									"id": 332,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rateIntervalDenominator_213": {
									"entryPoint": null,
									"id": 213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateIntervalNumerator_210": {
									"entryPoint": null,
									"id": 210,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateInterval_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_109": {
									"entryPoint": 1784,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_217": {
									"entryPoint": null,
									"id": 217,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_477": {
									"entryPoint": 1838,
									"id": 477,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardsToken_191": {
									"entryPoint": null,
									"id": 191,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_195": {
									"entryPoint": null,
									"id": 195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setStartTime_312": {
									"entryPoint": 1742,
									"id": 312,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_719": {
									"entryPoint": 1933,
									"id": 719,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_204": {
									"entryPoint": null,
									"id": 204,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1605": {
									"entryPoint": 3010,
									"id": 1605,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalPowers_320": {
									"entryPoint": null,
									"id": 320,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_202": {
									"entryPoint": null,
									"id": 202,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_131": {
									"entryPoint": 2855,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLastUpdateTime_225": {
									"entryPoint": null,
									"id": 225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_221": {
									"entryPoint": null,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3371,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3412,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 3634,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 3534,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$893__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 3751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 3854,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 3831,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 3812,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 3874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 3792,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 3729,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 3770,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 3398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:6124:7",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:7",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:7"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:7",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:7",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:7"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:7"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:7"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:7"
															},
															"nodeType": "YulIf",
															"src": "111:70:7"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:7",
														"type": ""
													}
												],
												"src": "14:173:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "262:116:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "308:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "320:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "304:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "275:32:7"
															},
															"nodeType": "YulIf",
															"src": "272:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "333:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "228:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "239:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "251:6:7",
														"type": ""
													}
												],
												"src": "192:186:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "484:76:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "494:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "517:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "502:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:7"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "529:25:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "529:25:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "464:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "475:4:7",
														"type": ""
													}
												],
												"src": "383:177:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "607:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "661:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "670:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "673:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "663:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "663:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "663:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "630:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "651:5:7"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "644:6:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "644:13:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "637:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "637:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "627:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "627:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "620:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "620:40:7"
															},
															"nodeType": "YulIf",
															"src": "617:60:7"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "596:5:7",
														"type": ""
													}
												],
												"src": "565:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "772:231:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "793:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "802:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "789:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "789:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "814:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "785:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "785:32:7"
															},
															"nodeType": "YulIf",
															"src": "782:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "843:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "872:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "853:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "853:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "843:6:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "891:45:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "921:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "932:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "917:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "917:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "904:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "904:32:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "895:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "967:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "945:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "945:28:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "982:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "992:5:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "982:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "730:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "741:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "753:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "761:6:7",
														"type": ""
													}
												],
												"src": "688:315:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1103:92:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1113:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1125:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1136:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1113:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1155:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1180:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1173:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1173:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1166:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1166:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1148:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1148:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1148:41:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1072:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1083:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1094:4:7",
														"type": ""
													}
												],
												"src": "1008:187:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1270:110:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1316:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1325:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1328:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1318:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1318:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1318:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1291:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1300:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1287:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1287:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1312:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1283:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1283:32:7"
															},
															"nodeType": "YulIf",
															"src": "1280:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1341:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1364:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1351:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1351:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1341:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1236:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1247:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1259:6:7",
														"type": ""
													}
												],
												"src": "1200:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1486:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1496:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1508:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1519:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1504:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1504:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1496:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1538:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1553:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1569:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1574:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1565:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1565:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1578:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1561:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1561:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1549:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1549:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1531:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1531:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1455:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1466:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1477:4:7",
														"type": ""
													}
												],
												"src": "1385:203:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1680:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1726:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1735:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1738:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1728:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1728:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1728:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1701:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1710:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1697:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1697:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1722:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1693:32:7"
															},
															"nodeType": "YulIf",
															"src": "1690:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1751:39:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1780:9:7"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "1761:18:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1761:29:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1751:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1799:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1826:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1837:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1822:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1822:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1809:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1809:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1799:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1638:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1649:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1661:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1669:6:7",
														"type": ""
													}
												],
												"src": "1593:254:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1967:102:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1977:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1989:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2000:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1985:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1977:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2019:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2050:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2055:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2046:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2046:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2059:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2042:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2042:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2030:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2030:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2012:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2012:51:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$893__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1936:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1947:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1958:4:7",
														"type": ""
													}
												],
												"src": "1852:217:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2161:161:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2207:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2216:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2219:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2209:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2209:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2209:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2182:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2191:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2178:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2203:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2174:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:32:7"
															},
															"nodeType": "YulIf",
															"src": "2171:52:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2232:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2255:9:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2242:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2242:23:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2232:6:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2274:42:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2301:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2312:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2297:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2297:18:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2284:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2284:32:7"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2119:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2130:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2142:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2150:6:7",
														"type": ""
													}
												],
												"src": "2074:248:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2501:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2518:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2529:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2511:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2511:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2552:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2563:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2548:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2548:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2568:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2541:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2541:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2541:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2591:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2602:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2587:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:18:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2607:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2580:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2580:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2580:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2662:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2673:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2658:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2658:18:7"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "2678:4:7",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2651:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2651:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2651:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2692:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2704:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2715:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2700:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2692:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2478:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2492:4:7",
														"type": ""
													}
												],
												"src": "2327:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2847:151:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2857:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2869:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2880:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2865:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2865:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2857:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2899:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "2924:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2917:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2917:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2910:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2910:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2892:41:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2892:41:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2953:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2964:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2949:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2949:18:7"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "2983:6:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2976:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2976:14:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2969:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2969:22:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2942:50:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2942:50:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2808:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2819:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2827:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2838:4:7",
														"type": ""
													}
												],
												"src": "2730:268:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3177:181:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3194:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3205:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3187:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3187:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3228:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3239:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3224:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3224:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3244:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3217:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3217:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3217:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3267:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3278:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3263:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3263:18:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3283:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3256:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3256:61:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3256:61:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3338:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3349:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3334:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3334:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3326:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3154:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3168:4:7",
														"type": ""
													}
												],
												"src": "3003:355:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3492:145:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3502:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3514:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3525:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3510:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3502:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3544:9:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3559:6:7"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3575:3:7",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3580:1:7",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3571:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3571:11:7"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3584:1:7",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3567:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3567:19:7"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3555:32:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3537:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:51:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3537:51:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3608:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3619:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3604:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3604:18:7"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3624:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3597:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3597:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3597:34:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3453:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3464:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3472:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3483:4:7",
														"type": ""
													}
												],
												"src": "3363:274:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3720:167:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3766:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3775:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3778:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3768:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3768:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3768:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3741:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3750:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3737:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3737:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3762:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3733:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3733:32:7"
															},
															"nodeType": "YulIf",
															"src": "3730:52:7"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3791:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3810:9:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3804:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3804:16:7"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3795:5:7",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3851:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3829:21:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3829:28:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3829:28:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3866:15:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3876:5:7"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3866:6:7"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3686:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3697:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3709:6:7",
														"type": ""
													}
												],
												"src": "3642:245:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4066:224:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4083:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4094:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4076:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4076:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4076:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4117:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4128:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4113:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4113:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4133:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4106:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4156:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4167:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4152:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4152:18:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4172:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4145:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4145:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4145:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4227:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4238:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4223:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4223:18:7"
																	},
																	{
																		"hexValue": "696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4243:4:7",
																		"type": "",
																		"value": "in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4216:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4216:32:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4216:32:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4257:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4269:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4280:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4265:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4265:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4257:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4043:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4057:4:7",
														"type": ""
													}
												],
												"src": "3892:398:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4469:164:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4486:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4497:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4479:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4520:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4531:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4516:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4516:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4536:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4509:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4509:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4509:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4559:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4570:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4555:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4555:18:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4575:16:7",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4548:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4548:44:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4548:44:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4601:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4613:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4624:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4609:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4609:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4601:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4446:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4460:4:7",
														"type": ""
													}
												],
												"src": "4295:338:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4670:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4687:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4694:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4699:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4690:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4690:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4680:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4680:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4680:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4727:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4730:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4720:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4720:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4720:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4751:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4754:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4744:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4744:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "4638:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4818:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4828:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4839:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4842:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4835:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4835:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "4828:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4867:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4869:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4869:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4869:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4859:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "4862:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4856:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4856:10:7"
															},
															"nodeType": "YulIf",
															"src": "4853:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4801:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4804:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "4810:3:7",
														"type": ""
													}
												],
												"src": "4770:125:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4932:95:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4949:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4956:3:7",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4961:10:7",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4952:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4952:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4942:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4942:31:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4942:31:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4992:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4982:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4982:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4982:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5013:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5016:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "5006:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5006:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "4900:127:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5070:74:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5093:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5095:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5095:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5095:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5090:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5083:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5083:9:7"
															},
															"nodeType": "YulIf",
															"src": "5080:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5124:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5133:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5136:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "5129:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5124:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5055:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5058:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5064:1:7",
														"type": ""
													}
												],
												"src": "5032:112:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5198:79:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5208:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5220:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5223:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5216:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5216:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5208:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5249:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5251:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5251:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5251:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "5240:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5246:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5237:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5237:11:7"
															},
															"nodeType": "YulIf",
															"src": "5234:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5180:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5183:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "5189:4:7",
														"type": ""
													}
												],
												"src": "5149:128:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5334:116:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5344:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5359:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5362:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "5355:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5355:9:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "5344:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5422:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5424:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5424:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5424:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "5393:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5386:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5386:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "5400:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "5407:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "5416:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "5403:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5403:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "5397:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5397:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "5383:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5383:37:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5376:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:45:7"
															},
															"nodeType": "YulIf",
															"src": "5373:71:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5313:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5316:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "5322:7:7",
														"type": ""
													}
												],
												"src": "5282:168:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5501:74:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5524:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "5526:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5526:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5526:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5521:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5514:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5514:9:7"
															},
															"nodeType": "YulIf",
															"src": "5511:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5555:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5564:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5567:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5560:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5560:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5555:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5486:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5489:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "5495:1:7",
														"type": ""
													}
												],
												"src": "5455:120:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5627:88:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5658:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5660:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5660:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5660:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5643:5:7"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5654:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "5650:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5650:6:7"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "5640:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5640:17:7"
															},
															"nodeType": "YulIf",
															"src": "5637:43:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5689:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5700:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5707:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5696:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5696:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5609:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5619:3:7",
														"type": ""
													}
												],
												"src": "5580:135:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5894:228:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5911:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5922:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5904:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5904:21:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5904:21:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5945:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5956:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5941:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5941:18:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5961:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5934:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5934:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5934:30:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5984:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5995:2:7",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5980:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5980:18:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6000:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5973:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5973:62:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5973:62:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6055:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6066:2:7",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6051:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6051:18:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6071:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:36:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6044:36:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6089:27:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6101:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6112:3:7",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6097:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6097:19:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6089:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5871:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5885:4:7",
														"type": ""
													}
												],
												"src": "5720:402:7"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$893__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Adminable: caller is not the own\")\n        mstore(add(headStart, 96), \"er\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Adminable: caller is not the adm\")\n        mstore(add(headStart, 96), \"in\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Cannot stake 0\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101a85760003560e01c806380faa57d116100f9578063b79ec81211610097578063d1af0c7d11610071578063d1af0c7d1461036f578063da4f843114610382578063df136d6514610395578063f2fde38b1461039e57600080fd5b8063b79ec81214610335578063c8f33c911461035e578063cdda56e01461036757600080fd5b80638b876347116100d35780638b876347146102d55780638da5cb5b146102f55780639499c5491461031a578063adc9772e1461032257600080fd5b806380faa57d1461029c5780638107368b146102a2578063874c120b146102c257600080fd5b80633d18b912116101665780636917c501116101405780636917c5011461027a578063715018a61461028257806378e979251461028a5780637a6fcee71461029357600080fd5b80633d18b912146102565780633e0a322d1461025e5780636139d4b41461027157600080fd5b80628cc262146101ad5780630700037d146101d35780630e15561a146101f357806318e20ecf146101fc57806324d7806c146102115780633c4045cf1461024d575b600080fd5b6101c06101bb366004610d2b565b6103b1565b6040519081526020015b60405180910390f35b6101c06101e1366004610d2b565b60046020526000908152604090205481565b6101c060055481565b61020f61020a366004610d54565b610459565b005b61023d61021f366004610d2b565b6001600160a01b031660009081526020819052604090205460ff1690565b60405190151581526020016101ca565b6101c060085481565b61020f610512565b61020f61026c366004610d8b565b6106ce565b6101c060075481565b600e546101c0565b61020f6106f8565b6101c060065481565b6101c060095481565b426101c0565b6101c06102b0366004610d2b565b600d6020526000908152604090205481565b6101c06102d0366004610d8b565b61072e565b6101c06102e3366004610d2b565b600c6020526000908152604090205481565b6001546001600160a01b03165b6040516001600160a01b0390911681526020016101ca565b6101c061077d565b61020f610330366004610da4565b61078d565b6101c0610343366004610d2b565b6001600160a01b03166000908152600f602052604090205490565b6101c0600a5481565b6101c0610964565b600354610302906001600160a01b031681565b6101c0610390366004610dce565b61096f565b6101c0600b5481565b61020f6103ac366004610d2b565b610b27565b6001600160a01b0381166000908152600d602052604081205481906103d6904261096f565b6001600160a01b038416600090815260046020908152604080832054600c909252909120549192506104529161044c90670de0b6b3a76400009061044690610427906104218861072e565b90610bc2565b6001600160a01b0389166000908152600f602052604090205490610bce565b90610bda565b90610be6565b9392505050565b6001546001600160a01b0316331461048c5760405162461bcd60e51b815260040161048390610df0565b60405180910390fd5b6001600160a01b0382166000818152602081815260409182902054825160ff90911615158152841515918101919091527f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854910160405180910390a26001600160a01b03919091166000908152602081905260409020805460ff1916911515919091179055565b60028054036105635760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610483565b60028055336000818152600d60205260408120549081900361058457506006545b6000610590824261096f565b905061059b8161072e565b600b5542600a556001600160a01b038316156105ed576105ba836103b1565b6001600160a01b038416600090815260046020908152604080832093909355600b54600c825283832055600d9052204290555b3360009081526004602052604090205480156106c35733600081815260046020819052604080832092909255600354915163a9059cbb60e01b815290810192909252602482018390526001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015610668573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061068c9190610e32565b5060405181815233907fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e04869060200160405180910390a25b505060016002555050565b6106d73361021f565b6106f35760405162461bcd60e51b815260040161048390610e4f565b600655565b6001546001600160a01b031633146107225760405162461bcd60e51b815260040161048390610df0565b61072c6000610bf2565b565b6000600e54600003610742575050600b5490565b61077761076e600e54610446670de0b6b3a764000061076887610768600a546104214290565b90610bce565b600b5490610be6565b92915050565b600061078842610c44565b905090565b60028054036107de5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610483565b600280556107eb3361021f565b6108075760405162461bcd60e51b815260040161048390610e4f565b336000818152600d60205260408120549081900361082457506006545b6000610830824261096f565b905061083b8161072e565b600b5542600a556001600160a01b0383161561088d5761085a836103b1565b6001600160a01b038416600090815260046020908152604080832093909355600b54600c825283832055600d9052204290555b600084116108ce5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610483565b600e546108db9085610be6565b600e556001600160a01b0385166000908152600f60205260409020546109019085610be6565b6001600160a01b0386166000818152600f6020526040908190209290925590517f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906109509087815260200190565b60405180910390a250506001600255505050565b600061078842610cea565b6000600654600014806109825750818310155b1561098f57506000610777565b60065483101561099f5760065492505b6000600754846109af9190610ea7565b90506000600754826109c19190610ed0565b6007546109ce9190610ee4565b90506000600754826109df88610c44565b6109e99190610ef7565b6109f39190610f0e565b9050600060075460065487610a089190610ee4565b610a129190610ed0565b9050600060075482610a2389610c44565b610a2d9190610ef7565b610a379190610f0e565b905060008585610a47858b610ee4565b610a519190610ee4565b610a5b9190610ee4565b90506000610a71610a6c8789610ea7565b610c44565b905080806000610a84610a6c8a8c610ea7565b905060005b600754610a969087610f0e565b811015610aec57600954600854849350610ab08480610ee4565b610aba9190610ef7565b610ac49190610f0e565b610ace9083610ee4565b9250610ada8385610ea7565b9350610ae581610f22565b9050610a89565b50610af78d8d610ee4565b86610b028a86610ea7565b610b0c9190610ea7565b610b169190610f0e565b9d9c50505050505050505050505050565b6001546001600160a01b03163314610b515760405162461bcd60e51b815260040161048390610df0565b6001600160a01b038116610bb65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610483565b610bbf81610bf2565b50565b60006104528284610ee4565b60006104528284610ef7565b60006104528284610f0e565b60006104528284610ea7565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000600654600003610c5857505060065490565b600060075460065484610c6b9190610ee4565b610c759190610f0e565b610c80906001610ea7565b60055490915060005b82811015610cc757600954600854610ca19084610ef7565b610cab9190610f0e565b610cb59083610ee4565b9150610cc081610f22565b9050610c89565b50600954600854610cd89083610ef7565b610ce29190610f0e565b949350505050565b600080610cf683610c44565b90506000610ce260075483610bda90919063ffffffff16565b80356001600160a01b0381168114610d2657600080fd5b919050565b600060208284031215610d3d57600080fd5b61045282610d0f565b8015158114610bbf57600080fd5b60008060408385031215610d6757600080fd5b610d7083610d0f565b91506020830135610d8081610d46565b809150509250929050565b600060208284031215610d9d57600080fd5b5035919050565b60008060408385031215610db757600080fd5b610dc083610d0f565b946020939093013593505050565b60008060408385031215610de157600080fd5b50508035926020909101359150565b60208082526022908201527f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60408201526132b960f11b606082015260800190565b600060208284031215610e4457600080fd5b815161045281610d46565b60208082526022908201527f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60408201526134b760f11b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b8082018082111561077757610777610e91565b634e487b7160e01b600052601260045260246000fd5b600082610edf57610edf610eba565b500690565b8181038181111561077757610777610e91565b808202811582820484141761077757610777610e91565b600082610f1d57610f1d610eba565b500490565b600060018201610f3457610f34610e91565b506001019056fea26469706673582212208071ac002ef6409dd412d89d8aa1e912753377f6322c4ee3fa03889168047e9a64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A8 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x80FAA57D GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xB79EC812 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x382 JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x395 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x39E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x335 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x367 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8B876347 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F5 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xADC9772E EQ PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x8107368B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x2C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D18B912 GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x27A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x293 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x25E JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x271 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x1AD JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x24D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C0 PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xD54 JUMP JUMPDEST PUSH2 0x459 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23D PUSH2 0x21F CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x512 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x26C CALLDATASIZE PUSH1 0x4 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x6F8 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST TIMESTAMP PUSH2 0x1C0 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x2B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x2D0 CALLDATASIZE PUSH1 0x4 PUSH2 0xD8B JUMP JUMPDEST PUSH2 0x72E JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x2E3 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CA JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x77D JUMP JUMPDEST PUSH2 0x20F PUSH2 0x330 CALLDATASIZE PUSH1 0x4 PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x78D JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x343 CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x964 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x302 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1C0 PUSH2 0x390 CALLDATASIZE PUSH1 0x4 PUSH2 0xDCE JUMP JUMPDEST PUSH2 0x96F JUMP JUMPDEST PUSH2 0x1C0 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x20F PUSH2 0x3AC CALLDATASIZE PUSH1 0x4 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0xB27 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x3D6 SWAP1 TIMESTAMP PUSH2 0x96F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0xC SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x452 SWAP2 PUSH2 0x44C SWAP1 PUSH8 0xDE0B6B3A7640000 SWAP1 PUSH2 0x446 SWAP1 PUSH2 0x427 SWAP1 PUSH2 0x421 DUP9 PUSH2 0x72E JUMP JUMPDEST SWAP1 PUSH2 0xBC2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0xBCE JUMP JUMPDEST SWAP1 PUSH2 0xBDA JUMP JUMPDEST SWAP1 PUSH2 0xBE6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x48C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND ISZERO ISZERO DUP2 MSTORE DUP5 ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x563 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x584 JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x590 DUP3 TIMESTAMP PUSH2 0x96F JUMP JUMPDEST SWAP1 POP PUSH2 0x59B DUP2 PUSH2 0x72E JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x5ED JUMPI PUSH2 0x5BA DUP4 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x6C3 JUMPI CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x3 SLOAD SWAP2 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x668 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x68C SWAP2 SWAP1 PUSH2 0xE32 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE CALLER SWAP1 PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP JUMP JUMPDEST PUSH2 0x6D7 CALLER PUSH2 0x21F JUMP JUMPDEST PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xE4F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x722 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH2 0x72C PUSH1 0x0 PUSH2 0xBF2 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD PUSH1 0x0 SUB PUSH2 0x742 JUMPI POP POP PUSH1 0xB SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x777 PUSH2 0x76E PUSH1 0xE SLOAD PUSH2 0x446 PUSH8 0xDE0B6B3A7640000 PUSH2 0x768 DUP8 PUSH2 0x768 PUSH1 0xA SLOAD PUSH2 0x421 TIMESTAMP SWAP1 JUMP JUMPDEST SWAP1 PUSH2 0xBCE JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 PUSH2 0xBE6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x788 TIMESTAMP PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x7DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0x2 DUP1 SSTORE PUSH2 0x7EB CALLER PUSH2 0x21F JUMP JUMPDEST PUSH2 0x807 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xE4F JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x824 JUMPI POP PUSH1 0x6 SLOAD JUMPDEST PUSH1 0x0 PUSH2 0x830 DUP3 TIMESTAMP PUSH2 0x96F JUMP JUMPDEST SWAP1 POP PUSH2 0x83B DUP2 PUSH2 0x72E JUMP JUMPDEST PUSH1 0xB SSTORE TIMESTAMP PUSH1 0xA SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x88D JUMPI PUSH2 0x85A DUP4 PUSH2 0x3B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0xB SLOAD PUSH1 0xC DUP3 MSTORE DUP4 DUP4 KECCAK256 SSTORE PUSH1 0xD SWAP1 MSTORE KECCAK256 TIMESTAMP SWAP1 SSTORE JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x8CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x43616E6E6F74207374616B65203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x483 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH2 0x8DB SWAP1 DUP6 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0xE SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x901 SWAP1 DUP6 PUSH2 0xBE6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE SWAP1 MLOAD PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D SWAP1 PUSH2 0x950 SWAP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x788 TIMESTAMP PUSH2 0xCEA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 EQ DUP1 PUSH2 0x982 JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST ISZERO PUSH2 0x98F JUMPI POP PUSH1 0x0 PUSH2 0x777 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x99F JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD DUP5 PUSH2 0x9AF SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x9C1 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x9CE SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x9DF DUP9 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0x9E9 SWAP2 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0x9F3 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP8 PUSH2 0xA08 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xA12 SWAP2 SWAP1 PUSH2 0xED0 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0xA23 DUP10 PUSH2 0xC44 JUMP JUMPDEST PUSH2 0xA2D SWAP2 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xA37 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP6 DUP6 PUSH2 0xA47 DUP6 DUP12 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xA51 SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xA5B SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xA71 PUSH2 0xA6C DUP8 DUP10 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP DUP1 DUP1 PUSH1 0x0 PUSH2 0xA84 PUSH2 0xA6C DUP11 DUP13 PUSH2 0xEA7 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST PUSH1 0x7 SLOAD PUSH2 0xA96 SWAP1 DUP8 PUSH2 0xF0E JUMP JUMPDEST DUP2 LT ISZERO PUSH2 0xAEC JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 SWAP4 POP PUSH2 0xAB0 DUP5 DUP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xABA SWAP2 SWAP1 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xAC4 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xACE SWAP1 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP3 POP PUSH2 0xADA DUP4 DUP6 PUSH2 0xEA7 JUMP JUMPDEST SWAP4 POP PUSH2 0xAE5 DUP2 PUSH2 0xF22 JUMP JUMPDEST SWAP1 POP PUSH2 0xA89 JUMP JUMPDEST POP PUSH2 0xAF7 DUP14 DUP14 PUSH2 0xEE4 JUMP JUMPDEST DUP7 PUSH2 0xB02 DUP11 DUP7 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xB0C SWAP2 SWAP1 PUSH2 0xEA7 JUMP JUMPDEST PUSH2 0xB16 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP14 SWAP13 POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x483 SWAP1 PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x483 JUMP JUMPDEST PUSH2 0xBBF DUP2 PUSH2 0xBF2 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xEF7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xF0E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x452 DUP3 DUP5 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x0 SUB PUSH2 0xC58 JUMPI POP POP PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP5 PUSH2 0xC6B SWAP2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0xC75 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xC80 SWAP1 PUSH1 0x1 PUSH2 0xEA7 JUMP JUMPDEST PUSH1 0x5 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xCC7 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0xCA1 SWAP1 DUP5 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xCAB SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST PUSH2 0xCB5 SWAP1 DUP4 PUSH2 0xEE4 JUMP JUMPDEST SWAP2 POP PUSH2 0xCC0 DUP2 PUSH2 0xF22 JUMP JUMPDEST SWAP1 POP PUSH2 0xC89 JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0xCD8 SWAP1 DUP4 PUSH2 0xEF7 JUMP JUMPDEST PUSH2 0xCE2 SWAP2 SWAP1 PUSH2 0xF0E JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xCF6 DUP4 PUSH2 0xC44 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xCE2 PUSH1 0x7 SLOAD DUP4 PUSH2 0xBDA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xD26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD3D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x452 DUP3 PUSH2 0xD0F JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBBF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD70 DUP4 PUSH2 0xD0F JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0xD80 DUP2 PUSH2 0xD46 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC0 DUP4 PUSH2 0xD0F JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xDE1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x32B9 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x452 DUP2 PUSH2 0xD46 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x34B7 PUSH1 0xF1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x777 JUMPI PUSH2 0x777 PUSH2 0xE91 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xEDF JUMPI PUSH2 0xEDF PUSH2 0xEBA JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x777 JUMPI PUSH2 0x777 PUSH2 0xE91 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x777 JUMPI PUSH2 0x777 PUSH2 0xE91 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xF1D JUMPI PUSH2 0xF1D PUSH2 0xEBA JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0xF34 JUMPI PUSH2 0xF34 PUSH2 0xE91 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 PUSH18 0xAC002EF6409DD412D89D8AA1E912753377F6 ORIGIN 0x2C 0x4E 0xE3 STATICCALL SUB DUP9 SWAP2 PUSH9 0x47E9A64736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "297:5524:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3335:296;;;;;;:::i;:::-;;:::i;:::-;;;529:25:7;;;517:2;502:18;3335:296:1;;;;;;;;426:42;;;;;;:::i;:::-;;;;;;;;;;;;;;477:44;;;;;;1642:184:0;;;;;;:::i;:::-;;:::i;:::-;;1004:111;;;;;;:::i;:::-;-1:-1:-1;;;;;1091:16:0;1067:4;1091:16;;;;;;;;;;;;;;1004:111;;;;1173:14:7;;1166:22;1148:41;;1136:2;1121:18;1004:111:0;1008:187:7;602:40:1;;;;;;5385:303;;;:::i;1593:88::-;;;;;;:::i;:::-;;:::i;559:36::-;;;;;;1689:93;1762:12;;1689:93;;1123:103:0;;;:::i;528:24:1:-;;;;;;649:45;;;;;;2864:107;2948:15;2864:107;;845:53;;;;;;:::i;:::-;;;;;;;;;;;;;;2979:348;;;;;;:::i;:::-;;:::i;781:57::-;;;;;;:::i;:::-;;;;;;;;;;;;;;909:87:0;982:6;;-1:-1:-1;;;;;982:6:0;909:87;;;-1:-1:-1;;;;;1549:32:7;;;1531:51;;1519:2;1504:18;909:87:0;1385:203:7;1909:115:1;;;:::i;5073:300::-;;;;;;:::i;:::-;;:::i;1790:111::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1875:18:1;1848:7;1875:18;;;:9;:18;;;;;;;1790:111;701:29;;;;;;2508:115;;;:::i;393:26::-;;;;;-1:-1:-1;;;;;393:26:1;;;3674:1391;;;;;;:::i;:::-;;:::i;737:35::-;;;;;;1234:201:0;;;;;;:::i;:::-;;:::i;3335:296:1:-;-1:-1:-1;;;;;3447:27:1;;3389:7;3447:27;;;:18;:27;;;;;;3389:7;;3424:68;;3476:15;3424:22;:68::i;:::-;-1:-1:-1;;;;;3606:16:1;;;;;;:7;:16;;;;;;;;;3558:22;:31;;;;;;;3409:83;;-1:-1:-1;3510:113:1;;:91;;3596:4;;3510:81;;3533:57;;:20;3409:83;3533:14;:20::i;:::-;:24;;:57::i;:::-;-1:-1:-1;;;;;3510:18:1;;;;;;:9;:18;;;;;;;:22;:81::i;:::-;:85;;:91::i;:::-;:95;;:113::i;:::-;3503:120;3335:296;-1:-1:-1;;;3335:296:1:o;1642:184:0:-;982:6;;-1:-1:-1;;;;;982:6:0;143:10;691:23;683:70;;;;-1:-1:-1;;;683:70:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;1737:48:0;::::1;1763:7;:14:::0;;;::::1;::::0;;;;;;;;;1737:48;;1763:14:::1;::::0;;::::1;2917::7::0;2910:22;2892:41;;2976:14;;2969:22;2949:18;;;2942:50;;;;1737:48:0::1;::::0;2865:18:7;1737:48:0::1;;;;;;;-1:-1:-1::0;;;;;1796:14:0;;;::::1;:7;:14:::0;;;::::1;::::0;;;;;;:22;;-1:-1:-1;;1796:22:0::1;::::0;::::1;;::::0;;;::::1;::::0;;1642:184::o;5385:303:1:-;1778:1:2;2376:7;;:19;2368:63;;;;-1:-1:-1;;;2368:63:2;;3205:2:7;2368:63:2;;;3187:21:7;3244:2;3224:18;;;3217:30;3283:33;3263:18;;;3256:61;3334:18;;2368:63:2;3003:355:7;2368:63:2;1778:1;2509:18;;5439:10:1::1;1050:12;1065:27:::0;;;:18:::1;:27;::::0;;;;;;1106:9;;;1103:57:::1;;-1:-1:-1::0;1139:9:1::1;::::0;1103:57:::1;1170:12;1185:45;1208:4;1214:15;1185:22;:45::i;:::-;1170:60;;1264:20;1279:4;1264:14;:20::i;:::-;1241;:43:::0;2948:15;1295:14:::1;:43:::0;-1:-1:-1;;;;;1353:21:1;::::1;::::0;1349:217:::1;;1410:15;1417:7;1410:6;:15::i;:::-;-1:-1:-1::0;;;;;1391:16:1;::::1;;::::0;;;:7:::1;:16;::::0;;;;;;;:34;;;;1474:20:::1;::::0;1440:22:::1;:31:::0;;;;;:54;1509:18:::1;:27:::0;;;1539:15:::1;1509:45:::0;;1349:217:::1;5487:10:::2;5462:14;5479:19:::0;;;:7:::2;:19;::::0;;;;;5513:10;;5509:172:::2;;5548:10;5562:1;5540:19:::0;;;:7:::2;:19;::::0;;;;;;;:23;;;;5578:12:::2;::::0;:41;;-1:-1:-1;;;5578:41:1;;;;::::2;3537:51:7::0;;;;3604:18;;;3597:34;;;-1:-1:-1;;;;;5578:12:1::2;::::0;:21:::2;::::0;3510:18:7;;5578:41:1::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5639:30:1::2;::::0;529:25:7;;;5650:10:1::2;::::0;5639:30:::2;::::0;517:2:7;502:18;5639:30:1::2;;;;;;;5509:172;-1:-1:-1::0;;1734:1:2;2688:7;:22;-1:-1:-1;;5385:303:1:o;1593:88::-;821:21:0;143:10;829:12;63:98;821:21;813:68;;;;-1:-1:-1;;;813:68:0;;;;;;;:::i;:::-;1657:9:1::1;:16:::0;1593:88::o;1123:103:0:-;982:6;;-1:-1:-1;;;;;982:6:0;143:10;691:23;683:70;;;;-1:-1:-1;;;683:70:0;;;;;;;:::i;:::-;1188:30:::1;1215:1;1188:18;:30::i;:::-;1123:103::o:0;2979:348:1:-;3044:7;3068:12;;3084:1;3068:17;3064:77;;-1:-1:-1;;3109:20:1;;;2979:348::o;3064:77::-;3171:148;3214:90;3291:12;;3214:72;3281:4;3214:62;3265:10;3214:46;3245:14;;3214:26;2948:15;;2864:107;3214:46;:50;;:62::i;:90::-;3171:20;;;:24;:148::i;:::-;3151:168;2979:348;-1:-1:-1;;2979:348:1:o;1909:115::-;1958:7;1985:31;2000:15;1985:14;:31::i;:::-;1978:38;;1909:115;:::o;5073:300::-;1778:1:2;2376:7;;:19;2368:63;;;;-1:-1:-1;;;2368:63:2;;3205:2:7;2368:63:2;;;3187:21:7;3244:2;3224:18;;;3217:30;3283:33;3263:18;;;3256:61;3334:18;;2368:63:2;3003:355:7;2368:63:2;1778:1;2509:18;;821:21:0::1;143:10:::0;829:12:::1;63:98:::0;821:21:::1;813:68;;;;-1:-1:-1::0;;;813:68:0::1;;;;;;;:::i;:::-;5163:10:1::2;1050:12;1065:27:::0;;;:18:::2;:27;::::0;;;;;;1106:9;;;1103:57:::2;;-1:-1:-1::0;1139:9:1::2;::::0;1103:57:::2;1170:12;1185:45;1208:4;1214:15;1185:22;:45::i;:::-;1170:60;;1264:20;1279:4;1264:14;:20::i;:::-;1241;:43:::0;2948:15;1295:14:::2;:43:::0;-1:-1:-1;;;;;1353:21:1;::::2;::::0;1349:217:::2;;1410:15;1417:7;1410:6;:15::i;:::-;-1:-1:-1::0;;;;;1391:16:1;::::2;;::::0;;;:7:::2;:16;::::0;;;;;;;:34;;;;1474:20:::2;::::0;1440:22:::2;:31:::0;;;;;:54;1509:18:::2;:27:::0;;;1539:15:::2;1509:45:::0;;1349:217:::2;5203:1:::3;5194:6;:10;5186:37;;;::::0;-1:-1:-1;;;5186:37:1;;4497:2:7;5186:37:1::3;::::0;::::3;4479:21:7::0;4536:2;4516:18;;;4509:30;-1:-1:-1;;;4555:18:7;;;4548:44;4609:18;;5186:37:1::3;4295:338:7::0;5186:37:1::3;5249:12;::::0;:24:::3;::::0;5266:6;5249:16:::3;:24::i;:::-;5234:12;:39:::0;-1:-1:-1;;;;;5302:15:1;::::3;;::::0;;;:9:::3;:15;::::0;;;;;:27:::3;::::0;5322:6;5302:19:::3;:27::i;:::-;-1:-1:-1::0;;;;;5284:15:1;::::3;;::::0;;;:9:::3;:15;::::0;;;;;;:45;;;;5345:20;;::::3;::::0;::::3;::::0;5358:6;529:25:7;;517:2;502:18;;383:177;5345:20:1::3;;;;;;;;-1:-1:-1::0;;1734:1:2;2688:7;:22;-1:-1:-1;;;5073:300:1:o;2508:115::-;2557:7;2584:31;2599:15;2584:14;:31::i;3674:1391::-;3764:7;3796:9;;3809:1;3796:14;:39;;;;3826:9;3814:8;:21;;3796:39;3793:79;;;-1:-1:-1;3859:1:1;3852:8;;3793:79;3898:9;;3887:8;:20;3884:72;;;3935:9;;3924:20;;3884:72;3968:11;3993:12;;3982:8;:23;;;;:::i;:::-;3968:37;;4016:20;4060:12;;4054:3;:18;;;;:::i;:::-;4039:12;;:33;;;;:::i;:::-;4016:56;;4083:18;4146:12;;4131;4104:24;4119:8;4104:14;:24::i;:::-;:39;;;;:::i;:::-;:54;;;;:::i;:::-;4083:75;;4171:21;4221:12;;4208:9;;4196;:21;;;;:::i;:::-;4195:38;;;;:::i;:::-;4171:62;;4244:19;4310:12;;4294:13;4266:25;4281:9;4266:14;:25::i;:::-;:41;;;;:::i;:::-;:56;;;;:::i;:::-;4244:78;-1:-1:-1;4384:19:1;4449:3;4434:12;4406:25;4418:13;4406:9;:25;:::i;:::-;:40;;;;:::i;:::-;:46;;;;:::i;:::-;4384:68;-1:-1:-1;4463:19:1;4485:34;4500:18;4506:12;4500:3;:18;:::i;:::-;4485:14;:34::i;:::-;4463:56;-1:-1:-1;4463:56:1;;4531:22;4643:34;4658:18;4664:12;4658:3;:18;:::i;4643:34::-;4621:56;;4692:9;4688:284;4725:12;;4711:26;;:11;:26;:::i;:::-;4707:1;:30;4688:284;;;4878:23;;4854:21;;4773:10;;-1:-1:-1;4826:24:1;4773:10;;4826:24;:::i;:::-;4825:50;;;;:::i;:::-;:76;;;;:::i;:::-;4811:90;;:11;:90;:::i;:::-;4798:103;-1:-1:-1;4933:27:1;4798:103;4933:14;:27;:::i;:::-;4916:44;-1:-1:-1;4739:3:1;;;:::i;:::-;;;4688:284;;;-1:-1:-1;5036:20:1;5048:8;5036:9;:20;:::i;:::-;5020:11;4990:27;5007:10;4990:14;:27;:::i;:::-;:41;;;;:::i;:::-;4989:68;;;;:::i;:::-;4982:75;3674:1391;-1:-1:-1;;;;;;;;;;;;;3674:1391:1:o;1234:201:0:-;982:6;;-1:-1:-1;;;;;982:6:0;143:10;691:23;683:70;;;;-1:-1:-1;;;683:70:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1323:22:0;::::1;1315:73;;;::::0;-1:-1:-1;;;1315:73:0;;5922:2:7;1315:73:0::1;::::0;::::1;5904:21:7::0;5961:2;5941:18;;;5934:30;6000:34;5980:18;;;5973:62;-1:-1:-1;;;6051:18:7;;;6044:36;6097:19;;1315:73:0::1;5720:402:7::0;1315:73:0::1;1399:28;1418:8;1399:18;:28::i;:::-;1234:201:::0;:::o;3214:98:6:-;3272:7;3299:5;3303:1;3299;:5;:::i;3571:98::-;3629:7;3656:5;3660:1;3656;:5;:::i;3970:98::-;4028:7;4055:5;4059:1;4055;:5;:::i;2833:98::-;2891:7;2918:5;2922:1;2918;:5;:::i;1443:191:0:-;1536:6;;;-1:-1:-1;;;;;1553:17:0;;;-1:-1:-1;;;;;;1553:17:0;;;;;;;1586:40;;1536:6;;;1553:17;1536:6;;1586:40;;1517:16;;1586:40;1506:128;1443:191;:::o;2032:468:1:-;2092:7;2115:9;;2128:1;2115:14;2112:62;;-1:-1:-1;;2153:9:1;;;2032:468::o;2112:62::-;2184:13;2221:12;;2208:9;;2201:4;:16;;;;:::i;:::-;2200:33;;;;:::i;:::-;:37;;2236:1;2200:37;:::i;:::-;2264:12;;2184:53;;-1:-1:-1;2248:13:1;2287:133;2310:5;2306:1;:9;2287:133;;;2385:23;;2361:21;;2353:29;;:5;:29;:::i;:::-;:55;;;;:::i;:::-;2345:63;;:5;:63;:::i;:::-;2337:71;-1:-1:-1;2317:3:1;;;:::i;:::-;;;2287:133;;;-1:-1:-1;2469:23:1;;2445:21;;2437:29;;:5;:29;:::i;:::-;:55;;;;:::i;:::-;2430:62;2032:468;-1:-1:-1;;;;2032:468:1:o;2631:223::-;2691:7;2711:21;2735:20;2750:4;2735:14;:20::i;:::-;2711:44;;2766:18;2787:31;2805:12;;2787:13;:17;;:31;;;;:::i;14:173:7:-;82:20;;-1:-1:-1;;;;;131:31:7;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:118::-;651:5;644:13;637:21;630:5;627:32;617:60;;673:1;670;663:12;688:315;753:6;761;814:2;802:9;793:7;789:23;785:32;782:52;;;830:1;827;820:12;782:52;853:29;872:9;853:29;:::i;:::-;843:39;;932:2;921:9;917:18;904:32;945:28;967:5;945:28;:::i;:::-;992:5;982:15;;;688:315;;;;;:::o;1200:180::-;1259:6;1312:2;1300:9;1291:7;1287:23;1283:32;1280:52;;;1328:1;1325;1318:12;1280:52;-1:-1:-1;1351:23:7;;1200:180;-1:-1:-1;1200:180:7:o;1593:254::-;1661:6;1669;1722:2;1710:9;1701:7;1697:23;1693:32;1690:52;;;1738:1;1735;1728:12;1690:52;1761:29;1780:9;1761:29;:::i;:::-;1751:39;1837:2;1822:18;;;;1809:32;;-1:-1:-1;;;1593:254:7:o;2074:248::-;2142:6;2150;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;;2242:23:7;;;2312:2;2297:18;;;2284:32;;-1:-1:-1;2074:248:7:o;2327:398::-;2529:2;2511:21;;;2568:2;2548:18;;;2541:30;2607:34;2602:2;2587:18;;2580:62;-1:-1:-1;;;2673:2:7;2658:18;;2651:32;2715:3;2700:19;;2327:398::o;3642:245::-;3709:6;3762:2;3750:9;3741:7;3737:23;3733:32;3730:52;;;3778:1;3775;3768:12;3730:52;3810:9;3804:16;3829:28;3851:5;3829:28;:::i;3892:398::-;4094:2;4076:21;;;4133:2;4113:18;;;4106:30;4172:34;4167:2;4152:18;;4145:62;-1:-1:-1;;;4238:2:7;4223:18;;4216:32;4280:3;4265:19;;3892:398::o;4638:127::-;4699:10;4694:3;4690:20;4687:1;4680:31;4730:4;4727:1;4720:15;4754:4;4751:1;4744:15;4770:125;4835:9;;;4856:10;;;4853:36;;;4869:18;;:::i;4900:127::-;4961:10;4956:3;4952:20;4949:1;4942:31;4992:4;4989:1;4982:15;5016:4;5013:1;5006:15;5032:112;5064:1;5090;5080:35;;5095:18;;:::i;:::-;-1:-1:-1;5129:9:7;;5032:112::o;5149:128::-;5216:9;;;5237:11;;;5234:37;;;5251:18;;:::i;5282:168::-;5355:9;;;5386;;5403:15;;;5397:22;;5383:37;5373:71;;5424:18;;:::i;5455:120::-;5495:1;5521;5511:35;;5526:18;;:::i;:::-;-1:-1:-1;5560:9:7;;5455:120::o;5580:135::-;5619:3;5640:17;;;5637:43;;5660:18;;:::i;:::-;-1:-1:-1;5707:1:7;5696:13;;5580:135::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "790600",
								"executionCost": "137199",
								"totalCost": "927799"
							},
							"external": {
								"earned(address)": "infinite",
								"getCurRewardPool()": "infinite",
								"getCurRewardRate()": "infinite",
								"getReward()": "infinite",
								"getTimeWeightedAveRate(uint256,uint256)": "infinite",
								"isAdmin(address)": "2664",
								"lastTimeRewardApplicable()": "226",
								"lastUpdateTime()": "2351",
								"modificationAdmin(address,bool)": "30888",
								"owner()": "2387",
								"powersOf(address)": "2571",
								"rateInterval()": "2374",
								"rateIntervalDenominator()": "2395",
								"rateIntervalNumerator()": "2418",
								"renounceOwnership()": "28184",
								"rewardPerToken(uint256)": "infinite",
								"rewardPerTokenStored()": "2372",
								"rewards(address)": "2554",
								"rewardsToken()": "2381",
								"setStartTime(uint256)": "24631",
								"stake(address,uint256)": "infinite",
								"startTime()": "2373",
								"totalPowers()": "2326",
								"totalRewards()": "2352",
								"transferOwnership(address)": "28422",
								"userLastUpdateTime(address)": "2576",
								"userRewardPerTokenPaid(address)": "2553"
							},
							"internal": {
								"_getRewardPool(uint256)": "infinite",
								"_getRewardRate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 507,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "15AF1D78B58C400000"
								},
								{
									"begin": 477,
									"end": 521,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 477,
									"end": 521,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 589,
									"end": 595,
									"name": "PUSH",
									"source": 1,
									"value": "15180"
								},
								{
									"begin": 559,
									"end": 595,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 559,
									"end": 595,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 602,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 602,
									"end": 642,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 690,
									"end": 694,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 649,
									"end": 694,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 649,
									"end": 694,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 143,
									"end": 153,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 603,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1845,
									"end": 1852,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1845,
									"end": 1867,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 5821,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208071ac002ef6409dd412d89d8aa1e912753377f6322c4ee3fa03889168047e9a64736f6c63430008110033",
									".code": [
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "DA4F8431"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "DF136D65"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "C8F33C91"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "CDDA56E0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "7A6FCEE7"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "6139D4B4"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "8CC262"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "700037D"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "E15561A"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "3C4045CF"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 297,
											"end": 5821,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3335,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3335,
											"end": 3631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 426,
											"end": 468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 477,
											"end": 521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 477,
											"end": 521,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1173,
											"end": 1187,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1166,
											"end": 1188,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1148,
											"end": 1189,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1148,
											"end": 1189,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1138,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1121,
											"end": 1139,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1008,
											"end": 1195,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 602,
											"end": 642,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 602,
											"end": 642,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 602,
											"end": 642,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 5385,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5385,
											"end": 5688,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5385,
											"end": 5688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 1593,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1593,
											"end": 1681,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 559,
											"end": 595,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 559,
											"end": 595,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1782,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1689,
											"end": 1782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1762,
											"end": 1774,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 1762,
											"end": 1774,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1782,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1689,
											"end": 1782,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 528,
											"end": 552,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 528,
											"end": 552,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 528,
											"end": 552,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 649,
											"end": 694,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 694,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2971,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2864,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2864,
											"end": 2971,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 845,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 845,
											"end": 898,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2979,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2979,
											"end": 3327,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 781,
											"end": 838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 781,
											"end": 838,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1549,
											"end": 1581,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1582,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1531,
											"end": 1582,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1519,
											"end": 1521,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1504,
											"end": 1522,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1385,
											"end": 1588,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1909,
											"end": 2024,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1909,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1909,
											"end": 2024,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1909,
											"end": 2024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 5073,
											"end": 5373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5073,
											"end": 5373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1790,
											"end": 1901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1884,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1893,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1790,
											"end": 1901,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 701,
											"end": 730,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 701,
											"end": 730,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2508,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 2508,
											"end": 2623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2508,
											"end": 2623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 393,
											"end": 419,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 393,
											"end": 419,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 3674,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3674,
											"end": 5065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 737,
											"end": 772,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 737,
											"end": 772,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3465,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3474,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3476,
											"end": 3491,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3424,
											"end": 3492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 3424,
											"end": 3492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3606,
											"end": 3622,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3580,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3558,
											"end": 3589,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3409,
											"end": 3492,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3601,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3510,
											"end": 3601,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3596,
											"end": 3600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3591,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3510,
											"end": 3591,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3590,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3533,
											"end": 3590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3409,
											"end": 3492,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3547,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 3533,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3553,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 3533,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3557,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 3533,
											"end": 3590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3533,
											"end": 3590,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 3533,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3519,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3510,
											"end": 3591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3591,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3510,
											"end": 3591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3595,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3595,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 3510,
											"end": 3601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3601,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 3510,
											"end": 3601,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3510,
											"end": 3623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 3510,
											"end": 3623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3503,
											"end": 3623,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3335,
											"end": 3631,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 2931,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2910,
											"end": 2932,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2933,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2892,
											"end": 2933,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2976,
											"end": 2990,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2969,
											"end": 2991,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2949,
											"end": 2967,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2942,
											"end": 2992,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854"
										},
										{
											"begin": 1737,
											"end": 1785,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2883,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5688,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5385,
											"end": 5688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3316,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3003,
											"end": 3358,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 5439,
											"end": 5449,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1062,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1083,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1065,
											"end": 1092,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1148,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1182,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1208,
											"end": 1212,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1229,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1207,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1185,
											"end": 1230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 1185,
											"end": 1230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1279,
											"end": 1283,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1278,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1264,
											"end": 1284,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1261,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1241,
											"end": 1284,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1295,
											"end": 1338,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1417,
											"end": 1424,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1410,
											"end": 1425,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1425,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 1410,
											"end": 1425,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1494,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1474,
											"end": 1494,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1494,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1527,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1509,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1536,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1554,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1554,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5497,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5476,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5486,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5479,
											"end": 5498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5498,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 5523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5513,
											"end": 5523,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5681,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5509,
											"end": 5681,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5548,
											"end": 5558,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5563,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5547,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5540,
											"end": 5559,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5559,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5540,
											"end": 5563,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5590,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 5578,
											"end": 5590,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5578,
											"end": 5619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3537,
											"end": 3588,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3604,
											"end": 3622,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3597,
											"end": 3631,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5578,
											"end": 5590,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5590,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5599,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 5578,
											"end": 5599,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3510,
											"end": 3528,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 5578,
											"end": 5619,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5578,
											"end": 5619,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 5669,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5650,
											"end": 5660,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5660,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 5639,
											"end": 5669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5669,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 5509,
											"end": 5681,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5509,
											"end": 5681,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5385,
											"end": 5688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 1593,
											"end": 1681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1657,
											"end": 1666,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1657,
											"end": 1673,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1593,
											"end": 1681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1215,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1188,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3080,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3068,
											"end": 3080,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3084,
											"end": 3085,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3068,
											"end": 3085,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3141,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3064,
											"end": 3141,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3109,
											"end": 3129,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3109,
											"end": 3129,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3129,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3064,
											"end": 3141,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 3064,
											"end": 3141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3214,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 3291,
											"end": 3303,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3286,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 3281,
											"end": 3285,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3214,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3265,
											"end": 3275,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3245,
											"end": 3259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2864,
											"end": 2971,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 3214,
											"end": 3260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 3214,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3214,
											"end": 3304,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 3214,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3191,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 3171,
											"end": 3191,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3191,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 3171,
											"end": 3319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3171,
											"end": 3319,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3171,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3319,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2979,
											"end": 3327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2979,
											"end": 3327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 2024,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 1909,
											"end": 2024,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1958,
											"end": 1965,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1985,
											"end": 2016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 1985,
											"end": 2016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2016,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1985,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1978,
											"end": 2016,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 2024,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1909,
											"end": 2024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 5073,
											"end": 5373,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2383,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2376,
											"end": 2395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3205,
											"end": 3207,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3187,
											"end": 3208,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3244,
											"end": 3246,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3224,
											"end": 3242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3217,
											"end": 3247,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3283,
											"end": 3316,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3263,
											"end": 3281,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3256,
											"end": 3317,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 3334,
											"end": 3352,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 3003,
											"end": 3358,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "tag",
											"source": 2,
											"value": "204"
										},
										{
											"begin": 2368,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1778,
											"end": 1779,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2509,
											"end": 2527,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5173,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1050,
											"end": 1062,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1065,
											"end": 1092,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1092,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1115,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1139,
											"end": 1148,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1139,
											"end": 1148,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1103,
											"end": 1160,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1182,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1185,
											"end": 1230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1208,
											"end": 1212,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1214,
											"end": 1229,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1207,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 1185,
											"end": 1230,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1185,
											"end": 1230,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 1185,
											"end": 1230,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1230,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1170,
											"end": 1230,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1279,
											"end": 1283,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1278,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1264,
											"end": 1284,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1264,
											"end": 1284,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1261,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1241,
											"end": 1284,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2963,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1309,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1295,
											"end": 1338,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1374,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1417,
											"end": 1424,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1416,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1410,
											"end": 1425,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1425,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1410,
											"end": 1425,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1391,
											"end": 1407,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1407,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1391,
											"end": 1425,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1474,
											"end": 1494,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1474,
											"end": 1494,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1471,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1494,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1509,
											"end": 1536,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1536,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1539,
											"end": 1554,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 1554,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 1349,
											"end": 1566,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5203,
											"end": 5204,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5194,
											"end": 5200,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5204,
											"modifierDepth": 3,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5186,
											"end": 5223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5186,
											"end": 5223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4497,
											"end": 4499,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5186,
											"end": 5223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4500,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4509,
											"end": 4539,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "43616E6E6F74207374616B65203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "94"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4555,
											"end": 4573,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4548,
											"end": 4592,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 4609,
											"end": 4627,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 4295,
											"end": 4633,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 5186,
											"end": 5223,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5261,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5249,
											"end": 5261,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5273,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5249,
											"end": 5273,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5266,
											"end": 5272,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5265,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5249,
											"end": 5273,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5273,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 5249,
											"end": 5273,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5246,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 5234,
											"end": 5273,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5317,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5317,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5311,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5302,
											"end": 5317,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5329,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5302,
											"end": 5329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5328,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5321,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 5302,
											"end": 5329,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5302,
											"end": 5329,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5302,
											"end": 5329,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5293,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 5284,
											"end": 5299,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5299,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5329,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5329,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5329,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5284,
											"end": 5329,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 5345,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5345,
											"end": 5365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 502,
											"end": 520,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 383,
											"end": 560,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5345,
											"end": 5365,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1734,
											"end": 1735,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2688,
											"end": 2695,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2688,
											"end": 2710,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5073,
											"end": 5373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2508,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 2508,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2615,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 2599,
											"end": 2614,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2584,
											"end": 2615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3771,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3796,
											"end": 3805,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3810,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3835,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3796,
											"end": 3835,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3835,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3835,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3814,
											"end": 3835,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3796,
											"end": 3835,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3796,
											"end": 3835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3872,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3793,
											"end": 3872,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3859,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3860,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 3852,
											"end": 3860,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3793,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3793,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3898,
											"end": 3907,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3895,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3887,
											"end": 3907,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3956,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3956,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3884,
											"end": 3956,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3944,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3884,
											"end": 3956,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3884,
											"end": 3956,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 3979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3993,
											"end": 4005,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3993,
											"end": 4005,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 3990,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3982,
											"end": 4005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3982,
											"end": 4005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 4005,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3968,
											"end": 4005,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4036,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4060,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4060,
											"end": 4072,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4054,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 4054,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4051,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4039,
											"end": 4051,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4039,
											"end": 4072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4039,
											"end": 4072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4072,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 4039,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4158,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4146,
											"end": 4158,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4128,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4119,
											"end": 4127,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4104,
											"end": 4128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4128,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 4104,
											"end": 4128,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4104,
											"end": 4143,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4143,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4104,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4143,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4104,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4104,
											"end": 4158,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4104,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4104,
											"end": 4158,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4104,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4158,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4192,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4221,
											"end": 4233,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 4208,
											"end": 4217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4205,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4196,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4196,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4195,
											"end": 4233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4195,
											"end": 4233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4195,
											"end": 4233,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4195,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4171,
											"end": 4233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4263,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4310,
											"end": 4322,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4294,
											"end": 4307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4281,
											"end": 4290,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4266,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4266,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4266,
											"end": 4307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4307,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4266,
											"end": 4307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4307,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4266,
											"end": 4307,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4266,
											"end": 4322,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4322,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4266,
											"end": 4322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4266,
											"end": 4322,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 4266,
											"end": 4322,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4244,
											"end": 4322,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4384,
											"end": 4403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4449,
											"end": 4452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4434,
											"end": 4446,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4418,
											"end": 4431,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4415,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4406,
											"end": 4431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4431,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 4406,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4406,
											"end": 4446,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4406,
											"end": 4446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4406,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4406,
											"end": 4452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4406,
											"end": 4452,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4452,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4485,
											"end": 4519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4503,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4500,
											"end": 4518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4500,
											"end": 4518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4485,
											"end": 4519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4485,
											"end": 4519,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4485,
											"end": 4519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4519,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4463,
											"end": 4519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4519,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4531,
											"end": 4553,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4664,
											"end": 4676,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4661,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4658,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 4677,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4643,
											"end": 4677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4621,
											"end": 4677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4725,
											"end": 4737,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4711,
											"end": 4737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4722,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4711,
											"end": 4737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4711,
											"end": 4737,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 4711,
											"end": 4737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4707,
											"end": 4737,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 4901,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4878,
											"end": 4901,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4854,
											"end": 4875,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4783,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4783,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4826,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4773,
											"end": 4783,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 4783,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4826,
											"end": 4850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4826,
											"end": 4850,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4826,
											"end": 4850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4825,
											"end": 4875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4825,
											"end": 4875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4875,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4825,
											"end": 4875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4825,
											"end": 4901,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4825,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4825,
											"end": 4901,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4825,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4811,
											"end": 4901,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 4811,
											"end": 4901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4811,
											"end": 4901,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4811,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4901,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4933,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4798,
											"end": 4901,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4947,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4933,
											"end": 4960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 4960,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4933,
											"end": 4960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4960,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4739,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4739,
											"end": 4742,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 4688,
											"end": 4972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5036,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5048,
											"end": 5056,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5036,
											"end": 5045,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 5036,
											"end": 5056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5036,
											"end": 5056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5036,
											"end": 5056,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 5036,
											"end": 5056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5031,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 5007,
											"end": 5017,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5004,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5017,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4990,
											"end": 5017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5017,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 4990,
											"end": 5017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 4990,
											"end": 5031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 4990,
											"end": 5031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4989,
											"end": 5057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5057,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4989,
											"end": 5057,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4989,
											"end": 5057,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 4989,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 5057,
											"name": "SWAP14",
											"source": 1
										},
										{
											"begin": 3674,
											"end": 5065,
											"name": "SWAP13",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3674,
											"end": 5065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5922,
											"end": 5924,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1388,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5904,
											"end": 5925,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5961,
											"end": 5963,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5941,
											"end": 5959,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5934,
											"end": 5964,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6000,
											"end": 6034,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5980,
											"end": 5998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5973,
											"end": 6035,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6051,
											"end": 6069,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6044,
											"end": 6080,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6097,
											"end": 6116,
											"name": "PUSH",
											"source": 7,
											"value": "84"
										},
										{
											"begin": 6097,
											"end": 6116,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 5720,
											"end": 6122,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1418,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1399,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "tag",
											"source": 6,
											"value": "139"
										},
										{
											"begin": 3214,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3272,
											"end": 3279,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3303,
											"end": 3304,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3300,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "238"
										},
										{
											"begin": 3299,
											"end": 3304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3571,
											"end": 3669,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3629,
											"end": 3636,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 3660,
											"end": 3661,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3656,
											"end": 3661,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "241"
										},
										{
											"begin": 3656,
											"end": 3661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "tag",
											"source": 6,
											"value": "141"
										},
										{
											"begin": 3970,
											"end": 4068,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4028,
											"end": 4035,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 4059,
											"end": 4060,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4056,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4055,
											"end": 4060,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "243"
										},
										{
											"begin": 4055,
											"end": 4060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "tag",
											"source": 6,
											"value": "142"
										},
										{
											"begin": 2833,
											"end": 2931,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2891,
											"end": 2898,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "134"
										},
										{
											"begin": 2922,
											"end": 2923,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2919,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2918,
											"end": 2923,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "234"
										},
										{
											"begin": 2918,
											"end": 2923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2500,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2032,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2128,
											"end": 2129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2129,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2153,
											"end": 2162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 2112,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2197,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2221,
											"end": 2233,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2208,
											"end": 2217,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2205,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2201,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 2201,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2200,
											"end": 2233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 2200,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2236,
											"end": 2237,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2200,
											"end": 2237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 2200,
											"end": 2237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2264,
											"end": 2276,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2184,
											"end": 2237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2261,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2307,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2306,
											"end": 2315,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2385,
											"end": 2408,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2385,
											"end": 2408,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2382,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2361,
											"end": 2382,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2353,
											"end": 2382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2353,
											"end": 2382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2382,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2353,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2353,
											"end": 2408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2353,
											"end": 2408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2408,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2353,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2345,
											"end": 2408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2345,
											"end": 2408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2337,
											"end": 2408,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 2317,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 2287,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2469,
											"end": 2492,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2469,
											"end": 2492,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2445,
											"end": 2466,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2437,
											"end": 2466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2442,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2437,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2466,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2437,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2437,
											"end": 2492,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2492,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 2437,
											"end": 2492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2492,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2437,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2492,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2032,
											"end": 2500,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2032,
											"end": 2500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2631,
											"end": 2854,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 2631,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2711,
											"end": 2732,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2755,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2750,
											"end": 2754,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2735,
											"end": 2755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2755,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2735,
											"end": 2755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2755,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2766,
											"end": 2784,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2805,
											"end": 2817,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2805,
											"end": 2817,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 2787,
											"end": 2804,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2818,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2818,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2818,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2787,
											"end": 2818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2787,
											"end": 2818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 7,
											"value": "314"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 7,
											"value": "38"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 7,
											"value": "316"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 565,
											"end": 683,
											"name": "tag",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 565,
											"end": 683,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 651,
											"end": 656,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 644,
											"end": 657,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 637,
											"end": 658,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 630,
											"end": 635,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 627,
											"end": 659,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 617,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "280"
										},
										{
											"begin": 617,
											"end": 677,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 673,
											"end": 674,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 671,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 663,
											"end": 675,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "tag",
											"source": 7,
											"value": "51"
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 753,
											"end": 759,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 767,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 793,
											"end": 800,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 789,
											"end": 812,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 785,
											"end": 817,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 782,
											"end": 834,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 782,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 830,
											"end": 831,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 827,
											"end": 828,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 820,
											"end": 832,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 782,
											"end": 834,
											"name": "tag",
											"source": 7,
											"value": "322"
										},
										{
											"begin": 782,
											"end": 834,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 872,
											"end": 881,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 853,
											"end": 882,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 853,
											"end": 882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 853,
											"end": 882,
											"name": "tag",
											"source": 7,
											"value": "323"
										},
										{
											"begin": 853,
											"end": 882,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 843,
											"end": 882,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 843,
											"end": 882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 932,
											"end": 934,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 921,
											"end": 930,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 917,
											"end": 935,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 904,
											"end": 936,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 945,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 967,
											"end": 972,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 945,
											"end": 973,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 945,
											"end": 973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 945,
											"end": 973,
											"name": "tag",
											"source": 7,
											"value": "324"
										},
										{
											"begin": 945,
											"end": 973,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 992,
											"end": 997,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 982,
											"end": 997,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 982,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 982,
											"end": 997,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 688,
											"end": 1003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1380,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 1200,
											"end": 1380,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1265,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1300,
											"end": 1309,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1291,
											"end": 1298,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1287,
											"end": 1310,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1283,
											"end": 1315,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1329,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1325,
											"end": 1326,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1318,
											"end": 1330,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "tag",
											"source": 7,
											"value": "327"
										},
										{
											"begin": 1280,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1351,
											"end": 1374,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1200,
											"end": 1380,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1200,
											"end": 1380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1593,
											"end": 1847,
											"name": "tag",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 1593,
											"end": 1847,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1661,
											"end": 1667,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1675,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1722,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1710,
											"end": 1719,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1701,
											"end": 1708,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1697,
											"end": 1720,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1693,
											"end": 1725,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1738,
											"end": 1739,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1735,
											"end": 1736,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1728,
											"end": 1740,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "tag",
											"source": 7,
											"value": "330"
										},
										{
											"begin": 1690,
											"end": 1742,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1780,
											"end": 1789,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "308"
										},
										{
											"begin": 1761,
											"end": 1790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "tag",
											"source": 7,
											"value": "331"
										},
										{
											"begin": 1761,
											"end": 1790,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1751,
											"end": 1790,
											"name": "SWAP5",
											"source": 7
										},
										{
											"begin": 1837,
											"end": 1839,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1822,
											"end": 1840,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1841,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1809,
											"end": 1841,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1593,
											"end": 1847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2074,
											"end": 2322,
											"name": "tag",
											"source": 7,
											"value": "123"
										},
										{
											"begin": 2074,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2142,
											"end": 2148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2156,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2191,
											"end": 2200,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2182,
											"end": 2189,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2178,
											"end": 2201,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2174,
											"end": 2206,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2219,
											"end": 2220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2217,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2209,
											"end": 2221,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "tag",
											"source": 7,
											"value": "334"
										},
										{
											"begin": 2171,
											"end": 2223,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2242,
											"end": 2265,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2312,
											"end": 2314,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2297,
											"end": 2315,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2284,
											"end": 2316,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2074,
											"end": 2322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2725,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 2327,
											"end": 2725,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2529,
											"end": 2531,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2511,
											"end": 2532,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2532,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2511,
											"end": 2532,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2548,
											"end": 2566,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2541,
											"end": 2571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2607,
											"end": 2641,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E"
										},
										{
											"begin": 2602,
											"end": 2604,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2587,
											"end": 2605,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2580,
											"end": 2642,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2673,
											"end": 2675,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2658,
											"end": 2676,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2651,
											"end": 2683,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2715,
											"end": 2718,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2700,
											"end": 2719,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2327,
											"end": 2725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3642,
											"end": 3887,
											"name": "tag",
											"source": 7,
											"value": "172"
										},
										{
											"begin": 3642,
											"end": 3887,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3709,
											"end": 3715,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3762,
											"end": 3764,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3750,
											"end": 3759,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3741,
											"end": 3748,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3737,
											"end": 3760,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3733,
											"end": 3765,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3778,
											"end": 3779,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3775,
											"end": 3776,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3768,
											"end": 3780,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "tag",
											"source": 7,
											"value": "340"
										},
										{
											"begin": 3730,
											"end": 3782,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3810,
											"end": 3819,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3804,
											"end": 3820,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "134"
										},
										{
											"begin": 3851,
											"end": 3856,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3829,
											"end": 3857,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "309"
										},
										{
											"begin": 3829,
											"end": 3857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 4290,
											"name": "tag",
											"source": 7,
											"value": "179"
										},
										{
											"begin": 3892,
											"end": 4290,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4094,
											"end": 4096,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4076,
											"end": 4097,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4133,
											"end": 4135,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4113,
											"end": 4131,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4106,
											"end": 4136,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4172,
											"end": 4206,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D"
										},
										{
											"begin": 4167,
											"end": 4169,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4152,
											"end": 4170,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4145,
											"end": 4207,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "34B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4238,
											"end": 4240,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4223,
											"end": 4241,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4216,
											"end": 4248,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4280,
											"end": 4283,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4265,
											"end": 4284,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3892,
											"end": 4290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4638,
											"end": 4765,
											"name": "tag",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4638,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4699,
											"end": 4709,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4694,
											"end": 4697,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4690,
											"end": 4710,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4687,
											"end": 4688,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4680,
											"end": 4711,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4730,
											"end": 4734,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 4727,
											"end": 4728,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4720,
											"end": 4735,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4754,
											"end": 4758,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 4751,
											"end": 4752,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4759,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 4770,
											"end": 4895,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 4770,
											"end": 4895,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4835,
											"end": 4844,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4856,
											"end": 4866,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4856,
											"end": 4866,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4856,
											"end": 4866,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 4889,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4853,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4853,
											"end": 4889,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4869,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 4869,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 4869,
											"end": 4887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4900,
											"end": 5027,
											"name": "tag",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 4900,
											"end": 5027,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4961,
											"end": 4971,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B71"
										},
										{
											"begin": 4956,
											"end": 4959,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 4952,
											"end": 4972,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4942,
											"end": 4973,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4992,
											"end": 4996,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 4989,
											"end": 4990,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 4982,
											"end": 4997,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5016,
											"end": 5020,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 5013,
											"end": 5014,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5006,
											"end": 5021,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5144,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 5032,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5064,
											"end": 5065,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5090,
											"end": 5091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5080,
											"end": 5115,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5080,
											"end": 5115,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5095,
											"end": 5113,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "tag",
											"source": 7,
											"value": "351"
										},
										{
											"begin": 5095,
											"end": 5113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5032,
											"end": 5144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5149,
											"end": 5277,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 5149,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5216,
											"end": 5225,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5248,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5237,
											"end": 5248,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5271,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5234,
											"end": 5271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5234,
											"end": 5271,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5251,
											"end": 5269,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5251,
											"end": 5269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5450,
											"name": "tag",
											"source": 7,
											"value": "241"
										},
										{
											"begin": 5282,
											"end": 5450,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5355,
											"end": 5364,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5386,
											"end": 5395,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5403,
											"end": 5418,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5397,
											"end": 5419,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5383,
											"end": 5420,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 5373,
											"end": 5444,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5373,
											"end": 5444,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "193"
										},
										{
											"begin": 5424,
											"end": 5442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5424,
											"end": 5442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5455,
											"end": 5575,
											"name": "tag",
											"source": 7,
											"value": "243"
										},
										{
											"begin": 5455,
											"end": 5575,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5495,
											"end": 5496,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5521,
											"end": 5522,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5511,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5511,
											"end": 5546,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "311"
										},
										{
											"begin": 5526,
											"end": 5544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "tag",
											"source": 7,
											"value": "360"
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 5560,
											"end": 5569,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5455,
											"end": 5575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5715,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 5580,
											"end": 5715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5619,
											"end": 5622,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5640,
											"end": 5657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5637,
											"end": 5680,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5637,
											"end": 5680,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "310"
										},
										{
											"begin": 5660,
											"end": 5678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "tag",
											"source": 7,
											"value": "363"
										},
										{
											"begin": 5660,
											"end": 5678,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5707,
											"end": 5708,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 5696,
											"end": 5709,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5696,
											"end": 5709,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5580,
											"end": 5715,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"earned(address)": "008cc262",
							"getCurRewardPool()": "9499c549",
							"getCurRewardRate()": "cdda56e0",
							"getReward()": "3d18b912",
							"getTimeWeightedAveRate(uint256,uint256)": "da4f8431",
							"isAdmin(address)": "24d7806c",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"powersOf(address)": "b79ec812",
							"rateInterval()": "6139d4b4",
							"rateIntervalDenominator()": "7a6fcee7",
							"rateIntervalNumerator()": "3c4045cf",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setStartTime(uint256)": "3e0a322d",
							"stake(address,uint256)": "adc9772e",
							"startTime()": "78e97925",
							"totalPowers()": "6917c501",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"userLastUpdateTime(address)": "8107368b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightTime\",\"type\":\"uint256\"}],\"name\":\"getTimeWeightedAveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"powersOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/stake.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0xecce8b36e465392f33e6ae9d44272b131430f291d3ecdfa7679059adc5be059c\",\"urls\":[\"bzz-raw://772ae01a8031aa1cccb1bc71a3c75bbc3b784c67cb60df06fee1b4e3f57e85f4\",\"dweb:/ipfs/QmTbSeMHx5NeGbTtdpR8fKNf8txs7SRbMZrTPxw3uMs8tP\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 786,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 191,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)893"
							},
							{
								"astId": 195,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 202,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "totalRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 204,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "startTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 207,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateInterval",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 210,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalNumerator",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 213,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalDenominator",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 215,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 217,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 221,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 225,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userLastUpdateTime",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 227,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_totalPowers",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 231,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)893": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x06707b8e54c7eb2b94ccbc637da3fff949722f4b486240f9c90d78791a2a4236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2ffd99bd45ef286df212f5ee7104f995164b3ec2d892d322c02fbac2b1c86ba\",\"dweb:/ipfs/QmSmuvFCGuke41naLkGXikj2pjjLNfK1THf5KCFNzHt5KM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 786,
								"contract": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":662:4013  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 ORIGIN 0xD4 PUSH16 0xFC2071DBE7AEC9482D52C73CC01BE16F 0x1F SMOD DUP1 0xBA 0xE8 SWAP10 PUSH20 0xCD1574EDF064736F6C6343000811003300000000 ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;662:3351:4;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 ORIGIN 0xD4 PUSH16 0xFC2071DBE7AEC9482D52C73CC01BE16F 0x1F SMOD DUP1 0xBA 0xE8 SWAP10 PUSH20 0xCD1574EDF064736F6C6343000811003300000000 ",
							"sourceMap": "662:3351:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 662,
									"end": 4013,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209432d46ffc2071dbe7aec9482d52c73cc01be16f1f0780bae89973cd1574edf064736f6c63430008110033",
									".code": [
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 662,
											"end": 4013,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xd3498b152364c51284e38a01585debf7f69c6908fbab1da8f11a75ba5b89c251\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb8f6252c31c2ffb1143ca2d9e89e2cf6f031f1dd2e6a9b06fd81ab3ab6cf12b\",\"dweb:/ipfs/QmSJp6A2Ku5F1nZvRp8PnmKtCocurhVcXiZtKC7L86zY6b\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x1d8c67ff4df5cae6fe8e310ad03346ee68a394357f1f300f25e7dcd239237768\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://295c487f024e0ae6114161519a82d21b9689da0a98bd4234351512d1dc3c9e77\",\"dweb:/ipfs/QmYvtHQ7mLC2tjjdz6Q3HAGWR25WjgvNh8KGkTdhjRVm9t\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":187:8124  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 EXP EQ DUP7 DUP3 0xCF 0xB7 0x2F 0x2A MOD STATICCALL PUSH22 0x1F8081288CCC719A134BE4DDF2ECD416CF7830D26473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;187:7937:5;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 EXP EQ DUP7 DUP3 0xCF 0xB7 0x2F 0x2A MOD STATICCALL PUSH22 0x1F8081288CCC719A134BE4DDF2ECD416CF7830D26473 PUSH16 0x6C634300081100330000000000000000 ",
							"sourceMap": "187:7937:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 187,
									"end": 8124,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d80a148682cfb72f2a06fa751f8081288ccc719a134be4ddf2ecd416cf7830d264736f6c63430008110033",
									".code": [
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 187,
											"end": 8124,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x5ecc35dbdbecd0fb1ef55aaac24c52625952b288220eb19f828f8a09a9c10229\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f86c64d344a2826ceca37440c53159f5f9b298653c8d60edfeba50ecfe175878\",\"dweb:/ipfs/QmSx7BqU1YDXLzafmUp6rAWiDMmR3vyJ1zM7hBWgvT5qxp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":482:6994  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xE9 DUP6 CALLER 0xB1 PUSH22 0x921EE89AEFEBC29F71A883AE001B45B140700DF4508A 0xD1 PUSH10 0x429664736F6C63430008 GT STOP CALLER ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;482:6512:6;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE 0xE9 DUP6 CALLER 0xB1 PUSH22 0x921EE89AEFEBC29F71A883AE001B45B140700DF4508A 0xD1 PUSH10 0x429664736F6C63430008 GT STOP CALLER ",
							"sourceMap": "482:6512:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 482,
									"end": 6994,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122048e98533b175921ee89aefebc29f71a883ae001b45b140700df4508ad169429664736f6c63430008110033",
									".code": [
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 482,
											"end": 6994,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x2bc6c5dcc8227e2c72debda8b30d912ea9acf7b3938b2729d2de3bf9e5546e19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e297a8cc9b2b2d9819ddfa1d3fbfefa1b5677fc75443be19c518f13f35a4fc3\",\"dweb:/ipfs/QmYvxeCTDkdxRvfB9SyiSFWUYTNFhvqFbY6UF2pHruJFaQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/adminable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/adminable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/stake.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/stake.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"inviter_presell/adminable.sol": {
				"ast": {
					"absolutePath": "inviter_presell/adminable.sol",
					"exportedSymbols": {
						"Adminable": [
							175
						],
						"Context": [
							20
						]
					},
					"id": 176,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "48:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "125:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "147:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "136:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "72:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:9:0"
									},
									"scope": 20,
									"src": "63:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "236:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "258:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "254:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "247:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "178:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "220:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:0"
									},
									"scope": 20,
									"src": "169:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 176,
							"src": "30:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "Context",
										"nameLocations": [
											"310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "310:7:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:0"
								}
							],
							"canonicalName": "Adminable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								20
							],
							"name": "Adminable",
							"nameLocation": "297:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "358:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "325:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "388:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "372:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "409:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "446:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "430:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "461:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "403:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854",
									"id": 42,
									"name": "ModificationAdmin",
									"nameLocation": "499:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "517:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:53:0"
									},
									"src": "493:77:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "592:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 46,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "603:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "603:32:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 175,
									"src": "578:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "672:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "702:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "691:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															},
															"value": "Adminable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "683:70:0"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "764:1:0"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"src": "651:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "802:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 68,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "829:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 67,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d696e",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															},
															"value": "Adminable: caller is not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "813:68:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAdmin",
									"nameLocation": "790:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "781:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "964:32:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "975:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "918:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:0"
									},
									"scope": 175,
									"src": "909:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1073:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1084:23:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1013:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 175,
									"src": "1004:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1188:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 99,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"1167:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1167:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 175,
									"src": "1123:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1304:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1335:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1315:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1399:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1243:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 175,
									"src": "1234:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1506:128:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:25:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1553:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1581:45:0"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:18:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:0"
									},
									"scope": 175,
									"src": "1443:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1721:105:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 161,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 163,
															"indexExpression": {
																"id": 162,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 164,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "ModificationAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1732:53:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 167,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1796:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1813:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1796:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1796:22:0"
											}
										]
									},
									"functionSelector": "18e20ecf",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 156,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:0"
										}
									],
									"name": "modificationAdmin",
									"nameLocation": "1651:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:27:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 175,
									"src": "1642:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "279:1550:0",
							"usedErrors": []
						}
					],
					"src": "2:1829:0"
				},
				"id": 0
			},
			"inviter_presell/stake.sol": {
				"ast": {
					"absolutePath": "inviter_presell/stake.sol",
					"exportedSymbols": {
						"Address": [
							1414
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							893
						],
						"ReentrancyGuard": [
							815
						],
						"SafeERC20": [
							1117
						],
						"SafeMath": [
							1726
						],
						"StakingRewards": [
							775
						]
					},
					"id": 776,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "inviter_presell/adminable.sol",
							"file": "./adminable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 176,
							"src": "30:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 1727,
							"src": "57:73:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 1118,
							"src": "132:81:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 776,
							"sourceUnit": 816,
							"src": "215:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 182,
										"name": "Adminable",
										"nameLocations": [
											"324:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "324:9:1"
									},
									"id": 183,
									"nodeType": "InheritanceSpecifier",
									"src": "324:9:1"
								},
								{
									"baseName": {
										"id": 184,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"336:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 815,
										"src": "336:15:1"
									},
									"id": 185,
									"nodeType": "InheritanceSpecifier",
									"src": "336:15:1"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 775,
							"linearizedBaseContracts": [
								775,
								815,
								175,
								20
							],
							"name": "StakingRewards",
							"nameLocation": "306:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 188,
									"libraryName": {
										"id": 186,
										"name": "SafeMath",
										"nameLocations": [
											"364:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1726,
										"src": "364:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "358:27:1",
									"typeName": {
										"id": 187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "377:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 191,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "407:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "393:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$893",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 190,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 189,
											"name": "IERC20",
											"nameLocations": [
												"393:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 893,
											"src": "393:6:1"
										},
										"referencedDeclaration": 893,
										"src": "393:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$893",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 195,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "461:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "426:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 194,
										"keyType": {
											"id": 192,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "434:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "426:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 193,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "445:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 202,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "492:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "477:44:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "477:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_400000000000000000000_by_1",
											"typeString": "int_const 400000000000000000000"
										},
										"id": 201,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "343030",
											"id": 197,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "507:3:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_400_by_1",
												"typeString": "int_const 400"
											},
											"value": "400"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 200,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 198,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "513:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "519:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "513:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "507:14:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_400000000000000000000_by_1",
											"typeString": "int_const 400000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 204,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "543:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "528:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 203,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "528:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6139d4b4",
									"id": 207,
									"mutability": "mutable",
									"name": "rateInterval",
									"nameLocation": "574:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "559:36:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "559:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 206,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "589:6:1",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_86400_by_1",
											"typeString": "int_const 86400"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c4045cf",
									"id": 210,
									"mutability": "mutable",
									"name": "rateIntervalNumerator",
									"nameLocation": "617:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "602:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 208,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "602:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 209,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "641:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a6fcee7",
									"id": 213,
									"mutability": "mutable",
									"name": "rateIntervalDenominator",
									"nameLocation": "664:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "649:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 211,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "649:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 212,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "690:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 215,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "716:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "701:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 214,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "701:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 217,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "752:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "737:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "737:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 221,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "816:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "781:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 220,
										"keyType": {
											"id": 218,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "789:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "781:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 219,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "800:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8107368b",
									"id": 225,
									"mutability": "mutable",
									"name": "userLastUpdateTime",
									"nameLocation": "880:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "845:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 224,
										"keyType": {
											"id": 222,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "853:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "845:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 223,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "864:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 227,
									"mutability": "mutable",
									"name": "_totalPowers",
									"nameLocation": "923:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "907:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 226,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "907:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 231,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "978:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 775,
									"src": "942:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 230,
										"keyType": {
											"id": 228,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "950:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "942:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 229,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "961:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 299,
										"nodeType": "Block",
										"src": "1039:546:1",
										"statements": [
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1058:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "1050:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1050:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 240,
												"initialValue": {
													"baseExpression": {
														"id": 237,
														"name": "userLastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 225,
														"src": "1065:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 239,
													"indexExpression": {
														"id": 238,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1084:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1065:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1050:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 241,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "1106:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1114:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1106:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "1103:57:1",
												"trueBody": {
													"id": 248,
													"nodeType": "Block",
													"src": "1117:43:1",
													"statements": [
														{
															"expression": {
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 244,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "1132:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 245,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "1139:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1132:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 247,
															"nodeType": "ExpressionStatement",
															"src": "1132:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													251
												],
												"declarations": [
													{
														"constant": false,
														"id": 251,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1178:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 299,
														"src": "1170:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 257,
												"initialValue": {
													"arguments": [
														{
															"id": 253,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "1208:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 254,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1214:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1220:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1214:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 252,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "1185:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1185:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1170:60:1"
											},
											{
												"expression": {
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 258,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 217,
														"src": "1241:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 260,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "1279:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 259,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "1264:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1264:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1241:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "1241:43:1"
											},
											{
												"expression": {
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 264,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "1295:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 265,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "1312:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1312:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1295:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "1295:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 269,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 233,
														"src": "1353:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1372:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1364:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 270,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1364:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 273,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1364:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1353:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 297,
												"nodeType": "IfStatement",
												"src": "1349:217:1",
												"trueBody": {
													"id": 296,
													"nodeType": "Block",
													"src": "1376:190:1",
													"statements": [
														{
															"expression": {
																"id": 281,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 275,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "1391:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 277,
																	"indexExpression": {
																		"id": 276,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "1399:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1391:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 279,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 233,
																			"src": "1417:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 278,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 517,
																		"src": "1410:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 280,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1410:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1391:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 282,
															"nodeType": "ExpressionStatement",
															"src": "1391:34:1"
														},
														{
															"expression": {
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 283,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 221,
																		"src": "1440:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "1463:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1440:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 286,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 217,
																	"src": "1474:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1440:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 288,
															"nodeType": "ExpressionStatement",
															"src": "1440:54:1"
														},
														{
															"expression": {
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 289,
																		"name": "userLastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 225,
																		"src": "1509:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 291,
																	"indexExpression": {
																		"id": 290,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "1528:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1509:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 292,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1539:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1545:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1539:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1509:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 295,
															"nodeType": "ExpressionStatement",
															"src": "1509:45:1"
														}
													]
												}
											},
											{
												"id": 298,
												"nodeType": "PlaceholderStatement",
												"src": "1576:1:1"
											}
										]
									},
									"id": 300,
									"name": "updateReward",
									"nameLocation": "1009:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1030:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "1022:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1021:17:1"
									},
									"src": "1000:585:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 311,
										"nodeType": "Block",
										"src": "1646:35:1",
										"statements": [
											{
												"expression": {
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 307,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "1657:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 308,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "1669:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1657:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "1657:16:1"
											}
										]
									},
									"functionSelector": "3e0a322d",
									"id": 312,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 305,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 304,
												"name": "onlyAdmin",
												"nameLocations": [
													"1636:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "1636:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1636:9:1"
										}
									],
									"name": "setStartTime",
									"nameLocation": "1602:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "1623:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 312,
												"src": "1615:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1615:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1614:14:1"
									},
									"returnParameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1646:0:1"
									},
									"scope": 775,
									"src": "1593:88:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "1744:38:1",
										"statements": [
											{
												"expression": {
													"id": 317,
													"name": "_totalPowers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 227,
													"src": "1762:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 318,
												"nodeType": "Return",
												"src": "1755:19:1"
											}
										]
									},
									"functionSelector": "6917c501",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPowers",
									"nameLocation": "1698:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:2:1"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "1735:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1735:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1734:9:1"
									},
									"scope": 775,
									"src": "1689:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 331,
										"nodeType": "Block",
										"src": "1857:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 327,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 231,
														"src": "1875:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 329,
													"indexExpression": {
														"id": 328,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 322,
														"src": "1885:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1875:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 326,
												"id": 330,
												"nodeType": "Return",
												"src": "1868:25:1"
											}
										]
									},
									"functionSelector": "b79ec812",
									"id": 332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "powersOf",
									"nameLocation": "1799:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1816:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1808:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1807:17:1"
									},
									"returnParameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 332,
												"src": "1848:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1848:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1847:9:1"
									},
									"scope": 775,
									"src": "1790:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "1967:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 338,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2000:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2006:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2000:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 337,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "1985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1985:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 336,
												"id": 341,
												"nodeType": "Return",
												"src": "1978:38:1"
											}
										]
									},
									"functionSelector": "9499c549",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardPool",
									"nameLocation": "1918:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1934:2:1"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "1958:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1958:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1957:9:1"
									},
									"scope": 775,
									"src": "1909:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "2101:399:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 350,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "2115:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2128:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2115:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 356,
												"nodeType": "IfStatement",
												"src": "2112:62:1",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "2131:43:1",
													"statements": [
														{
															"expression": {
																"id": 353,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "2153:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 349,
															"id": 354,
															"nodeType": "Return",
															"src": "2146:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													358
												],
												"declarations": [
													{
														"constant": false,
														"id": 358,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2192:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 400,
														"src": "2184:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 357,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2184:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 367,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 364,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 361,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 359,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 345,
																		"src": "2201:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 360,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 204,
																		"src": "2208:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2201:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 362,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2200:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 363,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2221:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2200:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 365,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2236:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2200:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2184:53:1"
											},
											{
												"assignments": [
													369
												],
												"declarations": [
													{
														"constant": false,
														"id": 369,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2256:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 400,
														"src": "2248:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 368,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2248:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"id": 370,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "2264:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2248:28:1"
											},
											{
												"body": {
													"id": 392,
													"nodeType": "Block",
													"src": "2322:98:1",
													"statements": [
														{
															"expression": {
																"id": 390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 369,
																	"src": "2337:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 383,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 369,
																		"src": "2345:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 386,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 384,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 369,
																				"src": "2353:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 385,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 210,
																				"src": "2361:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2353:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 387,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "2385:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2353:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2345:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2337:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 391,
															"nodeType": "ExpressionStatement",
															"src": "2337:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 376,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2306:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 377,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 358,
														"src": "2310:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2306:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 393,
												"initializationExpression": {
													"assignments": [
														373
													],
													"declarations": [
														{
															"constant": false,
															"id": 373,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2299:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 393,
															"src": "2291:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 372,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2291:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 375,
													"initialValue": {
														"hexValue": "30",
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2303:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2291:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 380,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2317:3:1",
														"subExpression": {
															"id": 379,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "2319:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 381,
													"nodeType": "ExpressionStatement",
													"src": "2317:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2287:133:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 396,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 394,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 369,
															"src": "2437:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 395,
															"name": "rateIntervalNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "2445:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2437:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 397,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2469:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2437:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 399,
												"nodeType": "Return",
												"src": "2430:62:1"
											}
										]
									},
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardPool",
									"nameLocation": "2041:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2064:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2056:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2056:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2055:14:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "2092:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2091:9:1"
									},
									"scope": 775,
									"src": "2032:468:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "2566:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 407,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2599:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2605:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2599:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 406,
														"name": "_getRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 435,
														"src": "2584:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2584:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 405,
												"id": 410,
												"nodeType": "Return",
												"src": "2577:38:1"
											}
										]
									},
									"functionSelector": "cdda56e0",
									"id": 412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardRate",
									"nameLocation": "2517:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "2557:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 403,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2556:9:1"
									},
									"scope": 775,
									"src": "2508:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "2700:154:1",
										"statements": [
											{
												"assignments": [
													420
												],
												"declarations": [
													{
														"constant": false,
														"id": 420,
														"mutability": "mutable",
														"name": "curPoolAmount",
														"nameLocation": "2719:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "2711:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 419,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2711:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 424,
												"initialValue": {
													"arguments": [
														{
															"id": 422,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "2750:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 421,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2735:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2711:44:1"
											},
											{
												"assignments": [
													426
												],
												"declarations": [
													{
														"constant": false,
														"id": 426,
														"mutability": "mutable",
														"name": "rewardRate",
														"nameLocation": "2774:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "2766:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 425,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2766:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 431,
												"initialValue": {
													"arguments": [
														{
															"id": 429,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2805:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 427,
															"name": "curPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "2787:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2801:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1635,
														"src": "2787:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2787:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2766:52:1"
											},
											{
												"expression": {
													"id": 432,
													"name": "rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 426,
													"src": "2836:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 418,
												"id": 433,
												"nodeType": "Return",
												"src": "2829:17:1"
											}
										]
									},
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardRate",
									"nameLocation": "2640:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2663:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2655:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2654:14:1"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "2691:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2690:9:1"
									},
									"scope": 775,
									"src": "2631:223:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "2930:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 440,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2948:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2954:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2948:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 442,
												"nodeType": "Return",
												"src": "2941:22:1"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "2873:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2897:2:1"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "2921:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2921:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2920:9:1"
									},
									"scope": 775,
									"src": "2864:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "3053:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "3068:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3084:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3068:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "3064:77:1",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "3087:54:1",
													"statements": [
														{
															"expression": {
																"id": 454,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 217,
																"src": "3109:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 450,
															"id": 455,
															"nodeType": "Return",
															"src": "3102:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 472,
																	"name": "_totalPowers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "3291:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 469,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3281:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 466,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "3265:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 463,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 215,
																							"src": "3245:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 460,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 444,
																								"src": "3214:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 461,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3214:26:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 462,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3241:3:1",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1605,
																						"src": "3214:30:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 464,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3214:46:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3261:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1620,
																				"src": "3214:50:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 467,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3214:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3277:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1620,
																		"src": "3214:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3214:72:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3287:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1635,
																"src": "3214:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3214:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 458,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 217,
															"src": "3171:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3192:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1590,
														"src": "3171:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3171:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 450,
												"id": 475,
												"nodeType": "Return",
												"src": "3151:168:1"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "2988:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "3011:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3003:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3003:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3002:20:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "3044:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3044:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3043:9:1"
									},
									"scope": 775,
									"src": "2979:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "3398:233:1",
										"statements": [
											{
												"assignments": [
													485
												],
												"declarations": [
													{
														"constant": false,
														"id": 485,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "3417:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "3409:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 484,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3409:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 493,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 487,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 225,
																"src": "3447:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 489,
															"indexExpression": {
																"id": 488,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "3466:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3447:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 490,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "3476:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3482:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "3476:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 486,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "3424:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3424:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3409:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 511,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 195,
																"src": "3606:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 513,
															"indexExpression": {
																"id": 512,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "3614:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3606:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 508,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3596:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 502,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 221,
																						"src": "3558:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 504,
																					"indexExpression": {
																						"id": 503,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 479,
																						"src": "3581:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3558:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 499,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 485,
																							"src": "3548:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 498,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 477,
																						"src": "3533:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 500,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "3533:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3554:3:1",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1605,
																				"src": "3533:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3533:57:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 494,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 231,
																				"src": "3510:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 496,
																			"indexExpression": {
																				"id": 495,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 479,
																				"src": "3520:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3510:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3529:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1620,
																		"src": "3510:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3510:81:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3592:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1635,
																"src": "3510:85:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3510:91:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 510,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3602:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1590,
														"src": "3510:95:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 483,
												"id": 515,
												"nodeType": "Return",
												"src": "3503:120:1"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "3344:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3359:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3351:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3351:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3350:17:1"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "3389:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3389:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3388:9:1"
									},
									"scope": 775,
									"src": "3335:296:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 672,
										"nodeType": "Block",
										"src": "3772:1293:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 528,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 526,
															"name": "startTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "3796:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 527,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3809:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3796:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 529,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "3814:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 530,
															"name": "rightTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 521,
															"src": "3826:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3814:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3796:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "3793:79:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "3837:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3859:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 525,
															"id": 534,
															"nodeType": "Return",
															"src": "3852:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 537,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "3887:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 538,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 204,
														"src": "3898:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3887:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "3884:72:1",
												"trueBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "3909:47:1",
													"statements": [
														{
															"expression": {
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 540,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "3924:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 541,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "3935:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3924:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 543,
															"nodeType": "ExpressionStatement",
															"src": "3924:20:1"
														}
													]
												}
											},
											{
												"assignments": [
													547
												],
												"declarations": [
													{
														"constant": false,
														"id": 547,
														"mutability": "mutable",
														"name": "tmp",
														"nameLocation": "3976:3:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "3968:11:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 546,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3968:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 551,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 548,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "3982:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 549,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "3993:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3982:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3968:37:1"
											},
											{
												"assignments": [
													553
												],
												"declarations": [
													{
														"constant": false,
														"id": 553,
														"mutability": "mutable",
														"name": "leftInterval",
														"nameLocation": "4024:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4016:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 552,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4016:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 559,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 554,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4039:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 557,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 555,
															"name": "tmp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "4054:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"id": 556,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4060:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4054:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4039:33:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4016:56:1"
											},
											{
												"assignments": [
													561
												],
												"declarations": [
													{
														"constant": false,
														"id": 561,
														"mutability": "mutable",
														"name": "leftReward",
														"nameLocation": "4091:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4083:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 560,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4083:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 563,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "4119:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 562,
																"name": "_getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "4104:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4104:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 565,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4131:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4104:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 567,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4146:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4104:54:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4083:75:1"
											},
											{
												"assignments": [
													571
												],
												"declarations": [
													{
														"constant": false,
														"id": 571,
														"mutability": "mutable",
														"name": "rightInterval",
														"nameLocation": "4179:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4171:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 570,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 578,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 572,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "4196:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 573,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 204,
																	"src": "4208:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4196:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 575,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4195:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 576,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4221:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4195:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4171:62:1"
											},
											{
												"assignments": [
													580
												],
												"declarations": [
													{
														"constant": false,
														"id": 580,
														"mutability": "mutable",
														"name": "rightReward",
														"nameLocation": "4252:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4244:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 579,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4244:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 582,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "4281:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 581,
																"name": "_getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "4266:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4266:25:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 584,
															"name": "rightInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 571,
															"src": "4294:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4266:41:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 586,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "4310:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4266:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4244:78:1"
											},
											{
												"assignments": [
													590
												],
												"declarations": [
													{
														"constant": false,
														"id": 590,
														"mutability": "mutable",
														"name": "midInterval",
														"nameLocation": "4392:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4384:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 589,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4384:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 598,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 591,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 521,
																"src": "4406:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 592,
																"name": "rightInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "4418:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4406:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 594,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 553,
															"src": "4434:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4406:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 596,
														"name": "tmp",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 547,
														"src": "4449:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4406:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4384:68:1"
											},
											{
												"assignments": [
													600
												],
												"declarations": [
													{
														"constant": false,
														"id": 600,
														"mutability": "mutable",
														"name": "startReward",
														"nameLocation": "4471:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4463:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 599,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4463:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 606,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 602,
																"name": "tmp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "4500:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 603,
																"name": "leftInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "4506:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4500:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "4485:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4485:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4463:56:1"
											},
											{
												"assignments": [
													608
												],
												"declarations": [
													{
														"constant": false,
														"id": 608,
														"mutability": "mutable",
														"name": "midTotalReward",
														"nameLocation": "4539:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4531:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 607,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4531:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"id": 609,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 600,
													"src": "4556:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4531:36:1"
											},
											{
												"assignments": [
													612
												],
												"declarations": [
													{
														"constant": false,
														"id": 612,
														"mutability": "mutable",
														"name": "nextReward",
														"nameLocation": "4586:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4578:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 611,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4578:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"id": 613,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 600,
													"src": "4599:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4578:32:1"
											},
											{
												"assignments": [
													616
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "frontReward",
														"nameLocation": "4629:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 672,
														"src": "4621:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 615,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4621:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 622,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 618,
																"name": "tmp",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 547,
																"src": "4658:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 619,
																"name": "leftInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 553,
																"src": "4664:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4658:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 617,
														"name": "_getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "4643:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4643:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4621:56:1"
											},
											{
												"body": {
													"id": 658,
													"nodeType": "Block",
													"src": "4744:228:1",
													"statements": [
														{
															"expression": {
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 635,
																	"name": "frontReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 616,
																	"src": "4759:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 636,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "4773:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4759:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 638,
															"nodeType": "ExpressionStatement",
															"src": "4759:24:1"
														},
														{
															"expression": {
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 639,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "4798:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 640,
																		"name": "frontReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 616,
																		"src": "4811:11:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 648,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 643,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 641,
																							"name": "frontReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 616,
																							"src": "4826:11:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 642,
																							"name": "nextReward",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 612,
																							"src": "4840:10:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4826:24:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 644,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "4825:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 645,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 210,
																				"src": "4854:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4825:50:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 647,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 213,
																			"src": "4878:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4825:76:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4811:90:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4798:103:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "4798:103:1"
														},
														{
															"expression": {
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 652,
																	"name": "midTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 608,
																	"src": "4916:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 653,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "4933:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 654,
																		"name": "nextReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "4950:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4933:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4916:44:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 657,
															"nodeType": "ExpressionStatement",
															"src": "4916:44:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 627,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "4707:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 630,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 628,
															"name": "midInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 590,
															"src": "4711:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 629,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "4725:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4711:26:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4707:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 659,
												"initializationExpression": {
													"assignments": [
														624
													],
													"declarations": [
														{
															"constant": false,
															"id": 624,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4700:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 659,
															"src": "4692:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 623,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4692:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 626,
													"initialValue": {
														"hexValue": "30",
														"id": 625,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4704:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4692:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "4739:3:1",
														"subExpression": {
															"id": 632,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 634,
													"nodeType": "ExpressionStatement",
													"src": "4739:3:1"
												},
												"nodeType": "ForStatement",
												"src": "4688:284:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 660,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 608,
																		"src": "4990:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 661,
																		"name": "leftReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 561,
																		"src": "5007:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4990:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 663,
																	"name": "rightReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "5020:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4990:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 665,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4989:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 666,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 521,
																	"src": "5036:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 667,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 519,
																	"src": "5048:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5036:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 669,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5035:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4989:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 525,
												"id": 671,
												"nodeType": "Return",
												"src": "4982:75:1"
											}
										]
									},
									"functionSelector": "da4f8431",
									"id": 673,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeWeightedAveRate",
									"nameLocation": "3683:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "leftTime",
												"nameLocation": "3714:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3706:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3706:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "rightTime",
												"nameLocation": "3732:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3724:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3724:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3705:37:1"
									},
									"returnParameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 673,
												"src": "3764:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3764:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3763:9:1"
									},
									"scope": 775,
									"src": "3674:1391:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 718,
										"nodeType": "Block",
										"src": "5175:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 689,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "5194:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5203:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5194:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5206:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 688,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5186:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5186:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "5186:37:1"
											},
											{
												"expression": {
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 695,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 227,
														"src": "5234:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 698,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "5266:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 696,
																"name": "_totalPowers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "5249:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5262:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1590,
															"src": "5249:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 699,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5249:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5234:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "5234:39:1"
											},
											{
												"expression": {
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 702,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "5284:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 704,
														"indexExpression": {
															"id": 703,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "5294:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5284:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 709,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 677,
																"src": "5322:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 705,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "5302:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 707,
																"indexExpression": {
																	"id": 706,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "5312:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5302:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5318:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1590,
															"src": "5302:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 710,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5302:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5284:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 712,
												"nodeType": "ExpressionStatement",
												"src": "5284:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 714,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "5352:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 715,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 677,
															"src": "5358:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 713,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "5345:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5345:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 717,
												"nodeType": "EmitStatement",
												"src": "5340:25:1"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 719,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "nonReentrant",
												"nameLocations": [
													"5127:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 814,
												"src": "5127:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5127:12:1"
										},
										{
											"id": 682,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 681,
												"name": "onlyAdmin",
												"nameLocations": [
													"5140:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "5140:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5140:9:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 684,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5163:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5167:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5163:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 686,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 683,
												"name": "updateReward",
												"nameLocations": [
													"5150:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 300,
												"src": "5150:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5150:24:1"
										}
									],
									"name": "stake",
									"nameLocation": "5082:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5096:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "5088:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5110:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 719,
												"src": "5102:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5102:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:30:1"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5175:0:1"
									},
									"scope": 775,
									"src": "5073:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 761,
										"nodeType": "Block",
										"src": "5451:237:1",
										"statements": [
											{
												"assignments": [
													729
												],
												"declarations": [
													{
														"constant": false,
														"id": 729,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5470:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 761,
														"src": "5462:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 728,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5462:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 734,
												"initialValue": {
													"baseExpression": {
														"id": 730,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 195,
														"src": "5479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 733,
													"indexExpression": {
														"expression": {
															"id": 731,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5487:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5491:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5487:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5479:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5462:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 735,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 729,
														"src": "5513:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 736,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5522:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5513:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 760,
												"nodeType": "IfStatement",
												"src": "5509:172:1",
												"trueBody": {
													"id": 759,
													"nodeType": "Block",
													"src": "5525:156:1",
													"statements": [
														{
															"expression": {
																"id": 743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 738,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "5540:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 741,
																	"indexExpression": {
																		"expression": {
																			"id": 739,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5548:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 740,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5552:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5548:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5540:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5562:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5540:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 744,
															"nodeType": "ExpressionStatement",
															"src": "5540:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 748,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5600:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5604:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5600:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 750,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 729,
																		"src": "5612:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 745,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 191,
																		"src": "5578:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$893",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5591:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 842,
																	"src": "5578:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5578:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 752,
															"nodeType": "ExpressionStatement",
															"src": "5578:41:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 754,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5650:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5654:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5650:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 756,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 729,
																		"src": "5662:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 753,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "5639:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 757,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5639:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 758,
															"nodeType": "EmitStatement",
															"src": "5634:35:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 762,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 722,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 721,
												"name": "nonReentrant",
												"nameLocations": [
													"5413:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 814,
												"src": "5413:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5413:12:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 724,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5439:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5443:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5439:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 726,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 723,
												"name": "updateReward",
												"nameLocations": [
													"5426:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 300,
												"src": "5426:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "5426:24:1"
										}
									],
									"name": "getReward",
									"nameLocation": "5394:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5403:2:1"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5451:0:1"
									},
									"scope": 775,
									"src": "5385:303:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 768,
									"name": "Staked",
									"nameLocation": "5710:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5733:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5717:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5717:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5747:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5739:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5716:38:1"
									},
									"src": "5704:51:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 774,
									"name": "RewardPaid",
									"nameLocation": "5767:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 773,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5794:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5778:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5778:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "5808:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 774,
												"src": "5800:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 771,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5800:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5777:38:1"
									},
									"src": "5761:55:1"
								}
							],
							"scope": 776,
							"src": "297:5524:1",
							"usedErrors": []
						}
					],
					"src": "0:5821:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							815
						]
					},
					"id": 816,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 778,
								"nodeType": "StructuredDocumentation",
								"src": "127:765:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 815,
							"linearizedBaseContracts": [
								815
							],
							"name": "ReentrancyGuard",
							"nameLocation": "912:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 781,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1719:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "1694:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 779,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1694:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 780,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1734:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 784,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1767:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "1742:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 782,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1742:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 783,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1778:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 786,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1804:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 815,
									"src": "1788:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 785,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1788:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 793,
										"nodeType": "Block",
										"src": "1834:41:2",
										"statements": [
											{
												"expression": {
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 789,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "1845:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 790,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "1855:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1845:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 792,
												"nodeType": "ExpressionStatement",
												"src": "1845:22:2"
											}
										]
									},
									"id": 794,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1831:2:2"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1834:0:2"
									},
									"scope": 815,
									"src": "1820:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "2285:433:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 798,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 786,
																"src": "2376:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 799,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 784,
																"src": "2387:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2376:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2368:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "2368:63:2"
											},
											{
												"expression": {
													"id": 806,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 804,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "2509:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 805,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "2519:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2509:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 807,
												"nodeType": "ExpressionStatement",
												"src": "2509:18:2"
											},
											{
												"id": 808,
												"nodeType": "PlaceholderStatement",
												"src": "2540:1:2"
											},
											{
												"expression": {
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 809,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "2688:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 810,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "2698:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2688:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "2688:22:2"
											}
										]
									},
									"documentation": {
										"id": 795,
										"nodeType": "StructuredDocumentation",
										"src": "1883:372:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 814,
									"name": "nonReentrant",
									"nameLocation": "2270:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2282:2:2"
									},
									"src": "2261:457:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 816,
							"src": "894:1827:2",
							"usedErrors": []
						}
					],
					"src": "100:2623:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							893
						]
					},
					"id": 894,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 817,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 818,
								"nodeType": "StructuredDocumentation",
								"src": "121:72:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 893,
							"linearizedBaseContracts": [
								893
							],
							"name": "IERC20",
							"nameLocation": "205:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 819,
										"nodeType": "StructuredDocumentation",
										"src": "219:68:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 824,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "302:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "313:2:3"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 824,
												"src": "339:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "339:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "338:9:3"
									},
									"scope": 893,
									"src": "293:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 825,
										"nodeType": "StructuredDocumentation",
										"src": "356:74:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 832,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "445:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "463:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "455:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "455:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "454:17:3"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 832,
												"src": "495:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "495:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "494:9:3"
									},
									"scope": 893,
									"src": "436:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 833,
										"nodeType": "StructuredDocumentation",
										"src": "512:215:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "742:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "759:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "751:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "751:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "778:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "770:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "770:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "750:35:3"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "804:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "804:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:6:3"
									},
									"scope": 893,
									"src": "733:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "818:270:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1103:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1121:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1113:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1136:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1128:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1112:32:3"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 852,
												"src": "1168:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1168:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1167:9:3"
									},
									"scope": 893,
									"src": "1094:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 853,
										"nodeType": "StructuredDocumentation",
										"src": "1185:655:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 862,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1855:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1871:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1863:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 854,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1863:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1888:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1880:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1880:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:33:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "1914:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1914:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1913:6:3"
									},
									"scope": 893,
									"src": "1846:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 863,
										"nodeType": "StructuredDocumentation",
										"src": "1928:304:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2247:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2278:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2270:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 864,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2270:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2303:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2295:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2331:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2323:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2323:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2259:85:3"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "2363:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2363:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2362:6:3"
									},
									"scope": 893,
									"src": "2238:131:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "2377:163:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 883,
									"name": "Transfer",
									"nameLocation": "2552:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2577:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2561:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2561:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2599:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2583:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 878,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 881,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2611:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "2603:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 880,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2603:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2560:57:3"
									},
									"src": "2546:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "2626:151:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 892,
									"name": "Approval",
									"nameLocation": "2789:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2814:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "2798:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2798:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2837:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "2821:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2821:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2854:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 892,
												"src": "2846:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2797:63:3"
									},
									"src": "2783:78:3"
								}
							],
							"scope": 894,
							"src": "195:2669:3",
							"usedErrors": []
						}
					],
					"src": "94:2772:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1414
						],
						"IERC20": [
							893
						],
						"SafeERC20": [
							1117
						]
					},
					"id": 1118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 895,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 896,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1118,
							"sourceUnit": 894,
							"src": "130:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 897,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1118,
							"sourceUnit": 1415,
							"src": "155:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 898,
								"nodeType": "StructuredDocumentation",
								"src": "195:465:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1117,
							"linearizedBaseContracts": [
								1117
							],
							"name": "SafeERC20",
							"nameLocation": "670:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 901,
									"libraryName": {
										"id": 899,
										"name": "Address",
										"nameLocations": [
											"693:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1414,
										"src": "693:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "687:26:4",
									"typeName": {
										"id": 900,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "705:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 923,
										"nodeType": "Block",
										"src": "827:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 912,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "858:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 915,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 904,
																			"src": "888:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$893",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "894:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 842,
																		"src": "888:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "903:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "888:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 918,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 906,
																	"src": "913:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 919,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 908,
																	"src": "917:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 913,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "865:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 914,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "869:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "865:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "865:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 911,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "838:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$893_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "838:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "838:86:4"
											}
										]
									},
									"id": 924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "730:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "760:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "753:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$893",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 903,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 902,
														"name": "IERC20",
														"nameLocations": [
															"753:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 893,
														"src": "753:6:4"
													},
													"referencedDeclaration": 893,
													"src": "753:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$893",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "784:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "776:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "776:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "805:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 924,
												"src": "797:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "797:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:75:4"
									},
									"returnParameters": {
										"id": 910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:0:4"
									},
									"scope": 1117,
									"src": "721:211:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 949,
										"nodeType": "Block",
										"src": "1073:115:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 937,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 927,
															"src": "1104:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 940,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 927,
																			"src": "1134:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$893",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 941,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1140:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 874,
																		"src": "1134:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1153:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1134:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 943,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 929,
																	"src": "1163:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 944,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 931,
																	"src": "1169:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 945,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "1173:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 938,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1111:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1115:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1111:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1111:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 936,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1084:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$893_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1084:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 948,
												"nodeType": "ExpressionStatement",
												"src": "1084:96:4"
											}
										]
									},
									"id": 950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "949:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "983:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "976:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$893",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 926,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 925,
														"name": "IERC20",
														"nameLocations": [
															"976:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 893,
														"src": "976:6:4"
													},
													"referencedDeclaration": 893,
													"src": "976:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$893",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 929,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1007:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "999:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 928,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 931,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1030:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1022:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 930,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1022:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1051:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 950,
												"src": "1043:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "965:98:4"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1073:0:4"
									},
									"scope": 1117,
									"src": "940:248:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 993,
										"nodeType": "Block",
										"src": "1567:506:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 964,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 962,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 958,
																			"src": "1821:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 963,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1830:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1821:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 965,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1820:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 970,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1861:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1117",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1117",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 969,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1853:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 968,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1853:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 971,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1853:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 972,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 956,
																					"src": "1868:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 966,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 954,
																					"src": "1837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$893",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 967,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1843:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 852,
																				"src": "1837:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1837:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1880:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1837:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1836:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1820:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1897:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 961,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1798:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1798:166:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "1798:166:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 982,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 954,
															"src": "1995:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 985,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 954,
																			"src": "2025:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$893",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 986,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2031:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 862,
																		"src": "2025:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 987,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2039:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2025:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 988,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 956,
																	"src": "2049:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 989,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 958,
																	"src": "2058:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 983,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2002:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2006:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2002:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 990,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2002:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 981,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "1975:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$893_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 991,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1975:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 992,
												"nodeType": "ExpressionStatement",
												"src": "1975:90:4"
											}
										]
									},
									"documentation": {
										"id": 951,
										"nodeType": "StructuredDocumentation",
										"src": "1196:255:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 994,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1466:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1495:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1488:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$893",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 953,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 952,
														"name": "IERC20",
														"nameLocations": [
															"1488:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 893,
														"src": "1488:6:4"
													},
													"referencedDeclaration": 893,
													"src": "1488:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$893",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 955,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1545:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 994,
												"src": "1537:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1537:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1477:80:4"
									},
									"returnParameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1567:0:4"
									},
									"scope": 1117,
									"src": "1457:616:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "2201:197:4",
										"statements": [
											{
												"assignments": [
													1005
												],
												"declarations": [
													{
														"constant": false,
														"id": 1005,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2220:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "2212:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2212:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1016,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1010,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2259:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1117",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1117",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2251:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1008,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2251:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2251:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1012,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 999,
																"src": "2266:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1006,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 997,
																"src": "2235:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$893",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1007,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2241:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 852,
															"src": "2235:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1013,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2235:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1014,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "2277:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2235:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2212:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1018,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 997,
															"src": "2313:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1021,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 997,
																			"src": "2343:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$893",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2349:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 862,
																		"src": "2343:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1023,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2357:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2343:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1024,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 999,
																	"src": "2367:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1025,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "2376:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1019,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2320:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1020,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2324:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2320:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1026,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2320:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$893",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1017,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1116,
														"src": "2293:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$893_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1028,
												"nodeType": "ExpressionStatement",
												"src": "2293:97:4"
											}
										]
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2129:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2122:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$893",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 995,
														"name": "IERC20",
														"nameLocations": [
															"2122:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 893,
														"src": "2122:6:4"
													},
													"referencedDeclaration": 893,
													"src": "2122:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$893",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 999,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2153:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2145:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2145:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2179:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "2171:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2171:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:80:4"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:0:4"
									},
									"scope": 1117,
									"src": "2081:317:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "2526:377:4",
										"statements": [
											{
												"id": 1076,
												"nodeType": "UncheckedBlock",
												"src": "2537:359:4",
												"statements": [
													{
														"assignments": [
															1041
														],
														"declarations": [
															{
																"constant": false,
																"id": 1041,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2570:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1076,
																"src": "2562:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1040,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2562:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1050,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1046,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2609:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1117",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1117",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2601:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1044,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2601:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2601:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1048,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1035,
																	"src": "2616:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1042,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "2585:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$893",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2591:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 852,
																"src": "2585:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1049,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2585:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2562:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1052,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1041,
																		"src": "2647:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1053,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1037,
																		"src": "2663:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2647:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2670:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1051,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2639:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1056,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2639:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1057,
														"nodeType": "ExpressionStatement",
														"src": "2639:75:4"
													},
													{
														"assignments": [
															1059
														],
														"declarations": [
															{
																"constant": false,
																"id": 1059,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2737:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1076,
																"src": "2729:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1058,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2729:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1063,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1060,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1041,
																"src": "2752:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1061,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1037,
																"src": "2767:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2752:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2729:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1065,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1033,
																	"src": "2807:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$893",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1068,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1033,
																					"src": "2837:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$893",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2843:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 862,
																				"src": "2837:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2851:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2837:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1071,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1035,
																			"src": "2861:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1072,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1059,
																			"src": "2870:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1066,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2814:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1067,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2818:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2814:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2814:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$893",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1064,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1116,
																"src": "2787:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$893_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2787:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1075,
														"nodeType": "ExpressionStatement",
														"src": "2787:97:4"
													}
												]
											}
										]
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2415:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2454:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "2447:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$893",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1032,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1031,
														"name": "IERC20",
														"nameLocations": [
															"2447:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 893,
														"src": "2447:6:4"
													},
													"referencedDeclaration": 893,
													"src": "2447:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$893",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2478:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "2470:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2470:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2504:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "2496:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2436:80:4"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2526:0:4"
									},
									"scope": 1117,
									"src": "2406:497:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "3364:646:4",
										"statements": [
											{
												"assignments": [
													1088
												],
												"declarations": [
													{
														"constant": false,
														"id": 1088,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3731:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1115,
														"src": "3718:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1087,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3718:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1097,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1084,
															"src": "3772:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3778:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1091,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1082,
																	"src": "3752:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$893",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$893",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3744:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1089,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3744:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3744:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1093,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3759:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1208,
														"src": "3744:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3744:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3718:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1098,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1088,
															"src": "3828:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3839:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3828:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1100,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3848:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3828:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1114,
												"nodeType": "IfStatement",
												"src": "3824:179:4",
												"trueBody": {
													"id": 1113,
													"nodeType": "Block",
													"src": "3851:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1105,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1088,
																				"src": "3925:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1107,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3938:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1106,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3938:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1108,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3937:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1103,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3914:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1104,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3918:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3914:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3914:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3946:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1102,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3906:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3906:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1112,
															"nodeType": "ExpressionStatement",
															"src": "3906:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "2911:377:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3303:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3330:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "3323:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$893",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1080,
														"name": "IERC20",
														"nameLocations": [
															"3323:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 893,
														"src": "3323:6:4"
													},
													"referencedDeclaration": 893,
													"src": "3323:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$893",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "3337:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1083,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3337:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3322:33:4"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3364:0:4"
									},
									"scope": 1117,
									"src": "3294:716:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1118,
							"src": "662:3351:4",
							"usedErrors": []
						}
					],
					"src": "103:3912:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1414
						]
					},
					"id": 1415,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "89:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1120,
								"nodeType": "StructuredDocumentation",
								"src": "116:69:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1414,
							"linearizedBaseContracts": [
								1414
							],
							"name": "Address",
							"nameLocation": "195:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1136,
										"nodeType": "Block",
										"src": "863:321:5",
										"statements": [
											{
												"assignments": [
													1129
												],
												"declarations": [
													{
														"constant": false,
														"id": 1129,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1073:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1136,
														"src": "1065:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1128,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1065:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1130,
												"nodeType": "VariableDeclarationStatement",
												"src": "1065:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1097:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1120:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1120:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1112:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1123,
														"isOffset": false,
														"isSlot": false,
														"src": "1132:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1129,
														"isOffset": false,
														"isSlot": false,
														"src": "1112:4:5",
														"valueSize": 1
													}
												],
												"id": 1131,
												"nodeType": "InlineAssembly",
												"src": "1088:63:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1132,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1129,
														"src": "1168:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1175:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1168:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1127,
												"id": 1135,
												"nodeType": "Return",
												"src": "1161:15:5"
											}
										]
									},
									"documentation": {
										"id": 1121,
										"nodeType": "StructuredDocumentation",
										"src": "210:581:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1137,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "806:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "825:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "817:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:17:5"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "857:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1125,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "857:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "856:6:5"
									},
									"scope": 1414,
									"src": "797:387:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1170,
										"nodeType": "Block",
										"src": "2190:246:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1148,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2217:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1414",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1414",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2209:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1146,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2209:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2209:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2223:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2209:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1151,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "2234:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2209:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2242:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1145,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2201:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2201:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "ExpressionStatement",
												"src": "2201:73:5"
											},
											{
												"assignments": [
													1157,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1157,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2293:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1170,
														"src": "2288:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1156,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2288:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1164,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1158,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1140,
																"src": "2306:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2316:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2306:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1161,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1160,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1142,
																"src": "2328:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2306:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2306:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2287:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1157,
															"src": "2358:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2367:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1165,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2350:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2350:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1169,
												"nodeType": "ExpressionStatement",
												"src": "2350:78:5"
											}
										]
									},
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "1192:921:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2128:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2154:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2138:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2138:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2173:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1171,
												"src": "2165:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2165:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:43:5"
									},
									"returnParameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2190:0:5"
									},
									"scope": 1414,
									"src": "2119:317:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "3287:86:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1182,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "3318:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1176,
															"src": "3326:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3332:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1181,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1188,
															1208
														],
														"referencedDeclaration": 1208,
														"src": "3305:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3305:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1180,
												"id": 1186,
												"nodeType": "Return",
												"src": "3298:67:5"
											}
										]
									},
									"documentation": {
										"id": 1172,
										"nodeType": "StructuredDocumentation",
										"src": "2444:748:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3207:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3228:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3220:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3249:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3236:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1175,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3236:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:35:5"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "3273:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1178,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3272:14:5"
									},
									"scope": 1414,
									"src": "3198:175:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1207,
										"nodeType": "Block",
										"src": "3754:78:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1201,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "3794:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1202,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "3802:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3808:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1204,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "3811:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1200,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1228,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "3772:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3772:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1199,
												"id": 1206,
												"nodeType": "Return",
												"src": "3765:59:5"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "3381:216:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3612:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3643:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3635:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3673:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3660:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1192,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3660:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3702:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3688:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1194,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3624:97:5"
									},
									"returnParameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1208,
												"src": "3740:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1197,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3740:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3739:14:5"
									},
									"scope": 1414,
									"src": "3603:229:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1227,
										"nodeType": "Block",
										"src": "4354:113:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1221,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "4394:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1222,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "4402:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1223,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "4408:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4415:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1220,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1228,
															1278
														],
														"referencedDeclaration": 1278,
														"src": "4372:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4372:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1219,
												"id": 1226,
												"nodeType": "Return",
												"src": "4365:94:5"
											}
										]
									},
									"documentation": {
										"id": 1209,
										"nodeType": "StructuredDocumentation",
										"src": "3840:361:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4216:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4256:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "4248:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4248:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4286:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "4273:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1212,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4273:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4309:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "4301:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4301:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4237:84:5"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1228,
												"src": "4340:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1217,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4340:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4339:14:5"
									},
									"scope": 1414,
									"src": "4207:260:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1277,
										"nodeType": "Block",
										"src": "4907:326:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1245,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4934:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1414",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1414",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4926:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1243,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4926:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4926:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4940:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4926:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1248,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "4951:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4926:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4958:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1242,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4918:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4918:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "4918:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1255,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "5029:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1254,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "5018:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5018:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5038:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5010:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5010:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1259,
												"nodeType": "ExpressionStatement",
												"src": "5010:60:5"
											},
											{
												"assignments": [
													1261,
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1261,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5089:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "5084:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1260,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5084:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5111:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1277,
														"src": "5098:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1262,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5098:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1270,
												"initialValue": {
													"arguments": [
														{
															"id": 1268,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1233,
															"src": "5151:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1264,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1231,
																"src": "5125:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5132:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5125:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1266,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1235,
																"src": "5144:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5125:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5125:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5083:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1272,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1261,
															"src": "5191:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1273,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "5200:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1274,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1237,
															"src": "5212:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1271,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "5174:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5174:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1241,
												"id": 1276,
												"nodeType": "Return",
												"src": "5167:58:5"
											}
										]
									},
									"documentation": {
										"id": 1229,
										"nodeType": "StructuredDocumentation",
										"src": "4475:242:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4732:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4772:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4764:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4764:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4802:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4789:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1232,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4789:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4825:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4817:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4817:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4855:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4841:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1236,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4841:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4753:121:5"
									},
									"returnParameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1278,
												"src": "4893:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4893:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4892:14:5"
									},
									"scope": 1414,
									"src": "4723:510:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1294,
										"nodeType": "Block",
										"src": "5518:99:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1289,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "5555:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1290,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1283,
															"src": "5563:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5569:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1288,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1295,
															1330
														],
														"referencedDeclaration": 1330,
														"src": "5536:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5536:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1293,
												"nodeType": "Return",
												"src": "5529:80:5"
											}
										]
									},
									"documentation": {
										"id": 1279,
										"nodeType": "StructuredDocumentation",
										"src": "5241:171:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5427:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5454:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "5446:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5446:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5475:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "5462:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1282,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5462:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5445:35:5"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1295,
												"src": "5504:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5504:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5503:14:5"
									},
									"scope": 1414,
									"src": "5418:199:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1329,
										"nodeType": "Block",
										"src": "5971:233:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1309,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1298,
																	"src": "6001:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1308,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "5990:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1310,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5990:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6010:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1307,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5982:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5982:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "5982:67:5"
											},
											{
												"assignments": [
													1315,
													1317
												],
												"declarations": [
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6068:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "6063:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1314,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6063:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1317,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6090:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1329,
														"src": "6077:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1316,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6077:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [
														{
															"id": 1320,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1300,
															"src": "6122:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1318,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1298,
															"src": "6104:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6111:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6104:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6104:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6062:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1324,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "6162:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1325,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "6171:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1326,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1302,
															"src": "6183:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1323,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "6145:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6145:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1306,
												"id": 1328,
												"nodeType": "Return",
												"src": "6138:58:5"
											}
										]
									},
									"documentation": {
										"id": 1296,
										"nodeType": "StructuredDocumentation",
										"src": "5625:178:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5818:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5855:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5847:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5847:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5885:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5872:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5872:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5914:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5900:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1301,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5900:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5836:97:5"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1330,
												"src": "5957:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1304,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5957:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5956:14:5"
									},
									"scope": 1414,
									"src": "5809:395:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1346,
										"nodeType": "Block",
										"src": "6488:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1341,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1333,
															"src": "6527:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1342,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1335,
															"src": "6535:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6541:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1340,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1347,
															1382
														],
														"referencedDeclaration": 1382,
														"src": "6506:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6506:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1339,
												"id": 1345,
												"nodeType": "Return",
												"src": "6499:84:5"
											}
										]
									},
									"documentation": {
										"id": 1331,
										"nodeType": "StructuredDocumentation",
										"src": "6212:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6400:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1333,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6429:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "6421:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6421:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6450:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "6437:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6437:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6420:35:5"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1347,
												"src": "6474:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1337,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6474:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6473:14:5"
									},
									"scope": 1414,
									"src": "6391:200:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1381,
										"nodeType": "Block",
										"src": "6944:237:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1361,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "6974:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1360,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "6963:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6963:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6983:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6955:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6955:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "6955:69:5"
											},
											{
												"assignments": [
													1367,
													1369
												],
												"declarations": [
													{
														"constant": false,
														"id": 1367,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7043:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1381,
														"src": "7038:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1366,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7038:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1369,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7065:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1381,
														"src": "7052:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1368,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7052:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1374,
												"initialValue": {
													"arguments": [
														{
															"id": 1372,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "7099:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1370,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "7079:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7086:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7079:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7079:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7037:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1376,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "7139:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1377,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1369,
															"src": "7148:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1378,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "7160:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1375,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "7122:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1379,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7122:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1380,
												"nodeType": "Return",
												"src": "7115:58:5"
											}
										]
									},
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "6599:180:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6794:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6833:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "6825:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6825:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6863:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "6850:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6850:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6892:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "6878:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1353,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6878:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6814:97:5"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1382,
												"src": "6930:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1356,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6930:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6929:14:5"
									},
									"scope": 1414,
									"src": "6785:396:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1412,
										"nodeType": "Block",
										"src": "7573:548:5",
										"statements": [
											{
												"condition": {
													"id": 1394,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1385,
													"src": "7588:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "7647:467:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1398,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1387,
																		"src": "7733:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7744:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7733:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7753:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7733:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1408,
																"nodeType": "Block",
																"src": "8048:55:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1405,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1389,
																					"src": "8074:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1404,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "8067:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1406,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8067:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1407,
																		"nodeType": "ExpressionStatement",
																		"src": "8067:20:5"
																	}
																]
															},
															"id": 1409,
															"nodeType": "IfStatement",
															"src": "7729:374:5",
															"trueBody": {
																"id": 1403,
																"nodeType": "Block",
																"src": "7756:286:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7879:148:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7902:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7931:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7925:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7925:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7906:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7975:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7979:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7971:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7971:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7992:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7964:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7964:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7964:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1387,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7931:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1387,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7979:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1402,
																		"nodeType": "InlineAssembly",
																		"src": "7870:157:5"
																	}
																]
															}
														}
													]
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "7584:530:5",
												"trueBody": {
													"id": 1397,
													"nodeType": "Block",
													"src": "7597:44:5",
													"statements": [
														{
															"expression": {
																"id": 1395,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1387,
																"src": "7619:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1393,
															"id": 1396,
															"nodeType": "Return",
															"src": "7612:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1383,
										"nodeType": "StructuredDocumentation",
										"src": "7189:214:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7418:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7450:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "7445:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1384,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7445:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7481:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "7468:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7468:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7516:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "7502:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1388,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7502:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7434:101:5"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1413,
												"src": "7559:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1391,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7559:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7558:14:5"
									},
									"scope": 1414,
									"src": "7409:712:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1415,
							"src": "187:7937:5",
							"usedErrors": []
						}
					],
					"src": "89:8037:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1726
						]
					},
					"id": 1727,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1416,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "95:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1417,
								"nodeType": "StructuredDocumentation",
								"src": "279:201:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1726,
							"linearizedBaseContracts": [
								1726
							],
							"name": "SafeMath",
							"nameLocation": "490:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1448,
										"nodeType": "Block",
										"src": "723:146:6",
										"statements": [
											{
												"id": 1447,
												"nodeType": "UncheckedBlock",
												"src": "734:128:6",
												"statements": [
													{
														"assignments": [
															1430
														],
														"declarations": [
															{
																"constant": false,
																"id": 1430,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1447,
																"src": "759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1429,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1434,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1431,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1432,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1422,
																"src": "775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1437,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1435,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "795:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1436,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "799:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "795:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1442,
														"nodeType": "IfStatement",
														"src": "791:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "810:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "817:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1440,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "809:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1428,
															"id": 1441,
															"nodeType": "Return",
															"src": "802:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "842:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1444,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1430,
																	"src": "848:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1445,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "841:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1428,
														"id": 1446,
														"nodeType": "Return",
														"src": "834:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "506:135:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1449,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "656:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "671:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "663:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "663:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1422,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "682:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "674:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "674:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "662:22:6"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "708:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1424,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "708:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1449,
												"src": "714:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "714:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:15:6"
									},
									"scope": 1726,
									"src": "647:222:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "1098:118:6",
										"statements": [
											{
												"id": 1475,
												"nodeType": "UncheckedBlock",
												"src": "1109:100:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1461,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1454,
																"src": "1138:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1462,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1452,
																"src": "1142:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1138:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1468,
														"nodeType": "IfStatement",
														"src": "1134:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1153:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1160:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1466,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1152:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1460,
															"id": 1467,
															"nodeType": "Return",
															"src": "1145:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1185:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1472,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1470,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "1191:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1471,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1454,
																		"src": "1195:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1191:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1473,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1184:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1460,
														"id": 1474,
														"nodeType": "Return",
														"src": "1177:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1450,
										"nodeType": "StructuredDocumentation",
										"src": "877:139:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "1031:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1046:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1038:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1451,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1038:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1057:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1049:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1037:22:6"
									},
									"returnParameters": {
										"id": 1460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1083:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1456,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1083:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1459,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "1089:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1458,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1089:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1082:15:6"
									},
									"scope": 1726,
									"src": "1022:194:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "1447:427:6",
										"statements": [
											{
												"id": 1517,
												"nodeType": "UncheckedBlock",
												"src": "1458:409:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1489,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "1720:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1490,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1725:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1720:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1496,
														"nodeType": "IfStatement",
														"src": "1716:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1736:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1742:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1494,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1735:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1488,
															"id": 1495,
															"nodeType": "Return",
															"src": "1728:16:6"
														}
													},
													{
														"assignments": [
															1498
														],
														"declarations": [
															{
																"constant": false,
																"id": 1498,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1767:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1517,
																"src": "1759:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1497,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1759:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1502,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1499,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "1771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1500,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "1775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1759:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1505,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1503,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "1795:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1504,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1480,
																	"src": "1799:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1795:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1506,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1482,
																"src": "1804:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1795:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1512,
														"nodeType": "IfStatement",
														"src": "1791:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1815:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1509,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1822:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1510,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1814:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1488,
															"id": 1511,
															"nodeType": "Return",
															"src": "1807:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1847:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1514,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1498,
																	"src": "1853:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1515,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1846:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1488,
														"id": 1516,
														"nodeType": "Return",
														"src": "1839:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "1224:141:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1380:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1395:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1387:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1387:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1406:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1398:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1386:22:6"
									},
									"returnParameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1432:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1484,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1432:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1438:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:15:6"
									},
									"scope": 1726,
									"src": "1371:503:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "2106:119:6",
										"statements": [
											{
												"id": 1545,
												"nodeType": "UncheckedBlock",
												"src": "2117:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1531,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1524,
																"src": "2146:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1532,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2151:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2146:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1538,
														"nodeType": "IfStatement",
														"src": "2142:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1534,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2162:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2169:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1536,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2161:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1530,
															"id": 1537,
															"nodeType": "Return",
															"src": "2154:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2194:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1540,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1522,
																		"src": "2200:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1541,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "2204:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2200:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1543,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2193:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1530,
														"id": 1544,
														"nodeType": "Return",
														"src": "2186:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "1882:142:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "2039:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2054:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2046:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2046:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2065:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2057:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2057:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2045:22:6"
									},
									"returnParameters": {
										"id": 1530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2091:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1526,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2091:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "2097:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2090:15:6"
									},
									"scope": 1726,
									"src": "2030:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1574,
										"nodeType": "Block",
										"src": "2467:119:6",
										"statements": [
											{
												"id": 1573,
												"nodeType": "UncheckedBlock",
												"src": "2478:101:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1561,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1559,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1552,
																"src": "2507:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2512:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2507:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1566,
														"nodeType": "IfStatement",
														"src": "2503:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1562,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2523:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2530:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1564,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1558,
															"id": 1565,
															"nodeType": "Return",
															"src": "2515:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1567,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2555:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1568,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1550,
																		"src": "2561:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1569,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1552,
																		"src": "2565:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2561:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1571,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2554:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1558,
														"id": 1572,
														"nodeType": "Return",
														"src": "2547:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "2233:152:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2400:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2415:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2407:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1552,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2426:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2418:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1551,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2418:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2406:22:6"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2452:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1554,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2452:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "2458:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2458:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2451:15:6"
									},
									"scope": 1726,
									"src": "2391:195:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "2900:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1585,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1578,
														"src": "2918:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1586,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1580,
														"src": "2922:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2918:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1584,
												"id": 1588,
												"nodeType": "Return",
												"src": "2911:12:6"
											}
										]
									},
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "2594:233:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2842:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2854:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2846:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2846:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2865:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2857:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2857:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2845:22:6"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "2891:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2890:9:6"
									},
									"scope": 1726,
									"src": "2833:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1604,
										"nodeType": "Block",
										"src": "3281:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1600,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1593,
														"src": "3299:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1601,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1595,
														"src": "3303:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3299:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1599,
												"id": 1603,
												"nodeType": "Return",
												"src": "3292:12:6"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "2939:269:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1605,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3223:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3235:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "3227:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3227:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3246:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "3238:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3238:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3226:22:6"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "3272:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3272:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3271:9:6"
									},
									"scope": 1726,
									"src": "3214:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "3638:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1615,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1608,
														"src": "3656:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1616,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1610,
														"src": "3660:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3656:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1614,
												"id": 1618,
												"nodeType": "Return",
												"src": "3649:12:6"
											}
										]
									},
									"documentation": {
										"id": 1606,
										"nodeType": "StructuredDocumentation",
										"src": "3320:245:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3580:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3592:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3584:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3584:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1610,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3603:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3595:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3595:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3583:22:6"
									},
									"returnParameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "3629:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3629:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3628:9:6"
									},
									"scope": 1726,
									"src": "3571:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1634,
										"nodeType": "Block",
										"src": "4037:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1632,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1630,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1623,
														"src": "4055:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1631,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1625,
														"src": "4059:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4055:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1633,
												"nodeType": "Return",
												"src": "4048:12:6"
											}
										]
									},
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "3677:287:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3979:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1623,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1625,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4002:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "3994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:22:6"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "4028:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4028:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4027:9:6"
									},
									"scope": 1726,
									"src": "3970:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1649,
										"nodeType": "Block",
										"src": "4602:31:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1645,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "4620:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1646,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "4624:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4620:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1644,
												"id": 1648,
												"nodeType": "Return",
												"src": "4613:12:6"
											}
										]
									},
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "4076:453:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4544:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4556:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "4548:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4548:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4567:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "4559:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4559:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4547:22:6"
									},
									"returnParameters": {
										"id": 1644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1650,
												"src": "4593:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4592:9:6"
									},
									"scope": 1726,
									"src": "4535:98:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1674,
										"nodeType": "Block",
										"src": "5241:111:6",
										"statements": [
											{
												"id": 1673,
												"nodeType": "UncheckedBlock",
												"src": "5252:93:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1663,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1655,
																		"src": "5285:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1664,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1653,
																		"src": "5290:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5285:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1666,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1657,
																	"src": "5293:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1662,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5277:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5277:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1668,
														"nodeType": "ExpressionStatement",
														"src": "5277:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1669,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1653,
																"src": "5328:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1670,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1655,
																"src": "5332:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5328:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1661,
														"id": 1672,
														"nodeType": "Return",
														"src": "5321:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1651,
										"nodeType": "StructuredDocumentation",
										"src": "4641:465:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "5121:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5143:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5135:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1652,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5163:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5155:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5155:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5189:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5175:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1656,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5175:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5124:84:6"
									},
									"returnParameters": {
										"id": 1661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1675,
												"src": "5232:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5232:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5231:9:6"
									},
									"scope": 1726,
									"src": "5112:240:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "5979:110:6",
										"statements": [
											{
												"id": 1698,
												"nodeType": "UncheckedBlock",
												"src": "5990:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1690,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1688,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1680,
																		"src": "6023:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6027:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6023:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1691,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1682,
																	"src": "6030:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1687,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6015:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6015:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1693,
														"nodeType": "ExpressionStatement",
														"src": "6015:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1694,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1678,
																"src": "6065:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1695,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1680,
																"src": "6069:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6065:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1686,
														"id": 1697,
														"nodeType": "Return",
														"src": "6058:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "5360:484:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5859:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5881:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5873:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5873:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5901:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5893:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5893:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1682,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5927:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5913:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1681,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5913:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5862:84:6"
									},
									"returnParameters": {
										"id": 1686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5970:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5970:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5969:9:6"
									},
									"scope": 1726,
									"src": "5850:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "6881:110:6",
										"statements": [
											{
												"id": 1723,
												"nodeType": "UncheckedBlock",
												"src": "6892:92:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1713,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1705,
																		"src": "6925:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6929:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6925:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1716,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1707,
																	"src": "6932:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1712,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6917:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6917:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1718,
														"nodeType": "ExpressionStatement",
														"src": "6917:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1721,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1719,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1703,
																"src": "6967:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1720,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1705,
																"src": "6971:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6967:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1711,
														"id": 1722,
														"nodeType": "Return",
														"src": "6960:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "6097:649:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6761:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6783:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "6775:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6775:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6803:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "6795:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6795:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6829:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "6815:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1706,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6815:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6764:84:6"
									},
									"returnParameters": {
										"id": 1711,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "6872:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1709,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6872:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6871:9:6"
									},
									"scope": 1726,
									"src": "6752:239:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1727,
							"src": "482:6512:6",
							"usedErrors": []
						}
					],
					"src": "95:6901:6"
				},
				"id": 6
			}
		}
	}
}
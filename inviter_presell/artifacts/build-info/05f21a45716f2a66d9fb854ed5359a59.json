{
	"id": "05f21a45716f2a66d9fb854ed5359a59",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"inviter_presell/stake.sol": {
				"content": "pragma solidity ^0.8.10;\r\n\r\n\r\nimport \"./adminable.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ncontract StakingRewards is Adminable , ReentrancyGuard{\r\n    using SafeMath for uint256;\r\n\r\n    IERC20 public rewardsToken;\r\n    mapping(address => uint256) public rewards;\r\n\r\n    uint256 public totalRewards = 168000 * 10 ** 18;\r\n    uint256 public startTime;\r\n    uint256 public rateInterval = 10 minutes;\r\n    uint256 public rateIntervalNumerator = 5;\r\n    uint256 public rateIntervalDenominator = 1000;\r\n    uint256 public lastUpdateTime;\r\n    uint256 public rewardPerTokenStored;\r\n\r\n    mapping(address => uint256) public userRewardPerTokenPaid;\r\n    mapping(address => uint256) public userLastUpdateTime;\r\n\r\n    uint256 private _totalPowers;\r\n    mapping(address => uint256) private _balances;\r\n\r\n\r\n\r\n    modifier updateReward(address account) {\r\n        uint256 time = userLastUpdateTime[account];\r\n        if(time <= startTime) {\r\n            time = startTime;\r\n        }\r\n        uint256 rate = getTimeWeightedAveRate(time, block.timestamp);\r\n        rewardPerTokenStored = rewardPerToken(rate);\r\n        lastUpdateTime = lastTimeRewardApplicable();\r\n        if (account != address(0)) {\r\n            rewards[account] = earned(account);\r\n            userRewardPerTokenPaid[account] = rewardPerTokenStored;\r\n            userLastUpdateTime[account] = block.timestamp;\r\n        }\r\n        _;\r\n    }\r\n\r\n    function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {\r\n        rateInterval = _rateInterval;\r\n        rateIntervalNumerator = _rateIntervalNumerator;\r\n        rateIntervalDenominator = _rateIntervalDenominator;\r\n    }\r\n\r\n    function setStartTime(uint256 time) external onlyAdmin {\r\n        startTime = time;\r\n    }\r\n\r\n    function totalPowers() external view returns (uint256) {\r\n        return _totalPowers;\r\n    }\r\n\r\n    function curTime() external  view  returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function powersOf(address account) external view returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    function getCurRewardPool() public view returns (uint256) {\r\n        return getRewardPool(block.timestamp);\r\n    }\r\n\r\n    function getRewardPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return totalRewards;\r\n        }\r\n        if(time < startTime) {\r\n            return 0;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        // TODO 精度问题\r\n        return value * rateIntervalNumerator / rateIntervalDenominator;\r\n    }\r\n\r\n    function _getRemainPool(uint256 time) private view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getRemainPool(uint256 time) public view returns (uint256) {\r\n        if(startTime == 0) {\r\n            return startTime;\r\n        }\r\n        uint256 times = (time - startTime) / rateInterval + 1;\r\n        uint256 value = totalRewards;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            value = value - value * rateIntervalNumerator / rateIntervalDenominator;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getCurRewardRate() public view returns (uint256) {\r\n        return _getRewardRate(block.timestamp);\r\n    }\r\n\r\n    function _getRewardRate(uint256 time) private view returns (uint256) {\r\n        uint256 curPoolAmount = getRewardPool(time);\r\n        uint256 rewardRate = curPoolAmount.div(rateInterval);\r\n        return rewardRate;\r\n    }\r\n\r\n\r\n    function lastTimeRewardApplicable() public view returns (uint256) {\r\n        return block.timestamp;\r\n    }\r\n\r\n    function rewardPerToken(uint256 rewardRate) public view returns (uint256) {\r\n        if (_totalPowers == 0) {\r\n            return rewardPerTokenStored;\r\n        }\r\n        return\r\n            rewardPerTokenStored.add(\r\n                lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers)\r\n            );\r\n    }\r\n\r\n    function earned(address account) public view returns (uint256) {\r\n        uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp);\r\n        return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]);\r\n    }\r\n\r\n    // Time-weighted average rate\r\n    function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){\r\n        \r\n        if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {\r\n            return 0;\r\n        }\r\n\r\n        if(leftTime < startTime) {\r\n            leftTime = startTime;\r\n        }\r\n\r\n        uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval;\r\n        uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval;\r\n\r\n        uint256 rightInterval = (rightTime - startTime) % rateInterval;\r\n        uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval;\r\n\r\n        if(leftTime + leftInterval > rightTime) {\r\n            return _getRewardRate(leftTime);\r\n        }\r\n\r\n        uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval;\r\n        uint256 startReward = getRemainPool(leftTime); \r\n        uint256 midTotalReward = 0;\r\n        uint256 nextReward = 0;\r\n        uint256 value = startReward;\r\n        uint256 times = midInterval / rateInterval;\r\n        for(uint256 i = 0; i < times; ++i) {\r\n            nextReward = value * rateIntervalNumerator / rateIntervalDenominator;\r\n            value = value - nextReward;\r\n            midTotalReward += nextReward;\r\n        }\r\n        return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime);\r\n    }\r\n\r\n\r\n    function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {\r\n        require(amount > 0, \"Cannot stake 0\");\r\n        _totalPowers = _totalPowers.add(amount);\r\n        _balances[user] = _balances[user].add(amount);\r\n        emit Staked(user, amount);\r\n    }\r\n\r\n\r\n\r\n    function getReward() external nonReentrant updateReward(msg.sender) {\r\n        uint256 reward = rewards[msg.sender];\r\n        if (reward > 0) {\r\n            rewards[msg.sender] = 0;\r\n            rewardsToken.transfer(msg.sender, reward);\r\n            emit RewardPaid(msg.sender, reward);\r\n        }\r\n    }\r\n\r\n    function setRewardToken(address token) external onlyOwner {\r\n        rewardsToken = IERC20(token);\r\n    }\r\n\r\n\r\n\r\n\r\n    event Staked(address indexed user, uint256 amount);\r\n    event RewardPaid(address indexed user, uint256 reward);\r\n\r\n    function emergencyWithdraw() external onlyOwner {\r\n        payable(owner()).transfer(address(this).balance);\r\n    }\r\n\r\n    function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {\r\n        IERC20(token).transfer(msg.sender, amount);\r\n    }\r\n}"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\nimport \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"
			},
			"inviter_presell/adminable.sol": {
				"content": "\r\npragma solidity ^0.8.16;\r\n\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n\r\n\r\nabstract contract Adminable is Context {\r\n    mapping(address => bool) private _admins;\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n    event ModificationAdmin(address indexed admin, bool oldState, bool newState);\r\n\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    modifier onlyOwner() {\r\n        require(owner() == _msgSender(), \"Adminable: caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyAdmin() {\r\n        require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\");\r\n        _;\r\n    }\r\n\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    function isAdmin(address account) public view virtual returns (bool) {\r\n        return _admins[account];\r\n    }\r\n\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n\r\n    function modificationAdmin(address admin, bool state) public virtual onlyOwner {\r\n        emit ModificationAdmin(admin,  _admins[admin], state);\r\n        _admins[admin] = state;\r\n    }\r\n}\r\n"
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Address.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"inviter_presell/adminable.sol": {
				"Adminable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isAdmin(address)": "24d7806c",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Adminable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/adminable.sol:Adminable",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/adminable.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"inviter_presell/stake.sol": {
				"StakingRewards": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "oldState",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "newState",
									"type": "bool"
								}
							],
							"name": "ModificationAdmin",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardPaid",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "curTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "earned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emergencyWithdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurRewardRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRemainPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "getRewardPool",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "leftTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rightTime",
									"type": "uint256"
								}
							],
							"name": "getTimeWeightedAveRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isAdmin",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTimeRewardApplicable",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "state",
									"type": "bool"
								}
							],
							"name": "modificationAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "powersOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalDenominator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rateIntervalNumerator",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "rewardPerToken",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenStored",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardsToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_rateInterval",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rateIntervalNumerator",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_rateIntervalDenominator",
									"type": "uint256"
								}
							],
							"name": "setConfig",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "setRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "setStartTime",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalPowers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userLastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userRewardPerTokenPaid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"inviter_presell/stake.sol\":371:7632  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n    /* \"inviter_presell/stake.sol\":581:598  168000 * 10 ** 18 */\n  0x23934c5a09da19000000\n    /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n  0x05\n  sstore\n    /* \"inviter_presell/stake.sol\":666:676  10 minutes */\n  0x0258\n    /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n  0x07\n  sstore\n    /* \"inviter_presell/stake.sol\":722:723  5 */\n  0x05\n    /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n  0x08\n  sstore\n    /* \"inviter_presell/stake.sol\":771:775  1000 */\n  0x03e8\n    /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n  0x09\n  sstore\n    /* \"inviter_presell/stake.sol\":371:7632  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  tag_6\n    /* \"inviter_presell/adminable.sol\":622:632  _msgSender */\n  shl(0x20, tag_7)\n    /* \"inviter_presell/adminable.sol\":622:634  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"inviter_presell/adminable.sol\":603:621  _transferOwnership */\n  shl(0x20, tag_8)\n    /* \"inviter_presell/adminable.sol\":603:635  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x02\n    /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/stake.sol\":371:7632  contract StakingRewards is Adminable , ReentrancyGuard{... */\n  jump(tag_10)\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\ntag_7:\n    /* \"inviter_presell/adminable.sol\":116:123  address */\n  0x00\n    /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n  caller\n    /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n  0x00\n    /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n  0x01\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n  0x01\n  0x00\n    /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n  dup2\n    /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n  pop\n    /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"inviter_presell/stake.sol\":371:7632  contract StakingRewards is Adminable , ReentrancyGuard{... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"inviter_presell/stake.sol\":371:7632  contract StakingRewards is Adminable , ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8107368b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xadc9772e\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xd1af0c7d\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xd1af0c7d\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xda4f8431\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xdb2e21bc\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xdf136d65\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_36\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0xadc9772e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xb79ec812\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xc8f33c91\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xcdda56e0\n      eq\n      tag_31\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x8da5cb5b\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x9499c549\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x9a5b17b0\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xa4c3b091\n      eq\n      tag_27\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x8107368b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x874c120b\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8aee8127\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8b876347\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x3e0a322d\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x6917c501\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x6917c501\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x78e97925\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7a6fcee7\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x80faa57d\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x3e0a322d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4dbdc4eb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5cfa91f4\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6139d4b4\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x18e20ecf\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x18e20ecf\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x24d7806c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3c4045cf\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x3d18b912\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x8cc262\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x0700037d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e15561a\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x129ee21a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"inviter_presell/stake.sol\":4773:5069  function earned(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_4:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_5:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":1682:1974  function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {... */\n    tag_6:\n      tag_57\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_58\n      swap2\n      swap1\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n    tag_57:\n      stop\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_7:\n      tag_61\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      tag_64\n      jump\t// in\n    tag_61:\n      stop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_8:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_9:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":6811:7116  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_10:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      stop\n        /* \"inviter_presell/stake.sol\":1982:2072  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_11:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      tag_78\n      jump\t// in\n    tag_75:\n      stop\n        /* \"inviter_presell/stake.sol\":3523:3939  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_12:\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2524:3089  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_13:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_84:\n      tag_85\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n    tag_14:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2080:2173  function totalPowers() external view returns (uint256) {... */\n    tag_15:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_17:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_18:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4302:4409  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_19:\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      tag_103\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_103:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":926:979  mapping(address => uint256) public userLastUpdateTime */\n    tag_20:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":4417:4765  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_21:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_111\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7124:7229  function setRewardToken(address token) external onlyOwner {... */\n    tag_22:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"inviter_presell/stake.sol\":862:919  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_23:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_24:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2402:2516  function getCurRewardPool() public view returns (uint256) {... */\n    tag_25:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":2181:2275  function curTime() external  view  returns (uint256) {... */\n    tag_26:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7486:7629  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_27:\n      tag_129\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      tag_132\n      jump\t// in\n    tag_129:\n      stop\n        /* \"inviter_presell/stake.sol\":6505:6799  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_28:\n      tag_133\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_134\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_134:\n      tag_135\n      jump\t// in\n    tag_133:\n      stop\n        /* \"inviter_presell/stake.sol\":2283:2394  function powersOf(address account) external view returns (uint256) {... */\n    tag_29:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_137:\n      tag_138\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_30:\n      tag_140\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":3947:4062  function getCurRewardRate() public view returns (uint256) {... */\n    tag_31:\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_145\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_32:\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":5112:6495  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_33:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n      tag_153\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      tag_154\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/stake.sol\":7363:7478  function emergencyWithdraw() external onlyOwner {... */\n    tag_34:\n      tag_155\n      tag_156\n      jump\t// in\n    tag_155:\n      stop\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_35:\n      tag_157\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      tag_159\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_36:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      stop\n        /* \"inviter_presell/stake.sol\":4773:5069  function earned(address account) public view returns (uint256) {... */\n    tag_47:\n        /* \"inviter_presell/stake.sol\":4827:4834  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4847:4859  uint256 rate */\n      dup1\n        /* \"inviter_presell/stake.sol\":4862:4930  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      tag_164\n        /* \"inviter_presell/stake.sol\":4885:4903  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":4885:4912  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4904:4911  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":4885:4912  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4914:4929  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4862:4884  getTimeWeightedAveRate */\n      tag_153\n        /* \"inviter_presell/stake.sol\":4862:4930  getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      jump\t// in\n    tag_164:\n        /* \"inviter_presell/stake.sol\":4847:4930  uint256 rate = getTimeWeightedAveRate(userLastUpdateTime[account], block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4948:5061  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      tag_165\n        /* \"inviter_presell/stake.sol\":5044:5051  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":5044:5060  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5052:5059  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":5044:5060  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4948:5039  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      tag_166\n        /* \"inviter_presell/stake.sol\":5034:5038  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":4948:5029  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      tag_167\n        /* \"inviter_presell/stake.sol\":4971:5028  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      tag_168\n        /* \"inviter_presell/stake.sol\":4996:5018  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":4996:5027  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":5019:5026  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":4996:5027  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4971:4991  rewardPerToken(rate) */\n      tag_169\n        /* \"inviter_presell/stake.sol\":4986:4990  rate */\n      dup9\n        /* \"inviter_presell/stake.sol\":4971:4985  rewardPerToken */\n      tag_110\n        /* \"inviter_presell/stake.sol\":4971:4991  rewardPerToken(rate) */\n      jump\t// in\n    tag_169:\n        /* \"inviter_presell/stake.sol\":4971:4995  rewardPerToken(rate).sub */\n      tag_170\n      swap1\n        /* \"inviter_presell/stake.sol\":4971:5028  rewardPerToken(rate).sub(userRewardPerTokenPaid[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_168:\n        /* \"inviter_presell/stake.sol\":4948:4957  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":4948:4966  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":4958:4965  account */\n      dup11\n        /* \"inviter_presell/stake.sol\":4948:4966  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":4948:4970  _balances[account].mul */\n      tag_171\n      swap1\n        /* \"inviter_presell/stake.sol\":4948:5029  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_167:\n        /* \"inviter_presell/stake.sol\":4948:5033  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div */\n      tag_172\n      swap1\n        /* \"inviter_presell/stake.sol\":4948:5039  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"inviter_presell/stake.sol\":4948:5043  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":4948:5061  _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_165:\n        /* \"inviter_presell/stake.sol\":4941:5061  return _balances[account].mul(rewardPerToken(rate).sub(userRewardPerTokenPaid[account])).div(1e18).add(rewards[account]) */\n      swap2\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":4773:5069  function earned(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":500:542  mapping(address => uint256) public rewards */\n    tag_52:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":551:598  uint256 public totalRewards = 168000 * 10 ** 18 */\n    tag_55:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1682:1974  function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {... */\n    tag_60:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_175\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_175:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_177\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_120\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_177:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_178\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"inviter_presell/stake.sol\":1835:1848  _rateInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":1820:1832  rateInterval */\n      0x07\n        /* \"inviter_presell/stake.sol\":1820:1848  rateInterval = _rateInterval */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1883:1905  _rateIntervalNumerator */\n      dup2\n        /* \"inviter_presell/stake.sol\":1859:1880  rateIntervalNumerator */\n      0x08\n        /* \"inviter_presell/stake.sol\":1859:1905  rateIntervalNumerator = _rateIntervalNumerator */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1942:1966  _rateIntervalDenominator */\n      dup1\n        /* \"inviter_presell/stake.sol\":1916:1939  rateIntervalDenominator */\n      0x09\n        /* \"inviter_presell/stake.sol\":1916:1966  rateIntervalDenominator = _rateIntervalDenominator */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1682:1974  function setConfig(uint256 _rateInterval, uint256 _rateIntervalNumerator, uint256 _rateIntervalDenominator) external onlyOwner {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n    tag_64:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_183\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_183:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_184\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_120\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_184:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_180\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"inviter_presell/adminable.sol\":1755:1760  admin */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854\n        /* \"inviter_presell/adminable.sol\":1763:1770  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1771:1776  admin */\n      dup6\n        /* \"inviter_presell/adminable.sol\":1763:1777  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1779:1784  state */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1737:1785  ModificationAdmin(admin,  _admins[admin], state) */\n      mload(0x40)\n      tag_188\n      swap3\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/adminable.sol\":1813:1818  state */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1796:1803  _admins */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1804:1809  admin */\n      dup5\n        /* \"inviter_presell/adminable.sol\":1796:1810  _admins[admin] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"inviter_presell/adminable.sol\":1796:1818  _admins[admin] = state */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1642:1826  function modificationAdmin(address admin, bool state) public virtual onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n    tag_67:\n        /* \"inviter_presell/adminable.sol\":1067:1071  bool */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1091:1098  _admins */\n      dup1\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1099:1106  account */\n      dup4\n        /* \"inviter_presell/adminable.sol\":1091:1107  _admins[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"inviter_presell/adminable.sol\":1084:1107  return _admins[account] */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1004:1115  function isAdmin(address account) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":683:723  uint256 public rateIntervalNumerator = 5 */\n    tag_71:\n      sload(0x08)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6811:7116  function getReward() external nonReentrant updateReward(msg.sender) {... */\n    tag_74:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_192:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6867:6877  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":1131:1143  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1146:1164  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1165:1172  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1131:1173  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1195:1204  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1187:1191  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1187:1204  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n      tag_196\n      jumpi\n        /* \"inviter_presell/stake.sol\":1228:1237  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1221:1237  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n    tag_196:\n        /* \"inviter_presell/stake.sol\":1259:1271  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_197\n        /* \"inviter_presell/stake.sol\":1297:1301  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1303:1318  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1274:1296  getTimeWeightedAveRate */\n      tag_153\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_197:\n        /* \"inviter_presell/stake.sol\":1259:1319  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      tag_198\n        /* \"inviter_presell/stake.sol\":1368:1372  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1353:1367  rewardPerToken */\n      tag_110\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      jump\t// in\n    tag_198:\n        /* \"inviter_presell/stake.sol\":1330:1350  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1330:1373  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      tag_199\n        /* \"inviter_presell/stake.sol\":1401:1425  lastTimeRewardApplicable */\n      tag_102\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_199:\n        /* \"inviter_presell/stake.sol\":1384:1398  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1384:1427  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1461:1462  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1442:1449  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n      tag_200\n      jumpi\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      tag_201\n        /* \"inviter_presell/stake.sol\":1506:1513  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1499:1505  earned */\n      tag_47\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      jump\t// in\n    tag_201:\n        /* \"inviter_presell/stake.sol\":1480:1487  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1488:1495  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1480:1514  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1563:1583  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1529:1551  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1552:1559  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1529:1583  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1628:1643  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1598:1616  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1617:1624  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1598:1643  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n    tag_200:\n        /* \"inviter_presell/stake.sol\":6890:6904  uint256 reward */\n      0x00\n        /* \"inviter_presell/stake.sol\":6907:6914  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6907:6926  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6915:6925  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6907:6926  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6890:6926  uint256 reward = rewards[msg.sender] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6950:6951  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6941:6947  reward */\n      dup2\n        /* \"inviter_presell/stake.sol\":6941:6951  reward > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":6937:7109  if (reward > 0) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"inviter_presell/stake.sol\":6990:6991  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6968:6975  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":6968:6987  rewards[msg.sender] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6976:6986  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":6968:6987  rewards[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":6968:6991  rewards[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7006:7018  rewardsToken */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":7006:7027  rewardsToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":7028:7038  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7040:7046  reward */\n      dup4\n        /* \"inviter_presell/stake.sol\":7006:7047  rewardsToken.transfer(msg.sender, reward) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n      pop\n        /* \"inviter_presell/stake.sol\":7078:7088  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7067:7097  RewardPaid(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486\n        /* \"inviter_presell/stake.sol\":7090:7096  reward */\n      dup3\n        /* \"inviter_presell/stake.sol\":7067:7097  RewardPaid(msg.sender, reward) */\n      mload(0x40)\n      tag_210\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":6937:7109  if (reward > 0) {... */\n    tag_203:\n        /* \"inviter_presell/stake.sol\":6879:7116  {... */\n      pop\n        /* \"inviter_presell/stake.sol\":1120:1674  {... */\n      pop\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2484:2485  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6811:7116  function getReward() external nonReentrant updateReward(msg.sender) {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":1982:2072  function setStartTime(uint256 time) external onlyAdmin {... */\n    tag_78:\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_212\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_213\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_213:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_67\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_212:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_214\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_215\n      swap1\n      tag_216\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_214:\n        /* \"inviter_presell/stake.sol\":2060:2064  time */\n      dup1\n        /* \"inviter_presell/stake.sol\":2048:2057  startTime */\n      0x06\n        /* \"inviter_presell/stake.sol\":2048:2064  startTime = time */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1982:2072  function setStartTime(uint256 time) external onlyAdmin {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3523:3939  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_81:\n        /* \"inviter_presell/stake.sol\":3581:3588  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":3617:3618  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":3604:3613  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3604:3618  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":3601:3663  if(startTime == 0) {... */\n      tag_219\n      jumpi\n        /* \"inviter_presell/stake.sol\":3642:3651  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3635:3651  return startTime */\n      swap1\n      pop\n      jump(tag_218)\n        /* \"inviter_presell/stake.sol\":3601:3663  if(startTime == 0) {... */\n    tag_219:\n        /* \"inviter_presell/stake.sol\":3673:3686  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":3725:3726  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":3710:3722  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":3697:3706  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":3690:3694  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":3690:3706  time - startTime */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"inviter_presell/stake.sol\":3689:3722  (time - startTime) / rateInterval */\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"inviter_presell/stake.sol\":3689:3726  (time - startTime) / rateInterval + 1 */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"inviter_presell/stake.sol\":3673:3726  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3737:3750  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":3753:3765  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":3737:3765  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3780:3789  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":3776:3909  for(uint256 i = 0; i < times; ++i) {... */\n    tag_226:\n        /* \"inviter_presell/stake.sol\":3799:3804  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":3795:3796  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":3795:3804  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":3776:3909  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_227\n      jumpi\n        /* \"inviter_presell/stake.sol\":3874:3897  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3850:3871  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":3842:3847  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":3842:3871  value * rateIntervalNumerator */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"inviter_presell/stake.sol\":3842:3897  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_231\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_231:\n        /* \"inviter_presell/stake.sol\":3834:3839  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":3834:3897  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_232\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_232:\n        /* \"inviter_presell/stake.sol\":3826:3897  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":3806:3809  ++i */\n      dup1\n      tag_233\n      swap1\n      tag_234\n      jump\t// in\n    tag_233:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3776:3909  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_226)\n    tag_227:\n      pop\n        /* \"inviter_presell/stake.sol\":3926:3931  value */\n      dup1\n        /* \"inviter_presell/stake.sol\":3919:3931  return value */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":3523:3939  function getRemainPool(uint256 time) public view returns (uint256) {... */\n    tag_218:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2524:3089  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_85:\n        /* \"inviter_presell/stake.sol\":2582:2589  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2618:2619  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":2605:2614  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2605:2619  startTime == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":2602:2667  if(startTime == 0) {... */\n      tag_236\n      jumpi\n        /* \"inviter_presell/stake.sol\":2643:2655  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2636:2655  return totalRewards */\n      swap1\n      pop\n      jump(tag_235)\n        /* \"inviter_presell/stake.sol\":2602:2667  if(startTime == 0) {... */\n    tag_236:\n        /* \"inviter_presell/stake.sol\":2687:2696  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2680:2684  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":2680:2696  time < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":2677:2733  if(time < startTime) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"inviter_presell/stake.sol\":2720:2721  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2713:2721  return 0 */\n      swap1\n      pop\n      jump(tag_235)\n        /* \"inviter_presell/stake.sol\":2677:2733  if(time < startTime) {... */\n    tag_237:\n        /* \"inviter_presell/stake.sol\":2743:2756  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":2795:2796  1 */\n      0x01\n        /* \"inviter_presell/stake.sol\":2780:2792  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":2767:2776  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":2760:2764  time */\n      dup6\n        /* \"inviter_presell/stake.sol\":2760:2776  time - startTime */\n      tag_238\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_238:\n        /* \"inviter_presell/stake.sol\":2759:2792  (time - startTime) / rateInterval */\n      tag_239\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_239:\n        /* \"inviter_presell/stake.sol\":2759:2796  (time - startTime) / rateInterval + 1 */\n      tag_240\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_240:\n        /* \"inviter_presell/stake.sol\":2743:2796  uint256 times = (time - startTime) / rateInterval + 1 */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2807:2820  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":2823:2835  totalRewards */\n      sload(0x05)\n        /* \"inviter_presell/stake.sol\":2807:2835  uint256 value = totalRewards */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2850:2859  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":2846:2979  for(uint256 i = 0; i < times; ++i) {... */\n    tag_241:\n        /* \"inviter_presell/stake.sol\":2869:2874  times */\n      dup3\n        /* \"inviter_presell/stake.sol\":2865:2866  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":2865:2874  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":2846:2979  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_242\n      jumpi\n        /* \"inviter_presell/stake.sol\":2944:2967  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":2920:2941  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":2912:2917  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":2912:2941  value * rateIntervalNumerator */\n      tag_244\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_244:\n        /* \"inviter_presell/stake.sol\":2912:2967  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_245\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_245:\n        /* \"inviter_presell/stake.sol\":2904:2909  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":2904:2967  value - value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_246\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_246:\n        /* \"inviter_presell/stake.sol\":2896:2967  value = value - value * rateIntervalNumerator / rateIntervalDenominator */\n      swap2\n      pop\n        /* \"inviter_presell/stake.sol\":2876:2879  ++i */\n      dup1\n      tag_247\n      swap1\n      tag_234\n      jump\t// in\n    tag_247:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2846:2979  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_241)\n    tag_242:\n      pop\n        /* \"inviter_presell/stake.sol\":3058:3081  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":3034:3055  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":3026:3031  value */\n      dup3\n        /* \"inviter_presell/stake.sol\":3026:3055  value * rateIntervalNumerator */\n      tag_248\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_248:\n        /* \"inviter_presell/stake.sol\":3026:3081  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_249\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_249:\n        /* \"inviter_presell/stake.sol\":3019:3081  return value * rateIntervalNumerator / rateIntervalDenominator */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":2524:3089  function getRewardPool(uint256 time) public view returns (uint256) {... */\n    tag_235:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":636:676  uint256 public rateInterval = 10 minutes */\n    tag_88:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2080:2173  function totalPowers() external view returns (uint256) {... */\n    tag_91:\n        /* \"inviter_presell/stake.sol\":2126:2133  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2153:2165  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":2146:2165  return _totalPowers */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2080:2173  function totalPowers() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n    tag_94:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_252\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_252:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_253\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_120\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_253:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_254\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap1\n      tag_180\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_254:\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      tag_257\n        /* \"inviter_presell/adminable.sol\":1215:1216  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1188:1206  _transferOwnership */\n      tag_258\n        /* \"inviter_presell/adminable.sol\":1188:1218  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_257:\n        /* \"inviter_presell/adminable.sol\":1123:1226  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":605:629  uint256 public startTime */\n    tag_96:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":730:775  uint256 public rateIntervalDenominator = 1000 */\n    tag_99:\n      sload(0x09)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4302:4409  function lastTimeRewardApplicable() public view returns (uint256) {... */\n    tag_102:\n        /* \"inviter_presell/stake.sol\":4359:4366  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4386:4401  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4379:4401  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4302:4409  function lastTimeRewardApplicable() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":926:979  mapping(address => uint256) public userLastUpdateTime */\n    tag_106:\n      mstore(0x20, 0x0d)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4417:4765  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_110:\n        /* \"inviter_presell/stake.sol\":4482:4489  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4522:4523  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":4506:4518  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":4506:4523  _totalPowers == 0 */\n      sub\n        /* \"inviter_presell/stake.sol\":4502:4579  if (_totalPowers == 0) {... */\n      tag_261\n      jumpi\n        /* \"inviter_presell/stake.sol\":4547:4567  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4540:4567  return rewardPerTokenStored */\n      swap1\n      pop\n      jump(tag_260)\n        /* \"inviter_presell/stake.sol\":4502:4579  if (_totalPowers == 0) {... */\n    tag_261:\n        /* \"inviter_presell/stake.sol\":4609:4757  rewardPerTokenStored.add(... */\n      tag_262\n        /* \"inviter_presell/stake.sol\":4652:4742  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      tag_263\n        /* \"inviter_presell/stake.sol\":4729:4741  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":4652:4724  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      tag_264\n        /* \"inviter_presell/stake.sol\":4719:4723  1e18 */\n      0x0de0b6b3a7640000\n        /* \"inviter_presell/stake.sol\":4652:4714  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      tag_265\n        /* \"inviter_presell/stake.sol\":4703:4713  rewardRate */\n      dup8\n        /* \"inviter_presell/stake.sol\":4652:4698  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      tag_266\n        /* \"inviter_presell/stake.sol\":4683:4697  lastUpdateTime */\n      sload(0x0a)\n        /* \"inviter_presell/stake.sol\":4652:4678  lastTimeRewardApplicable() */\n      tag_267\n        /* \"inviter_presell/stake.sol\":4652:4676  lastTimeRewardApplicable */\n      tag_102\n        /* \"inviter_presell/stake.sol\":4652:4678  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_267:\n        /* \"inviter_presell/stake.sol\":4652:4682  lastTimeRewardApplicable().sub */\n      tag_170\n      swap1\n        /* \"inviter_presell/stake.sol\":4652:4698  lastTimeRewardApplicable().sub(lastUpdateTime) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_266:\n        /* \"inviter_presell/stake.sol\":4652:4702  lastTimeRewardApplicable().sub(lastUpdateTime).mul */\n      tag_171\n      swap1\n        /* \"inviter_presell/stake.sol\":4652:4714  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_265:\n        /* \"inviter_presell/stake.sol\":4652:4718  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul */\n      tag_171\n      swap1\n        /* \"inviter_presell/stake.sol\":4652:4724  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_264:\n        /* \"inviter_presell/stake.sol\":4652:4728  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div */\n      tag_172\n      swap1\n        /* \"inviter_presell/stake.sol\":4652:4742  lastTimeRewardApplicable().sub(lastUpdateTime).mul(rewardRate).mul(1e18).div(_totalPowers) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_263:\n        /* \"inviter_presell/stake.sol\":4609:4629  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":4609:4633  rewardPerTokenStored.add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":4609:4757  rewardPerTokenStored.add(... */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_262:\n        /* \"inviter_presell/stake.sol\":4589:4757  return... */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4417:4765  function rewardPerToken(uint256 rewardRate) public view returns (uint256) {... */\n    tag_260:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7124:7229  function setRewardToken(address token) external onlyOwner {... */\n    tag_114:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_269\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_269:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_270\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_120\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_270:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_272\n      swap1\n      tag_180\n      jump\t// in\n    tag_272:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_271:\n        /* \"inviter_presell/stake.sol\":7215:7220  token */\n      dup1\n        /* \"inviter_presell/stake.sol\":7193:7205  rewardsToken */\n      0x03\n      0x00\n        /* \"inviter_presell/stake.sol\":7193:7221  rewardsToken = IERC20(token) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":7124:7229  function setRewardToken(address token) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":862:919  mapping(address => uint256) public userRewardPerTokenPaid */\n    tag_117:\n      mstore(0x20, 0x0c)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n    tag_120:\n        /* \"inviter_presell/adminable.sol\":955:962  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":982:988  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":975:988  return _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":909:996  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2402:2516  function getCurRewardPool() public view returns (uint256) {... */\n    tag_124:\n        /* \"inviter_presell/stake.sol\":2451:2458  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2478:2508  getRewardPool(block.timestamp) */\n      tag_276\n        /* \"inviter_presell/stake.sol\":2492:2507  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2478:2491  getRewardPool */\n      tag_85\n        /* \"inviter_presell/stake.sol\":2478:2508  getRewardPool(block.timestamp) */\n      jump\t// in\n    tag_276:\n        /* \"inviter_presell/stake.sol\":2471:2508  return getRewardPool(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2402:2516  function getCurRewardPool() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2181:2275  function curTime() external  view  returns (uint256) {... */\n    tag_127:\n        /* \"inviter_presell/stake.sol\":2225:2232  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2252:2267  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":2245:2267  return block.timestamp */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2181:2275  function curTime() external  view  returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7486:7629  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n    tag_132:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_279\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_279:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_280\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_120\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_280:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_281\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap1\n      tag_180\n      jump\t// in\n    tag_282:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_281:\n        /* \"inviter_presell/stake.sol\":7586:7591  token */\n      dup2\n        /* \"inviter_presell/stake.sol\":7579:7601  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"inviter_presell/stake.sol\":7602:7612  msg.sender */\n      caller\n        /* \"inviter_presell/stake.sol\":7614:7620  amount */\n      dup4\n        /* \"inviter_presell/stake.sol\":7579:7621  IERC20(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_284\n      swap3\n      swap2\n      swap1\n      tag_205\n      jump\t// in\n    tag_284:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_287:\n      pop\n        /* \"inviter_presell/stake.sol\":7486:7629  function emergencyWithdrawToken(address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":6505:6799  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n    tag_135:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      dup1\n      sload\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      sub\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_290\n      swap1\n      tag_194\n      jump\t// in\n    tag_290:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_289:\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      dup1\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      tag_292\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      tag_293\n        /* \"inviter_presell/adminable.sol\":829:839  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":829:841  _msgSender() */\n      jump\t// in\n    tag_293:\n        /* \"inviter_presell/adminable.sol\":821:828  isAdmin */\n      tag_67\n        /* \"inviter_presell/adminable.sol\":821:842  isAdmin(_msgSender()) */\n      jump\t// in\n    tag_292:\n        /* \"inviter_presell/adminable.sol\":813:881  require(isAdmin(_msgSender()), \"Adminable: caller is not the admin\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_216\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"inviter_presell/stake.sol\":6595:6599  user */\n      dup2\n        /* \"inviter_presell/stake.sol\":1131:1143  uint256 time */\n      0x00\n        /* \"inviter_presell/stake.sol\":1146:1164  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1165:1172  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1146:1173  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":1131:1173  uint256 time = userLastUpdateTime[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1195:1204  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1187:1191  time */\n      dup2\n        /* \"inviter_presell/stake.sol\":1187:1204  time <= startTime */\n      gt\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n      tag_297\n      jumpi\n        /* \"inviter_presell/stake.sol\":1228:1237  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":1221:1237  time = startTime */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1184:1249  if(time <= startTime) {... */\n    tag_297:\n        /* \"inviter_presell/stake.sol\":1259:1271  uint256 rate */\n      0x00\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      tag_298\n        /* \"inviter_presell/stake.sol\":1297:1301  time */\n      dup3\n        /* \"inviter_presell/stake.sol\":1303:1318  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1274:1296  getTimeWeightedAveRate */\n      tag_153\n        /* \"inviter_presell/stake.sol\":1274:1319  getTimeWeightedAveRate(time, block.timestamp) */\n      jump\t// in\n    tag_298:\n        /* \"inviter_presell/stake.sol\":1259:1319  uint256 rate = getTimeWeightedAveRate(time, block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      tag_299\n        /* \"inviter_presell/stake.sol\":1368:1372  rate */\n      dup2\n        /* \"inviter_presell/stake.sol\":1353:1367  rewardPerToken */\n      tag_110\n        /* \"inviter_presell/stake.sol\":1353:1373  rewardPerToken(rate) */\n      jump\t// in\n    tag_299:\n        /* \"inviter_presell/stake.sol\":1330:1350  rewardPerTokenStored */\n      0x0b\n        /* \"inviter_presell/stake.sol\":1330:1373  rewardPerTokenStored = rewardPerToken(rate) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      tag_300\n        /* \"inviter_presell/stake.sol\":1401:1425  lastTimeRewardApplicable */\n      tag_102\n        /* \"inviter_presell/stake.sol\":1401:1427  lastTimeRewardApplicable() */\n      jump\t// in\n    tag_300:\n        /* \"inviter_presell/stake.sol\":1384:1398  lastUpdateTime */\n      0x0a\n        /* \"inviter_presell/stake.sol\":1384:1427  lastUpdateTime = lastTimeRewardApplicable() */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1461:1462  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":1442:1449  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1442:1463  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n      tag_301\n      jumpi\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      tag_302\n        /* \"inviter_presell/stake.sol\":1506:1513  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":1499:1505  earned */\n      tag_47\n        /* \"inviter_presell/stake.sol\":1499:1514  earned(account) */\n      jump\t// in\n    tag_302:\n        /* \"inviter_presell/stake.sol\":1480:1487  rewards */\n      0x04\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1488:1495  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1480:1496  rewards[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1480:1514  rewards[account] = earned(account) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1563:1583  rewardPerTokenStored */\n      sload(0x0b)\n        /* \"inviter_presell/stake.sol\":1529:1551  userRewardPerTokenPaid */\n      0x0c\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1552:1559  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1529:1560  userRewardPerTokenPaid[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1529:1583  userRewardPerTokenPaid[account] = rewardPerTokenStored */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1628:1643  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":1598:1616  userLastUpdateTime */\n      0x0d\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":1617:1624  account */\n      dup6\n        /* \"inviter_presell/stake.sol\":1598:1625  userLastUpdateTime[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":1598:1643  userLastUpdateTime[account] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":1438:1655  if (account != address(0)) {... */\n    tag_301:\n        /* \"inviter_presell/stake.sol\":6629:6630  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":6620:6626  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6620:6630  amount > 0 */\n      gt\n        /* \"inviter_presell/stake.sol\":6612:6649  require(amount > 0, \"Cannot stake 0\") */\n      tag_304\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_305\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_304:\n        /* \"inviter_presell/stake.sol\":6675:6699  _totalPowers.add(amount) */\n      tag_307\n        /* \"inviter_presell/stake.sol\":6692:6698  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6675:6687  _totalPowers */\n      sload(0x0e)\n        /* \"inviter_presell/stake.sol\":6675:6691  _totalPowers.add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":6675:6699  _totalPowers.add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_307:\n        /* \"inviter_presell/stake.sol\":6660:6672  _totalPowers */\n      0x0e\n        /* \"inviter_presell/stake.sol\":6660:6699  _totalPowers = _totalPowers.add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6728:6755  _balances[user].add(amount) */\n      tag_308\n        /* \"inviter_presell/stake.sol\":6748:6754  amount */\n      dup5\n        /* \"inviter_presell/stake.sol\":6728:6737  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":6728:6743  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6738:6742  user */\n      dup9\n        /* \"inviter_presell/stake.sol\":6728:6743  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":6728:6747  _balances[user].add */\n      tag_173\n      swap1\n        /* \"inviter_presell/stake.sol\":6728:6755  _balances[user].add(amount) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_308:\n        /* \"inviter_presell/stake.sol\":6710:6719  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":6710:6725  _balances[user] */\n      0x00\n        /* \"inviter_presell/stake.sol\":6720:6724  user */\n      dup8\n        /* \"inviter_presell/stake.sol\":6710:6725  _balances[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"inviter_presell/stake.sol\":6710:6755  _balances[user] = _balances[user].add(amount) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6778:6782  user */\n      dup5\n        /* \"inviter_presell/stake.sol\":6771:6791  Staked(user, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d\n        /* \"inviter_presell/stake.sol\":6784:6790  amount */\n      dup6\n        /* \"inviter_presell/stake.sol\":6771:6791  Staked(user, amount) */\n      mload(0x40)\n      tag_309\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"inviter_presell/stake.sol\":1120:1674  {... */\n      pop\n      pop\n        /* \"inviter_presell/adminable.sol\":892:893  _ */\n      pop\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x02\n        /* \"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/stake.sol\":6505:6799  function stake(address user, uint256 amount) external nonReentrant onlyAdmin updateReward(user) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":2283:2394  function powersOf(address account) external view returns (uint256) {... */\n    tag_138:\n        /* \"inviter_presell/stake.sol\":2341:2348  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":2368:2377  _balances */\n      0x0f\n        /* \"inviter_presell/stake.sol\":2368:2386  _balances[account] */\n      0x00\n        /* \"inviter_presell/stake.sol\":2378:2385  account */\n      dup4\n        /* \"inviter_presell/stake.sol\":2368:2386  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"inviter_presell/stake.sol\":2361:2386  return _balances[account] */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":2283:2394  function powersOf(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":782:811  uint256 public lastUpdateTime */\n    tag_141:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":3947:4062  function getCurRewardRate() public view returns (uint256) {... */\n    tag_144:\n        /* \"inviter_presell/stake.sol\":3996:4003  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4023:4054  _getRewardRate(block.timestamp) */\n      tag_312\n        /* \"inviter_presell/stake.sol\":4038:4053  block.timestamp */\n      timestamp\n        /* \"inviter_presell/stake.sol\":4023:4037  _getRewardRate */\n      tag_313\n        /* \"inviter_presell/stake.sol\":4023:4054  _getRewardRate(block.timestamp) */\n      jump\t// in\n    tag_312:\n        /* \"inviter_presell/stake.sol\":4016:4054  return _getRewardRate(block.timestamp) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":3947:4062  function getCurRewardRate() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":467:493  IERC20 public rewardsToken */\n    tag_147:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":5112:6495  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_153:\n        /* \"inviter_presell/stake.sol\":5202:5209  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5247:5248  0 */\n      dup1\n        /* \"inviter_presell/stake.sol\":5234:5243  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5234:5248  startTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":5234:5273  startTime == 0 || leftTime >= rightTime */\n      dup1\n      tag_315\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":5264:5273  rightTime */\n      dup2\n        /* \"inviter_presell/stake.sol\":5252:5260  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5252:5273  leftTime >= rightTime */\n      lt\n      iszero\n        /* \"inviter_presell/stake.sol\":5234:5273  startTime == 0 || leftTime >= rightTime */\n    tag_315:\n        /* \"inviter_presell/stake.sol\":5234:5290  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n      dup1\n      tag_316\n      jumpi\n      pop\n        /* \"inviter_presell/stake.sol\":5289:5290  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5277:5285  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5277:5290  leftTime == 0 */\n      eq\n        /* \"inviter_presell/stake.sol\":5234:5290  startTime == 0 || leftTime >= rightTime || leftTime == 0 */\n    tag_316:\n        /* \"inviter_presell/stake.sol\":5231:5327  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n      iszero\n      tag_317\n      jumpi\n        /* \"inviter_presell/stake.sol\":5314:5315  0 */\n      0x00\n        /* \"inviter_presell/stake.sol\":5307:5315  return 0 */\n      swap1\n      pop\n      jump(tag_314)\n        /* \"inviter_presell/stake.sol\":5231:5327  if(startTime == 0 || leftTime >= rightTime || leftTime == 0) {... */\n    tag_317:\n        /* \"inviter_presell/stake.sol\":5353:5362  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5342:5350  leftTime */\n      dup4\n        /* \"inviter_presell/stake.sol\":5342:5362  leftTime < startTime */\n      lt\n        /* \"inviter_presell/stake.sol\":5339:5411  if(leftTime < startTime) {... */\n      iszero\n      tag_318\n      jumpi\n        /* \"inviter_presell/stake.sol\":5390:5399  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5379:5399  leftTime = startTime */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":5339:5411  if(leftTime < startTime) {... */\n    tag_318:\n        /* \"inviter_presell/stake.sol\":5423:5443  uint256 leftInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5503:5515  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5487:5499  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5474:5483  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5463:5471  leftTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5463:5483  leftTime - startTime */\n      tag_319\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_319:\n        /* \"inviter_presell/stake.sol\":5462:5499  (leftTime - startTime) % rateInterval */\n      tag_320\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_320:\n        /* \"inviter_presell/stake.sol\":5447:5459  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5447:5499  rateInterval - (leftTime - startTime) % rateInterval */\n      tag_322\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_322:\n        /* \"inviter_presell/stake.sol\":5446:5515  (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      tag_323\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_323:\n        /* \"inviter_presell/stake.sol\":5423:5515  uint256 leftInterval = (rateInterval - (leftTime - startTime) % rateInterval) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5526:5544  uint256 leftReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5588:5600  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5573:5585  leftInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5547:5570  getRewardPool(leftTime) */\n      tag_324\n        /* \"inviter_presell/stake.sol\":5561:5569  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5547:5560  getRewardPool */\n      tag_85\n        /* \"inviter_presell/stake.sol\":5547:5570  getRewardPool(leftTime) */\n      jump\t// in\n    tag_324:\n        /* \"inviter_presell/stake.sol\":5547:5585  getRewardPool(leftTime) * leftInterval */\n      tag_325\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_325:\n        /* \"inviter_presell/stake.sol\":5547:5600  getRewardPool(leftTime) * leftInterval / rateInterval */\n      tag_326\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_326:\n        /* \"inviter_presell/stake.sol\":5526:5600  uint256 leftReward = getRewardPool(leftTime) * leftInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5613:5634  uint256 rightInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5663:5675  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5650:5659  startTime */\n      sload(0x06)\n        /* \"inviter_presell/stake.sol\":5638:5647  rightTime */\n      dup7\n        /* \"inviter_presell/stake.sol\":5638:5659  rightTime - startTime */\n      tag_327\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_327:\n        /* \"inviter_presell/stake.sol\":5637:5675  (rightTime - startTime) % rateInterval */\n      tag_328\n      swap2\n      swap1\n      tag_321\n      jump\t// in\n    tag_328:\n        /* \"inviter_presell/stake.sol\":5613:5675  uint256 rightInterval = (rightTime - startTime) % rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5686:5705  uint256 rightReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5751:5763  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":5735:5748  rightInterval */\n      dup3\n        /* \"inviter_presell/stake.sol\":5708:5732  getRewardPool(rightTime) */\n      tag_329\n        /* \"inviter_presell/stake.sol\":5722:5731  rightTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5708:5721  getRewardPool */\n      tag_85\n        /* \"inviter_presell/stake.sol\":5708:5732  getRewardPool(rightTime) */\n      jump\t// in\n    tag_329:\n        /* \"inviter_presell/stake.sol\":5708:5748  getRewardPool(rightTime) * rightInterval */\n      tag_330\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_330:\n        /* \"inviter_presell/stake.sol\":5708:5763  getRewardPool(rightTime) * rightInterval / rateInterval */\n      tag_331\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_331:\n        /* \"inviter_presell/stake.sol\":5686:5763  uint256 rightReward = getRewardPool(rightTime) * rightInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5805:5814  rightTime */\n      dup6\n        /* \"inviter_presell/stake.sol\":5790:5802  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5779:5787  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5779:5802  leftTime + leftInterval */\n      tag_332\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_332:\n        /* \"inviter_presell/stake.sol\":5779:5814  leftTime + leftInterval > rightTime */\n      gt\n        /* \"inviter_presell/stake.sol\":5776:5874  if(leftTime + leftInterval > rightTime) {... */\n      iszero\n      tag_333\n      jumpi\n        /* \"inviter_presell/stake.sol\":5838:5862  _getRewardRate(leftTime) */\n      tag_334\n        /* \"inviter_presell/stake.sol\":5853:5861  leftTime */\n      dup8\n        /* \"inviter_presell/stake.sol\":5838:5852  _getRewardRate */\n      tag_313\n        /* \"inviter_presell/stake.sol\":5838:5862  _getRewardRate(leftTime) */\n      jump\t// in\n    tag_334:\n        /* \"inviter_presell/stake.sol\":5831:5862  return _getRewardRate(leftTime) */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_314)\n        /* \"inviter_presell/stake.sol\":5776:5874  if(leftTime + leftInterval > rightTime) {... */\n    tag_333:\n        /* \"inviter_presell/stake.sol\":5886:5905  uint256 midInterval */\n      0x00\n        /* \"inviter_presell/stake.sol\":5947:5959  leftInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5936:5944  leftTime */\n      dup9\n        /* \"inviter_presell/stake.sol\":5920:5933  rightInterval */\n      dup5\n        /* \"inviter_presell/stake.sol\":5908:5917  rightTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":5908:5933  rightTime - rightInterval */\n      tag_335\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_335:\n        /* \"inviter_presell/stake.sol\":5908:5944  rightTime - rightInterval - leftTime */\n      tag_336\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_336:\n        /* \"inviter_presell/stake.sol\":5908:5959  rightTime - rightInterval - leftTime - leftInterval */\n      tag_337\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_337:\n        /* \"inviter_presell/stake.sol\":5886:5959  uint256 midInterval = rightTime - rightInterval - leftTime - leftInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":5970:5989  uint256 startReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":5992:6015  getRemainPool(leftTime) */\n      tag_338\n        /* \"inviter_presell/stake.sol\":6006:6014  leftTime */\n      dup10\n        /* \"inviter_presell/stake.sol\":5992:6005  getRemainPool */\n      tag_81\n        /* \"inviter_presell/stake.sol\":5992:6015  getRemainPool(leftTime) */\n      jump\t// in\n    tag_338:\n        /* \"inviter_presell/stake.sol\":5970:6015  uint256 startReward = getRemainPool(leftTime) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6027:6049  uint256 midTotalReward */\n      0x00\n        /* \"inviter_presell/stake.sol\":6064:6082  uint256 nextReward */\n      dup1\n        /* \"inviter_presell/stake.sol\":6097:6110  uint256 value */\n      0x00\n        /* \"inviter_presell/stake.sol\":6113:6124  startReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6097:6124  uint256 value = startReward */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6135:6148  uint256 times */\n      0x00\n        /* \"inviter_presell/stake.sol\":6165:6177  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":6151:6162  midInterval */\n      dup7\n        /* \"inviter_presell/stake.sol\":6151:6177  midInterval / rateInterval */\n      tag_339\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_339:\n        /* \"inviter_presell/stake.sol\":6135:6177  uint256 times = midInterval / rateInterval */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6192:6201  uint256 i */\n      0x00\n        /* \"inviter_presell/stake.sol\":6188:6402  for(uint256 i = 0; i < times; ++i) {... */\n    tag_340:\n        /* \"inviter_presell/stake.sol\":6211:6216  times */\n      dup2\n        /* \"inviter_presell/stake.sol\":6207:6208  i */\n      dup2\n        /* \"inviter_presell/stake.sol\":6207:6216  i < times */\n      lt\n        /* \"inviter_presell/stake.sol\":6188:6402  for(uint256 i = 0; i < times; ++i) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"inviter_presell/stake.sol\":6283:6306  rateIntervalDenominator */\n      sload(0x09)\n        /* \"inviter_presell/stake.sol\":6259:6280  rateIntervalNumerator */\n      sload(0x08)\n        /* \"inviter_presell/stake.sol\":6251:6256  value */\n      dup5\n        /* \"inviter_presell/stake.sol\":6251:6280  value * rateIntervalNumerator */\n      tag_343\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_343:\n        /* \"inviter_presell/stake.sol\":6251:6306  value * rateIntervalNumerator / rateIntervalDenominator */\n      tag_344\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_344:\n        /* \"inviter_presell/stake.sol\":6238:6306  nextReward = value * rateIntervalNumerator / rateIntervalDenominator */\n      swap4\n      pop\n        /* \"inviter_presell/stake.sol\":6337:6347  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6329:6334  value */\n      dup4\n        /* \"inviter_presell/stake.sol\":6329:6347  value - nextReward */\n      tag_345\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_345:\n        /* \"inviter_presell/stake.sol\":6321:6347  value = value - nextReward */\n      swap3\n      pop\n        /* \"inviter_presell/stake.sol\":6380:6390  nextReward */\n      dup4\n        /* \"inviter_presell/stake.sol\":6362:6390  midTotalReward += nextReward */\n      dup6\n      tag_346\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_346:\n      swap5\n      pop\n        /* \"inviter_presell/stake.sol\":6218:6221  ++i */\n      dup1\n      tag_347\n      swap1\n      tag_234\n      jump\t// in\n    tag_347:\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":6188:6402  for(uint256 i = 0; i < times; ++i) {... */\n      jump(tag_340)\n    tag_341:\n      pop\n        /* \"inviter_presell/stake.sol\":6478:6486  leftTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6466:6475  rightTime */\n      dup13\n        /* \"inviter_presell/stake.sol\":6466:6486  rightTime - leftTime */\n      tag_348\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_348:\n        /* \"inviter_presell/stake.sol\":6450:6461  rightReward */\n      dup8\n        /* \"inviter_presell/stake.sol\":6437:6447  leftReward */\n      dup11\n        /* \"inviter_presell/stake.sol\":6420:6434  midTotalReward */\n      dup7\n        /* \"inviter_presell/stake.sol\":6420:6447  midTotalReward + leftReward */\n      tag_349\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_349:\n        /* \"inviter_presell/stake.sol\":6420:6461  midTotalReward + leftReward + rightReward */\n      tag_350\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_350:\n        /* \"inviter_presell/stake.sol\":6419:6487  (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      tag_351\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_351:\n        /* \"inviter_presell/stake.sol\":6412:6487  return (midTotalReward + leftReward + rightReward) / (rightTime - leftTime) */\n      swap11\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":5112:6495  function getTimeWeightedAveRate(uint256 leftTime, uint256 rightTime) public view returns (uint256){... */\n    tag_314:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":7363:7478  function emergencyWithdraw() external onlyOwner {... */\n    tag_156:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_353\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_353:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_354\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_120\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_354:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_355\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap1\n      tag_180\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_355:\n        /* \"inviter_presell/stake.sol\":7430:7437  owner() */\n      tag_358\n        /* \"inviter_presell/stake.sol\":7430:7435  owner */\n      tag_120\n        /* \"inviter_presell/stake.sol\":7430:7437  owner() */\n      jump\t// in\n    tag_358:\n        /* \"inviter_presell/stake.sol\":7422:7447  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/stake.sol\":7422:7470  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"inviter_presell/stake.sol\":7448:7469  address(this).balance */\n      selfbalance\n        /* \"inviter_presell/stake.sol\":7422:7470  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_360\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_360:\n      pop\n        /* \"inviter_presell/stake.sol\":7363:7478  function emergencyWithdraw() external onlyOwner {... */\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":818:853  uint256 public rewardPerTokenStored */\n    tag_158:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_162:\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      tag_362\n        /* \"inviter_presell/adminable.sol\":702:712  _msgSender */\n      tag_176\n        /* \"inviter_presell/adminable.sol\":702:714  _msgSender() */\n      jump\t// in\n    tag_362:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      tag_363\n        /* \"inviter_presell/adminable.sol\":691:696  owner */\n      tag_120\n        /* \"inviter_presell/adminable.sol\":691:698  owner() */\n      jump\t// in\n    tag_363:\n        /* \"inviter_presell/adminable.sol\":691:714  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"inviter_presell/adminable.sol\":683:753  require(owner() == _msgSender(), \"Adminable: caller is not the owner\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap1\n      tag_180\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_364:\n        /* \"inviter_presell/adminable.sol\":1343:1344  0 */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1323:1331  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1323:1345  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"inviter_presell/adminable.sol\":1315:1388  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_367\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_368\n      swap1\n      tag_369\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_367:\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      tag_370\n        /* \"inviter_presell/adminable.sol\":1418:1426  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1399:1417  _transferOwnership */\n      tag_258\n        /* \"inviter_presell/adminable.sol\":1399:1427  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_370:\n        /* \"inviter_presell/adminable.sol\":1234:1435  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_170:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3166:3173  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3196:3197  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3193  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3192:3197  a - b */\n      tag_372\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_372:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3185:3197  return a - b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3108:3204  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_171:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3509:3516  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3539:3540  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3536  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3535:3540  a * b */\n      tag_374\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_374:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3528:3540  return a * b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3451:3547  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_172:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3894:3901  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3924:3925  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3921  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3920:3925  a / b */\n      tag_376\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_376:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3913:3925  return a / b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":3836:3932  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_173:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2799:2806  uint256 */\n      0x00\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2829:2830  b */\n      dup2\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2826  a */\n      dup4\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2825:2830  a + b */\n      tag_378\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_378:\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2818:2830  return a + b */\n      swap1\n      pop\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":2741:2837  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n    tag_176:\n        /* \"inviter_presell/adminable.sol\":116:123  address */\n      0x00\n        /* \"inviter_presell/adminable.sol\":143:153  msg.sender */\n      caller\n        /* \"inviter_presell/adminable.sol\":136:153  return msg.sender */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":63:161  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_258:\n        /* \"inviter_presell/adminable.sol\":1517:1533  address oldOwner */\n      0x00\n        /* \"inviter_presell/adminable.sol\":1536:1542  _owner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1517:1542  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"inviter_presell/adminable.sol\":1562:1570  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1553:1559  _owner */\n      0x01\n      0x00\n        /* \"inviter_presell/adminable.sol\":1553:1570  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"inviter_presell/adminable.sol\":1617:1625  newOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"inviter_presell/adminable.sol\":1607:1615  oldOwner */\n      dup2\n        /* \"inviter_presell/adminable.sol\":1586:1626  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"inviter_presell/adminable.sol\":1506:1634  {... */\n      pop\n        /* \"inviter_presell/adminable.sol\":1443:1634  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"inviter_presell/stake.sol\":4070:4292  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n    tag_313:\n        /* \"inviter_presell/stake.sol\":4130:4137  uint256 */\n      0x00\n        /* \"inviter_presell/stake.sol\":4150:4171  uint256 curPoolAmount */\n      dup1\n        /* \"inviter_presell/stake.sol\":4174:4193  getRewardPool(time) */\n      tag_382\n        /* \"inviter_presell/stake.sol\":4188:4192  time */\n      dup4\n        /* \"inviter_presell/stake.sol\":4174:4187  getRewardPool */\n      tag_85\n        /* \"inviter_presell/stake.sol\":4174:4193  getRewardPool(time) */\n      jump\t// in\n    tag_382:\n        /* \"inviter_presell/stake.sol\":4150:4193  uint256 curPoolAmount = getRewardPool(time) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4204:4222  uint256 rewardRate */\n      0x00\n        /* \"inviter_presell/stake.sol\":4225:4256  curPoolAmount.div(rateInterval) */\n      tag_383\n        /* \"inviter_presell/stake.sol\":4243:4255  rateInterval */\n      sload(0x07)\n        /* \"inviter_presell/stake.sol\":4225:4238  curPoolAmount */\n      dup4\n        /* \"inviter_presell/stake.sol\":4225:4242  curPoolAmount.div */\n      tag_172\n      swap1\n        /* \"inviter_presell/stake.sol\":4225:4256  curPoolAmount.div(rateInterval) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_383:\n        /* \"inviter_presell/stake.sol\":4204:4256  uint256 rewardRate = curPoolAmount.div(rateInterval) */\n      swap1\n      pop\n        /* \"inviter_presell/stake.sol\":4274:4284  rewardRate */\n      dup1\n        /* \"inviter_presell/stake.sol\":4267:4284  return rewardRate */\n      swap3\n      pop\n      pop\n      pop\n        /* \"inviter_presell/stake.sol\":4070:4292  function _getRewardRate(uint256 time) private view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_385:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_387:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_388:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_425\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_387\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_389:\n        /* \"#utility.yul\":641:665   */\n      tag_427\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_388\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_428\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_428:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_390:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_430\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_389\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_46:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_432\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_433\n      tag_385\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":917:1036   */\n    tag_432:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_434\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_390\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_391:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_392:\n        /* \"#utility.yul\":1346:1370   */\n      tag_437\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_391\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_49:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_439\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_392\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1733   */\n    tag_393:\n        /* \"#utility.yul\":1684:1708   */\n      tag_441\n        /* \"#utility.yul\":1702:1707   */\n      dup2\n        /* \"#utility.yul\":1684:1708   */\n      tag_391\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":1677:1682   */\n      dup2\n        /* \"#utility.yul\":1674:1709   */\n      eq\n        /* \"#utility.yul\":1664:1727   */\n      tag_442\n      jumpi\n        /* \"#utility.yul\":1723:1724   */\n      0x00\n        /* \"#utility.yul\":1720:1721   */\n      dup1\n        /* \"#utility.yul\":1713:1725   */\n      revert\n        /* \"#utility.yul\":1664:1727   */\n    tag_442:\n        /* \"#utility.yul\":1611:1733   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:1878   */\n    tag_394:\n        /* \"#utility.yul\":1785:1790   */\n      0x00\n        /* \"#utility.yul\":1823:1829   */\n      dup2\n        /* \"#utility.yul\":1810:1830   */\n      calldataload\n        /* \"#utility.yul\":1801:1830   */\n      swap1\n      pop\n        /* \"#utility.yul\":1839:1872   */\n      tag_444\n        /* \"#utility.yul\":1866:1871   */\n      dup2\n        /* \"#utility.yul\":1839:1872   */\n      tag_393\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":1739:1878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1884:2503   */\n    tag_59:\n        /* \"#utility.yul\":1961:1967   */\n      0x00\n        /* \"#utility.yul\":1969:1975   */\n      dup1\n        /* \"#utility.yul\":1977:1983   */\n      0x00\n        /* \"#utility.yul\":2026:2028   */\n      0x60\n        /* \"#utility.yul\":2014:2023   */\n      dup5\n        /* \"#utility.yul\":2005:2012   */\n      dup7\n        /* \"#utility.yul\":2001:2024   */\n      sub\n        /* \"#utility.yul\":1997:2029   */\n      slt\n        /* \"#utility.yul\":1994:2113   */\n      iszero\n      tag_446\n      jumpi\n        /* \"#utility.yul\":2032:2111   */\n      tag_447\n      tag_385\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":1994:2113   */\n    tag_446:\n        /* \"#utility.yul\":2152:2153   */\n      0x00\n        /* \"#utility.yul\":2177:2230   */\n      tag_448\n        /* \"#utility.yul\":2222:2229   */\n      dup7\n        /* \"#utility.yul\":2213:2219   */\n      dup3\n        /* \"#utility.yul\":2202:2211   */\n      dup8\n        /* \"#utility.yul\":2198:2220   */\n      add\n        /* \"#utility.yul\":2177:2230   */\n      tag_394\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":2167:2230   */\n      swap4\n      pop\n        /* \"#utility.yul\":2123:2240   */\n      pop\n        /* \"#utility.yul\":2279:2281   */\n      0x20\n        /* \"#utility.yul\":2305:2358   */\n      tag_449\n        /* \"#utility.yul\":2350:2357   */\n      dup7\n        /* \"#utility.yul\":2341:2347   */\n      dup3\n        /* \"#utility.yul\":2330:2339   */\n      dup8\n        /* \"#utility.yul\":2326:2348   */\n      add\n        /* \"#utility.yul\":2305:2358   */\n      tag_394\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":2295:2358   */\n      swap3\n      pop\n        /* \"#utility.yul\":2250:2368   */\n      pop\n        /* \"#utility.yul\":2407:2409   */\n      0x40\n        /* \"#utility.yul\":2433:2486   */\n      tag_450\n        /* \"#utility.yul\":2478:2485   */\n      dup7\n        /* \"#utility.yul\":2469:2475   */\n      dup3\n        /* \"#utility.yul\":2458:2467   */\n      dup8\n        /* \"#utility.yul\":2454:2476   */\n      add\n        /* \"#utility.yul\":2433:2486   */\n      tag_394\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":2423:2486   */\n      swap2\n      pop\n        /* \"#utility.yul\":2378:2496   */\n      pop\n        /* \"#utility.yul\":1884:2503   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2509:2599   */\n    tag_395:\n        /* \"#utility.yul\":2543:2550   */\n      0x00\n        /* \"#utility.yul\":2586:2591   */\n      dup2\n        /* \"#utility.yul\":2579:2592   */\n      iszero\n        /* \"#utility.yul\":2572:2593   */\n      iszero\n        /* \"#utility.yul\":2561:2593   */\n      swap1\n      pop\n        /* \"#utility.yul\":2509:2599   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2605:2721   */\n    tag_396:\n        /* \"#utility.yul\":2675:2696   */\n      tag_453\n        /* \"#utility.yul\":2690:2695   */\n      dup2\n        /* \"#utility.yul\":2675:2696   */\n      tag_395\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":2668:2673   */\n      dup2\n        /* \"#utility.yul\":2665:2697   */\n      eq\n        /* \"#utility.yul\":2655:2715   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":2711:2712   */\n      0x00\n        /* \"#utility.yul\":2708:2709   */\n      dup1\n        /* \"#utility.yul\":2701:2713   */\n      revert\n        /* \"#utility.yul\":2655:2715   */\n    tag_454:\n        /* \"#utility.yul\":2605:2721   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2727:2860   */\n    tag_397:\n        /* \"#utility.yul\":2770:2775   */\n      0x00\n        /* \"#utility.yul\":2808:2814   */\n      dup2\n        /* \"#utility.yul\":2795:2815   */\n      calldataload\n        /* \"#utility.yul\":2786:2815   */\n      swap1\n      pop\n        /* \"#utility.yul\":2824:2854   */\n      tag_456\n        /* \"#utility.yul\":2848:2853   */\n      dup2\n        /* \"#utility.yul\":2824:2854   */\n      tag_396\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":2727:2860   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2866:3334   */\n    tag_63:\n        /* \"#utility.yul\":2931:2937   */\n      0x00\n        /* \"#utility.yul\":2939:2945   */\n      dup1\n        /* \"#utility.yul\":2988:2990   */\n      0x40\n        /* \"#utility.yul\":2976:2985   */\n      dup4\n        /* \"#utility.yul\":2967:2974   */\n      dup6\n        /* \"#utility.yul\":2963:2986   */\n      sub\n        /* \"#utility.yul\":2959:2991   */\n      slt\n        /* \"#utility.yul\":2956:3075   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":2994:3073   */\n      tag_459\n      tag_385\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":2956:3075   */\n    tag_458:\n        /* \"#utility.yul\":3114:3115   */\n      0x00\n        /* \"#utility.yul\":3139:3192   */\n      tag_460\n        /* \"#utility.yul\":3184:3191   */\n      dup6\n        /* \"#utility.yul\":3175:3181   */\n      dup3\n        /* \"#utility.yul\":3164:3173   */\n      dup7\n        /* \"#utility.yul\":3160:3182   */\n      add\n        /* \"#utility.yul\":3139:3192   */\n      tag_390\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":3129:3192   */\n      swap3\n      pop\n        /* \"#utility.yul\":3085:3202   */\n      pop\n        /* \"#utility.yul\":3241:3243   */\n      0x20\n        /* \"#utility.yul\":3267:3317   */\n      tag_461\n        /* \"#utility.yul\":3309:3316   */\n      dup6\n        /* \"#utility.yul\":3300:3306   */\n      dup3\n        /* \"#utility.yul\":3289:3298   */\n      dup7\n        /* \"#utility.yul\":3285:3307   */\n      add\n        /* \"#utility.yul\":3267:3317   */\n      tag_397\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3257:3317   */\n      swap2\n      pop\n        /* \"#utility.yul\":3212:3327   */\n      pop\n        /* \"#utility.yul\":2866:3334   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3340:3449   */\n    tag_398:\n        /* \"#utility.yul\":3421:3442   */\n      tag_463\n        /* \"#utility.yul\":3436:3441   */\n      dup2\n        /* \"#utility.yul\":3421:3442   */\n      tag_395\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3416:3419   */\n      dup3\n        /* \"#utility.yul\":3409:3443   */\n      mstore\n        /* \"#utility.yul\":3340:3449   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3455:3665   */\n    tag_69:\n        /* \"#utility.yul\":3542:3546   */\n      0x00\n        /* \"#utility.yul\":3580:3582   */\n      0x20\n        /* \"#utility.yul\":3569:3578   */\n      dup3\n        /* \"#utility.yul\":3565:3583   */\n      add\n        /* \"#utility.yul\":3557:3583   */\n      swap1\n      pop\n        /* \"#utility.yul\":3593:3658   */\n      tag_465\n        /* \"#utility.yul\":3655:3656   */\n      0x00\n        /* \"#utility.yul\":3644:3653   */\n      dup4\n        /* \"#utility.yul\":3640:3657   */\n      add\n        /* \"#utility.yul\":3631:3637   */\n      dup5\n        /* \"#utility.yul\":3593:3658   */\n      tag_398\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":3455:3665   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3671:4000   */\n    tag_77:\n        /* \"#utility.yul\":3730:3736   */\n      0x00\n        /* \"#utility.yul\":3779:3781   */\n      0x20\n        /* \"#utility.yul\":3767:3776   */\n      dup3\n        /* \"#utility.yul\":3758:3765   */\n      dup5\n        /* \"#utility.yul\":3754:3777   */\n      sub\n        /* \"#utility.yul\":3750:3782   */\n      slt\n        /* \"#utility.yul\":3747:3866   */\n      iszero\n      tag_467\n      jumpi\n        /* \"#utility.yul\":3785:3864   */\n      tag_468\n      tag_385\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":3747:3866   */\n    tag_467:\n        /* \"#utility.yul\":3905:3906   */\n      0x00\n        /* \"#utility.yul\":3930:3983   */\n      tag_469\n        /* \"#utility.yul\":3975:3982   */\n      dup5\n        /* \"#utility.yul\":3966:3972   */\n      dup3\n        /* \"#utility.yul\":3955:3964   */\n      dup6\n        /* \"#utility.yul\":3951:3973   */\n      add\n        /* \"#utility.yul\":3930:3983   */\n      tag_394\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3920:3983   */\n      swap2\n      pop\n        /* \"#utility.yul\":3876:3993   */\n      pop\n        /* \"#utility.yul\":3671:4000   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4006:4124   */\n    tag_399:\n        /* \"#utility.yul\":4093:4117   */\n      tag_471\n        /* \"#utility.yul\":4111:4116   */\n      dup2\n        /* \"#utility.yul\":4093:4117   */\n      tag_388\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":4088:4091   */\n      dup3\n        /* \"#utility.yul\":4081:4118   */\n      mstore\n        /* \"#utility.yul\":4006:4124   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4130:4352   */\n    tag_122:\n        /* \"#utility.yul\":4223:4227   */\n      0x00\n        /* \"#utility.yul\":4261:4263   */\n      0x20\n        /* \"#utility.yul\":4250:4259   */\n      dup3\n        /* \"#utility.yul\":4246:4264   */\n      add\n        /* \"#utility.yul\":4238:4264   */\n      swap1\n      pop\n        /* \"#utility.yul\":4274:4345   */\n      tag_473\n        /* \"#utility.yul\":4342:4343   */\n      0x00\n        /* \"#utility.yul\":4331:4340   */\n      dup4\n        /* \"#utility.yul\":4327:4344   */\n      add\n        /* \"#utility.yul\":4318:4324   */\n      dup5\n        /* \"#utility.yul\":4274:4345   */\n      tag_399\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":4130:4352   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4358:4832   */\n    tag_131:\n        /* \"#utility.yul\":4426:4432   */\n      0x00\n        /* \"#utility.yul\":4434:4440   */\n      dup1\n        /* \"#utility.yul\":4483:4485   */\n      0x40\n        /* \"#utility.yul\":4471:4480   */\n      dup4\n        /* \"#utility.yul\":4462:4469   */\n      dup6\n        /* \"#utility.yul\":4458:4481   */\n      sub\n        /* \"#utility.yul\":4454:4486   */\n      slt\n        /* \"#utility.yul\":4451:4570   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":4489:4568   */\n      tag_476\n      tag_385\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":4451:4570   */\n    tag_475:\n        /* \"#utility.yul\":4609:4610   */\n      0x00\n        /* \"#utility.yul\":4634:4687   */\n      tag_477\n        /* \"#utility.yul\":4679:4686   */\n      dup6\n        /* \"#utility.yul\":4670:4676   */\n      dup3\n        /* \"#utility.yul\":4659:4668   */\n      dup7\n        /* \"#utility.yul\":4655:4677   */\n      add\n        /* \"#utility.yul\":4634:4687   */\n      tag_390\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4624:4687   */\n      swap3\n      pop\n        /* \"#utility.yul\":4580:4697   */\n      pop\n        /* \"#utility.yul\":4736:4738   */\n      0x20\n        /* \"#utility.yul\":4762:4815   */\n      tag_478\n        /* \"#utility.yul\":4807:4814   */\n      dup6\n        /* \"#utility.yul\":4798:4804   */\n      dup3\n        /* \"#utility.yul\":4787:4796   */\n      dup7\n        /* \"#utility.yul\":4783:4805   */\n      add\n        /* \"#utility.yul\":4762:4815   */\n      tag_394\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4752:4815   */\n      swap2\n      pop\n        /* \"#utility.yul\":4707:4825   */\n      pop\n        /* \"#utility.yul\":4358:4832   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4838:4898   */\n    tag_400:\n        /* \"#utility.yul\":4866:4869   */\n      0x00\n        /* \"#utility.yul\":4887:4892   */\n      dup2\n        /* \"#utility.yul\":4880:4892   */\n      swap1\n      pop\n        /* \"#utility.yul\":4838:4898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4904:5046   */\n    tag_401:\n        /* \"#utility.yul\":4954:4963   */\n      0x00\n        /* \"#utility.yul\":4987:5040   */\n      tag_481\n        /* \"#utility.yul\":5005:5039   */\n      tag_482\n        /* \"#utility.yul\":5014:5038   */\n      tag_483\n        /* \"#utility.yul\":5032:5037   */\n      dup5\n        /* \"#utility.yul\":5014:5038   */\n      tag_387\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":5005:5039   */\n      tag_400\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4987:5040   */\n      tag_387\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4974:5040   */\n      swap1\n      pop\n        /* \"#utility.yul\":4904:5046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5052:5178   */\n    tag_402:\n        /* \"#utility.yul\":5102:5111   */\n      0x00\n        /* \"#utility.yul\":5135:5172   */\n      tag_485\n        /* \"#utility.yul\":5166:5171   */\n      dup3\n        /* \"#utility.yul\":5135:5172   */\n      tag_401\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":5122:5172   */\n      swap1\n      pop\n        /* \"#utility.yul\":5052:5178   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5184:5325   */\n    tag_403:\n        /* \"#utility.yul\":5249:5258   */\n      0x00\n        /* \"#utility.yul\":5282:5319   */\n      tag_487\n        /* \"#utility.yul\":5313:5318   */\n      dup3\n        /* \"#utility.yul\":5282:5319   */\n      tag_402\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":5269:5319   */\n      swap1\n      pop\n        /* \"#utility.yul\":5184:5325   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5331:5492   */\n    tag_404:\n        /* \"#utility.yul\":5433:5485   */\n      tag_489\n        /* \"#utility.yul\":5479:5484   */\n      dup2\n        /* \"#utility.yul\":5433:5485   */\n      tag_403\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":5428:5431   */\n      dup3\n        /* \"#utility.yul\":5421:5486   */\n      mstore\n        /* \"#utility.yul\":5331:5492   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5498:5750   */\n    tag_149:\n        /* \"#utility.yul\":5606:5610   */\n      0x00\n        /* \"#utility.yul\":5644:5646   */\n      0x20\n        /* \"#utility.yul\":5633:5642   */\n      dup3\n        /* \"#utility.yul\":5629:5647   */\n      add\n        /* \"#utility.yul\":5621:5647   */\n      swap1\n      pop\n        /* \"#utility.yul\":5657:5743   */\n      tag_491\n        /* \"#utility.yul\":5740:5741   */\n      0x00\n        /* \"#utility.yul\":5729:5738   */\n      dup4\n        /* \"#utility.yul\":5725:5742   */\n      add\n        /* \"#utility.yul\":5716:5722   */\n      dup5\n        /* \"#utility.yul\":5657:5743   */\n      tag_404\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5498:5750   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5756:6230   */\n    tag_152:\n        /* \"#utility.yul\":5824:5830   */\n      0x00\n        /* \"#utility.yul\":5832:5838   */\n      dup1\n        /* \"#utility.yul\":5881:5883   */\n      0x40\n        /* \"#utility.yul\":5869:5878   */\n      dup4\n        /* \"#utility.yul\":5860:5867   */\n      dup6\n        /* \"#utility.yul\":5856:5879   */\n      sub\n        /* \"#utility.yul\":5852:5884   */\n      slt\n        /* \"#utility.yul\":5849:5968   */\n      iszero\n      tag_493\n      jumpi\n        /* \"#utility.yul\":5887:5966   */\n      tag_494\n      tag_385\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":5849:5968   */\n    tag_493:\n        /* \"#utility.yul\":6007:6008   */\n      0x00\n        /* \"#utility.yul\":6032:6085   */\n      tag_495\n        /* \"#utility.yul\":6077:6084   */\n      dup6\n        /* \"#utility.yul\":6068:6074   */\n      dup3\n        /* \"#utility.yul\":6057:6066   */\n      dup7\n        /* \"#utility.yul\":6053:6075   */\n      add\n        /* \"#utility.yul\":6032:6085   */\n      tag_394\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":6022:6085   */\n      swap3\n      pop\n        /* \"#utility.yul\":5978:6095   */\n      pop\n        /* \"#utility.yul\":6134:6136   */\n      0x20\n        /* \"#utility.yul\":6160:6213   */\n      tag_496\n        /* \"#utility.yul\":6205:6212   */\n      dup6\n        /* \"#utility.yul\":6196:6202   */\n      dup3\n        /* \"#utility.yul\":6185:6194   */\n      dup7\n        /* \"#utility.yul\":6181:6203   */\n      add\n        /* \"#utility.yul\":6160:6213   */\n      tag_394\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":6150:6213   */\n      swap2\n      pop\n        /* \"#utility.yul\":6105:6223   */\n      pop\n        /* \"#utility.yul\":5756:6230   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6236:6405   */\n    tag_405:\n        /* \"#utility.yul\":6320:6331   */\n      0x00\n        /* \"#utility.yul\":6354:6360   */\n      dup3\n        /* \"#utility.yul\":6349:6352   */\n      dup3\n        /* \"#utility.yul\":6342:6361   */\n      mstore\n        /* \"#utility.yul\":6394:6398   */\n      0x20\n        /* \"#utility.yul\":6389:6392   */\n      dup3\n        /* \"#utility.yul\":6385:6399   */\n      add\n        /* \"#utility.yul\":6370:6399   */\n      swap1\n      pop\n        /* \"#utility.yul\":6236:6405   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6411:6632   */\n    tag_406:\n        /* \"#utility.yul\":6551:6585   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e\n        /* \"#utility.yul\":6547:6548   */\n      0x00\n        /* \"#utility.yul\":6539:6545   */\n      dup3\n        /* \"#utility.yul\":6535:6549   */\n      add\n        /* \"#utility.yul\":6528:6586   */\n      mstore\n        /* \"#utility.yul\":6620:6624   */\n      0x6572000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6615:6617   */\n      0x20\n        /* \"#utility.yul\":6607:6613   */\n      dup3\n        /* \"#utility.yul\":6603:6618   */\n      add\n        /* \"#utility.yul\":6596:6625   */\n      mstore\n        /* \"#utility.yul\":6411:6632   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6638:7004   */\n    tag_407:\n        /* \"#utility.yul\":6780:6783   */\n      0x00\n        /* \"#utility.yul\":6801:6868   */\n      tag_500\n        /* \"#utility.yul\":6865:6867   */\n      0x22\n        /* \"#utility.yul\":6860:6863   */\n      dup4\n        /* \"#utility.yul\":6801:6868   */\n      tag_405\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":6794:6868   */\n      swap2\n      pop\n        /* \"#utility.yul\":6877:6970   */\n      tag_501\n        /* \"#utility.yul\":6966:6969   */\n      dup3\n        /* \"#utility.yul\":6877:6970   */\n      tag_406\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":6995:6997   */\n      0x40\n        /* \"#utility.yul\":6990:6993   */\n      dup3\n        /* \"#utility.yul\":6986:6998   */\n      add\n        /* \"#utility.yul\":6979:6998   */\n      swap1\n      pop\n        /* \"#utility.yul\":6638:7004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7010:7429   */\n    tag_180:\n        /* \"#utility.yul\":7176:7180   */\n      0x00\n        /* \"#utility.yul\":7214:7216   */\n      0x20\n        /* \"#utility.yul\":7203:7212   */\n      dup3\n        /* \"#utility.yul\":7199:7217   */\n      add\n        /* \"#utility.yul\":7191:7217   */\n      swap1\n      pop\n        /* \"#utility.yul\":7263:7272   */\n      dup2\n        /* \"#utility.yul\":7257:7261   */\n      dup2\n        /* \"#utility.yul\":7253:7273   */\n      sub\n        /* \"#utility.yul\":7249:7250   */\n      0x00\n        /* \"#utility.yul\":7238:7247   */\n      dup4\n        /* \"#utility.yul\":7234:7251   */\n      add\n        /* \"#utility.yul\":7227:7274   */\n      mstore\n        /* \"#utility.yul\":7291:7422   */\n      tag_503\n        /* \"#utility.yul\":7417:7421   */\n      dup2\n        /* \"#utility.yul\":7291:7422   */\n      tag_407\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":7283:7422   */\n      swap1\n      pop\n        /* \"#utility.yul\":7010:7429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7435:7743   */\n    tag_189:\n        /* \"#utility.yul\":7544:7548   */\n      0x00\n        /* \"#utility.yul\":7582:7584   */\n      0x40\n        /* \"#utility.yul\":7571:7580   */\n      dup3\n        /* \"#utility.yul\":7567:7585   */\n      add\n        /* \"#utility.yul\":7559:7585   */\n      swap1\n      pop\n        /* \"#utility.yul\":7595:7660   */\n      tag_505\n        /* \"#utility.yul\":7657:7658   */\n      0x00\n        /* \"#utility.yul\":7646:7655   */\n      dup4\n        /* \"#utility.yul\":7642:7659   */\n      add\n        /* \"#utility.yul\":7633:7639   */\n      dup6\n        /* \"#utility.yul\":7595:7660   */\n      tag_398\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":7670:7736   */\n      tag_506\n        /* \"#utility.yul\":7732:7734   */\n      0x20\n        /* \"#utility.yul\":7721:7730   */\n      dup4\n        /* \"#utility.yul\":7717:7735   */\n      add\n        /* \"#utility.yul\":7708:7714   */\n      dup5\n        /* \"#utility.yul\":7670:7736   */\n      tag_398\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7435:7743   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7749:7930   */\n    tag_408:\n        /* \"#utility.yul\":7889:7922   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":7885:7886   */\n      0x00\n        /* \"#utility.yul\":7877:7883   */\n      dup3\n        /* \"#utility.yul\":7873:7887   */\n      add\n        /* \"#utility.yul\":7866:7923   */\n      mstore\n        /* \"#utility.yul\":7749:7930   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7936:8302   */\n    tag_409:\n        /* \"#utility.yul\":8078:8081   */\n      0x00\n        /* \"#utility.yul\":8099:8166   */\n      tag_509\n        /* \"#utility.yul\":8163:8165   */\n      0x1f\n        /* \"#utility.yul\":8158:8161   */\n      dup4\n        /* \"#utility.yul\":8099:8166   */\n      tag_405\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":8092:8166   */\n      swap2\n      pop\n        /* \"#utility.yul\":8175:8268   */\n      tag_510\n        /* \"#utility.yul\":8264:8267   */\n      dup3\n        /* \"#utility.yul\":8175:8268   */\n      tag_408\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":8293:8295   */\n      0x20\n        /* \"#utility.yul\":8288:8291   */\n      dup3\n        /* \"#utility.yul\":8284:8296   */\n      add\n        /* \"#utility.yul\":8277:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":7936:8302   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8308:8727   */\n    tag_194:\n        /* \"#utility.yul\":8474:8478   */\n      0x00\n        /* \"#utility.yul\":8512:8514   */\n      0x20\n        /* \"#utility.yul\":8501:8510   */\n      dup3\n        /* \"#utility.yul\":8497:8515   */\n      add\n        /* \"#utility.yul\":8489:8515   */\n      swap1\n      pop\n        /* \"#utility.yul\":8561:8570   */\n      dup2\n        /* \"#utility.yul\":8555:8559   */\n      dup2\n        /* \"#utility.yul\":8551:8571   */\n      sub\n        /* \"#utility.yul\":8547:8548   */\n      0x00\n        /* \"#utility.yul\":8536:8545   */\n      dup4\n        /* \"#utility.yul\":8532:8549   */\n      add\n        /* \"#utility.yul\":8525:8572   */\n      mstore\n        /* \"#utility.yul\":8589:8720   */\n      tag_512\n        /* \"#utility.yul\":8715:8719   */\n      dup2\n        /* \"#utility.yul\":8589:8720   */\n      tag_409\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":8581:8720   */\n      swap1\n      pop\n        /* \"#utility.yul\":8308:8727   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8733:9065   */\n    tag_205:\n        /* \"#utility.yul\":8854:8858   */\n      0x00\n        /* \"#utility.yul\":8892:8894   */\n      0x40\n        /* \"#utility.yul\":8881:8890   */\n      dup3\n        /* \"#utility.yul\":8877:8895   */\n      add\n        /* \"#utility.yul\":8869:8895   */\n      swap1\n      pop\n        /* \"#utility.yul\":8905:8976   */\n      tag_514\n        /* \"#utility.yul\":8973:8974   */\n      0x00\n        /* \"#utility.yul\":8962:8971   */\n      dup4\n        /* \"#utility.yul\":8958:8975   */\n      add\n        /* \"#utility.yul\":8949:8955   */\n      dup6\n        /* \"#utility.yul\":8905:8976   */\n      tag_399\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":8986:9058   */\n      tag_515\n        /* \"#utility.yul\":9054:9056   */\n      0x20\n        /* \"#utility.yul\":9043:9052   */\n      dup4\n        /* \"#utility.yul\":9039:9057   */\n      add\n        /* \"#utility.yul\":9030:9036   */\n      dup5\n        /* \"#utility.yul\":8986:9058   */\n      tag_392\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":8733:9065   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9071:9208   */\n    tag_410:\n        /* \"#utility.yul\":9125:9130   */\n      0x00\n        /* \"#utility.yul\":9156:9162   */\n      dup2\n        /* \"#utility.yul\":9150:9163   */\n      mload\n        /* \"#utility.yul\":9141:9163   */\n      swap1\n      pop\n        /* \"#utility.yul\":9172:9202   */\n      tag_517\n        /* \"#utility.yul\":9196:9201   */\n      dup2\n        /* \"#utility.yul\":9172:9202   */\n      tag_396\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":9071:9208   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9214:9559   */\n    tag_209:\n        /* \"#utility.yul\":9281:9287   */\n      0x00\n        /* \"#utility.yul\":9330:9332   */\n      0x20\n        /* \"#utility.yul\":9318:9327   */\n      dup3\n        /* \"#utility.yul\":9309:9316   */\n      dup5\n        /* \"#utility.yul\":9305:9328   */\n      sub\n        /* \"#utility.yul\":9301:9333   */\n      slt\n        /* \"#utility.yul\":9298:9417   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":9336:9415   */\n      tag_520\n      tag_385\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":9298:9417   */\n    tag_519:\n        /* \"#utility.yul\":9456:9457   */\n      0x00\n        /* \"#utility.yul\":9481:9542   */\n      tag_521\n        /* \"#utility.yul\":9534:9541   */\n      dup5\n        /* \"#utility.yul\":9525:9531   */\n      dup3\n        /* \"#utility.yul\":9514:9523   */\n      dup6\n        /* \"#utility.yul\":9510:9532   */\n      add\n        /* \"#utility.yul\":9481:9542   */\n      tag_410\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":9471:9542   */\n      swap2\n      pop\n        /* \"#utility.yul\":9427:9552   */\n      pop\n        /* \"#utility.yul\":9214:9559   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9565:9786   */\n    tag_411:\n        /* \"#utility.yul\":9705:9739   */\n      0x41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d\n        /* \"#utility.yul\":9701:9702   */\n      0x00\n        /* \"#utility.yul\":9693:9699   */\n      dup3\n        /* \"#utility.yul\":9689:9703   */\n      add\n        /* \"#utility.yul\":9682:9740   */\n      mstore\n        /* \"#utility.yul\":9774:9778   */\n      0x696e000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9769:9771   */\n      0x20\n        /* \"#utility.yul\":9761:9767   */\n      dup3\n        /* \"#utility.yul\":9757:9772   */\n      add\n        /* \"#utility.yul\":9750:9779   */\n      mstore\n        /* \"#utility.yul\":9565:9786   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9792:10158   */\n    tag_412:\n        /* \"#utility.yul\":9934:9937   */\n      0x00\n        /* \"#utility.yul\":9955:10022   */\n      tag_524\n        /* \"#utility.yul\":10019:10021   */\n      0x22\n        /* \"#utility.yul\":10014:10017   */\n      dup4\n        /* \"#utility.yul\":9955:10022   */\n      tag_405\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":9948:10022   */\n      swap2\n      pop\n        /* \"#utility.yul\":10031:10124   */\n      tag_525\n        /* \"#utility.yul\":10120:10123   */\n      dup3\n        /* \"#utility.yul\":10031:10124   */\n      tag_411\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":10149:10151   */\n      0x40\n        /* \"#utility.yul\":10144:10147   */\n      dup3\n        /* \"#utility.yul\":10140:10152   */\n      add\n        /* \"#utility.yul\":10133:10152   */\n      swap1\n      pop\n        /* \"#utility.yul\":9792:10158   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10164:10583   */\n    tag_216:\n        /* \"#utility.yul\":10330:10334   */\n      0x00\n        /* \"#utility.yul\":10368:10370   */\n      0x20\n        /* \"#utility.yul\":10357:10366   */\n      dup3\n        /* \"#utility.yul\":10353:10371   */\n      add\n        /* \"#utility.yul\":10345:10371   */\n      swap1\n      pop\n        /* \"#utility.yul\":10417:10426   */\n      dup2\n        /* \"#utility.yul\":10411:10415   */\n      dup2\n        /* \"#utility.yul\":10407:10427   */\n      sub\n        /* \"#utility.yul\":10403:10404   */\n      0x00\n        /* \"#utility.yul\":10392:10401   */\n      dup4\n        /* \"#utility.yul\":10388:10405   */\n      add\n        /* \"#utility.yul\":10381:10428   */\n      mstore\n        /* \"#utility.yul\":10445:10576   */\n      tag_527\n        /* \"#utility.yul\":10571:10575   */\n      dup2\n        /* \"#utility.yul\":10445:10576   */\n      tag_412\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":10437:10576   */\n      swap1\n      pop\n        /* \"#utility.yul\":10164:10583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10589:10769   */\n    tag_413:\n        /* \"#utility.yul\":10637:10714   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10634:10635   */\n      0x00\n        /* \"#utility.yul\":10627:10715   */\n      mstore\n        /* \"#utility.yul\":10734:10738   */\n      0x11\n        /* \"#utility.yul\":10731:10732   */\n      0x04\n        /* \"#utility.yul\":10724:10739   */\n      mstore\n        /* \"#utility.yul\":10758:10762   */\n      0x24\n        /* \"#utility.yul\":10755:10756   */\n      0x00\n        /* \"#utility.yul\":10748:10763   */\n      revert\n        /* \"#utility.yul\":10775:10969   */\n    tag_221:\n        /* \"#utility.yul\":10815:10819   */\n      0x00\n        /* \"#utility.yul\":10835:10855   */\n      tag_530\n        /* \"#utility.yul\":10853:10854   */\n      dup3\n        /* \"#utility.yul\":10835:10855   */\n      tag_391\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":10830:10855   */\n      swap2\n      pop\n        /* \"#utility.yul\":10869:10889   */\n      tag_531\n        /* \"#utility.yul\":10887:10888   */\n      dup4\n        /* \"#utility.yul\":10869:10889   */\n      tag_391\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":10864:10889   */\n      swap3\n      pop\n        /* \"#utility.yul\":10913:10914   */\n      dup3\n        /* \"#utility.yul\":10910:10911   */\n      dup3\n        /* \"#utility.yul\":10906:10915   */\n      sub\n        /* \"#utility.yul\":10898:10915   */\n      swap1\n      pop\n        /* \"#utility.yul\":10937:10938   */\n      dup2\n        /* \"#utility.yul\":10931:10935   */\n      dup2\n        /* \"#utility.yul\":10928:10939   */\n      gt\n        /* \"#utility.yul\":10925:10962   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":10942:10960   */\n      tag_533\n      tag_413\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":10925:10962   */\n    tag_532:\n        /* \"#utility.yul\":10775:10969   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10975:11155   */\n    tag_414:\n        /* \"#utility.yul\":11023:11100   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11020:11021   */\n      0x00\n        /* \"#utility.yul\":11013:11101   */\n      mstore\n        /* \"#utility.yul\":11120:11124   */\n      0x12\n        /* \"#utility.yul\":11117:11118   */\n      0x04\n        /* \"#utility.yul\":11110:11125   */\n      mstore\n        /* \"#utility.yul\":11144:11148   */\n      0x24\n        /* \"#utility.yul\":11141:11142   */\n      0x00\n        /* \"#utility.yul\":11134:11149   */\n      revert\n        /* \"#utility.yul\":11161:11346   */\n    tag_223:\n        /* \"#utility.yul\":11201:11202   */\n      0x00\n        /* \"#utility.yul\":11218:11238   */\n      tag_536\n        /* \"#utility.yul\":11236:11237   */\n      dup3\n        /* \"#utility.yul\":11218:11238   */\n      tag_391\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":11213:11238   */\n      swap2\n      pop\n        /* \"#utility.yul\":11252:11272   */\n      tag_537\n        /* \"#utility.yul\":11270:11271   */\n      dup4\n        /* \"#utility.yul\":11252:11272   */\n      tag_391\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":11247:11272   */\n      swap3\n      pop\n        /* \"#utility.yul\":11291:11292   */\n      dup3\n        /* \"#utility.yul\":11281:11316   */\n      tag_538\n      jumpi\n        /* \"#utility.yul\":11296:11314   */\n      tag_539\n      tag_414\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":11281:11316   */\n    tag_538:\n        /* \"#utility.yul\":11338:11339   */\n      dup3\n        /* \"#utility.yul\":11335:11336   */\n      dup3\n        /* \"#utility.yul\":11331:11340   */\n      div\n        /* \"#utility.yul\":11326:11340   */\n      swap1\n      pop\n        /* \"#utility.yul\":11161:11346   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11352:11543   */\n    tag_225:\n        /* \"#utility.yul\":11392:11395   */\n      0x00\n        /* \"#utility.yul\":11411:11431   */\n      tag_541\n        /* \"#utility.yul\":11429:11430   */\n      dup3\n        /* \"#utility.yul\":11411:11431   */\n      tag_391\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":11406:11431   */\n      swap2\n      pop\n        /* \"#utility.yul\":11445:11465   */\n      tag_542\n        /* \"#utility.yul\":11463:11464   */\n      dup4\n        /* \"#utility.yul\":11445:11465   */\n      tag_391\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":11440:11465   */\n      swap3\n      pop\n        /* \"#utility.yul\":11488:11489   */\n      dup3\n        /* \"#utility.yul\":11485:11486   */\n      dup3\n        /* \"#utility.yul\":11481:11490   */\n      add\n        /* \"#utility.yul\":11474:11490   */\n      swap1\n      pop\n        /* \"#utility.yul\":11509:11512   */\n      dup1\n        /* \"#utility.yul\":11506:11507   */\n      dup3\n        /* \"#utility.yul\":11503:11513   */\n      gt\n        /* \"#utility.yul\":11500:11536   */\n      iszero\n      tag_543\n      jumpi\n        /* \"#utility.yul\":11516:11534   */\n      tag_544\n      tag_413\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":11500:11536   */\n    tag_543:\n        /* \"#utility.yul\":11352:11543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11549:11959   */\n    tag_230:\n        /* \"#utility.yul\":11589:11596   */\n      0x00\n        /* \"#utility.yul\":11612:11632   */\n      tag_546\n        /* \"#utility.yul\":11630:11631   */\n      dup3\n        /* \"#utility.yul\":11612:11632   */\n      tag_391\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":11607:11632   */\n      swap2\n      pop\n        /* \"#utility.yul\":11646:11666   */\n      tag_547\n        /* \"#utility.yul\":11664:11665   */\n      dup4\n        /* \"#utility.yul\":11646:11666   */\n      tag_391\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":11641:11666   */\n      swap3\n      pop\n        /* \"#utility.yul\":11701:11702   */\n      dup3\n        /* \"#utility.yul\":11698:11699   */\n      dup3\n        /* \"#utility.yul\":11694:11703   */\n      mul\n        /* \"#utility.yul\":11723:11753   */\n      tag_548\n        /* \"#utility.yul\":11741:11752   */\n      dup2\n        /* \"#utility.yul\":11723:11753   */\n      tag_391\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":11712:11753   */\n      swap2\n      pop\n        /* \"#utility.yul\":11902:11903   */\n      dup3\n        /* \"#utility.yul\":11893:11900   */\n      dup3\n        /* \"#utility.yul\":11889:11904   */\n      div\n        /* \"#utility.yul\":11886:11887   */\n      dup5\n        /* \"#utility.yul\":11883:11905   */\n      eq\n        /* \"#utility.yul\":11863:11864   */\n      dup4\n        /* \"#utility.yul\":11856:11865   */\n      iszero\n        /* \"#utility.yul\":11836:11919   */\n      or\n        /* \"#utility.yul\":11813:11952   */\n      tag_549\n      jumpi\n        /* \"#utility.yul\":11932:11950   */\n      tag_550\n      tag_413\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":11813:11952   */\n    tag_549:\n        /* \"#utility.yul\":11597:11959   */\n      pop\n        /* \"#utility.yul\":11549:11959   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11965:12198   */\n    tag_234:\n        /* \"#utility.yul\":12004:12007   */\n      0x00\n        /* \"#utility.yul\":12027:12051   */\n      tag_552\n        /* \"#utility.yul\":12045:12050   */\n      dup3\n        /* \"#utility.yul\":12027:12051   */\n      tag_391\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":12018:12051   */\n      swap2\n      pop\n        /* \"#utility.yul\":12073:12139   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":12066:12071   */\n      dup3\n        /* \"#utility.yul\":12063:12140   */\n      sub\n        /* \"#utility.yul\":12060:12163   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":12143:12161   */\n      tag_554\n      tag_413\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":12060:12163   */\n    tag_553:\n        /* \"#utility.yul\":12190:12191   */\n      0x01\n        /* \"#utility.yul\":12183:12188   */\n      dup3\n        /* \"#utility.yul\":12179:12192   */\n      add\n        /* \"#utility.yul\":12172:12192   */\n      swap1\n      pop\n        /* \"#utility.yul\":11965:12198   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12204:12368   */\n    tag_415:\n        /* \"#utility.yul\":12344:12360   */\n      0x43616e6e6f74207374616b652030000000000000000000000000000000000000\n        /* \"#utility.yul\":12340:12341   */\n      0x00\n        /* \"#utility.yul\":12332:12338   */\n      dup3\n        /* \"#utility.yul\":12328:12342   */\n      add\n        /* \"#utility.yul\":12321:12361   */\n      mstore\n        /* \"#utility.yul\":12204:12368   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12374:12740   */\n    tag_416:\n        /* \"#utility.yul\":12516:12519   */\n      0x00\n        /* \"#utility.yul\":12537:12604   */\n      tag_557\n        /* \"#utility.yul\":12601:12603   */\n      0x0e\n        /* \"#utility.yul\":12596:12599   */\n      dup4\n        /* \"#utility.yul\":12537:12604   */\n      tag_405\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":12530:12604   */\n      swap2\n      pop\n        /* \"#utility.yul\":12613:12706   */\n      tag_558\n        /* \"#utility.yul\":12702:12705   */\n      dup3\n        /* \"#utility.yul\":12613:12706   */\n      tag_415\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":12731:12733   */\n      0x20\n        /* \"#utility.yul\":12726:12729   */\n      dup3\n        /* \"#utility.yul\":12722:12734   */\n      add\n        /* \"#utility.yul\":12715:12734   */\n      swap1\n      pop\n        /* \"#utility.yul\":12374:12740   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12746:13165   */\n    tag_306:\n        /* \"#utility.yul\":12912:12916   */\n      0x00\n        /* \"#utility.yul\":12950:12952   */\n      0x20\n        /* \"#utility.yul\":12939:12948   */\n      dup3\n        /* \"#utility.yul\":12935:12953   */\n      add\n        /* \"#utility.yul\":12927:12953   */\n      swap1\n      pop\n        /* \"#utility.yul\":12999:13008   */\n      dup2\n        /* \"#utility.yul\":12993:12997   */\n      dup2\n        /* \"#utility.yul\":12989:13009   */\n      sub\n        /* \"#utility.yul\":12985:12986   */\n      0x00\n        /* \"#utility.yul\":12974:12983   */\n      dup4\n        /* \"#utility.yul\":12970:12987   */\n      add\n        /* \"#utility.yul\":12963:13010   */\n      mstore\n        /* \"#utility.yul\":13027:13158   */\n      tag_560\n        /* \"#utility.yul\":13153:13157   */\n      dup2\n        /* \"#utility.yul\":13027:13158   */\n      tag_416\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":13019:13158   */\n      swap1\n      pop\n        /* \"#utility.yul\":12746:13165   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13171:13347   */\n    tag_321:\n        /* \"#utility.yul\":13203:13204   */\n      0x00\n        /* \"#utility.yul\":13220:13240   */\n      tag_562\n        /* \"#utility.yul\":13238:13239   */\n      dup3\n        /* \"#utility.yul\":13220:13240   */\n      tag_391\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":13215:13240   */\n      swap2\n      pop\n        /* \"#utility.yul\":13254:13274   */\n      tag_563\n        /* \"#utility.yul\":13272:13273   */\n      dup4\n        /* \"#utility.yul\":13254:13274   */\n      tag_391\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":13249:13274   */\n      swap3\n      pop\n        /* \"#utility.yul\":13293:13294   */\n      dup3\n        /* \"#utility.yul\":13283:13318   */\n      tag_564\n      jumpi\n        /* \"#utility.yul\":13298:13316   */\n      tag_565\n      tag_414\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":13283:13318   */\n    tag_564:\n        /* \"#utility.yul\":13339:13340   */\n      dup3\n        /* \"#utility.yul\":13336:13337   */\n      dup3\n        /* \"#utility.yul\":13332:13341   */\n      mod\n        /* \"#utility.yul\":13327:13341   */\n      swap1\n      pop\n        /* \"#utility.yul\":13171:13347   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13353:13578   */\n    tag_417:\n        /* \"#utility.yul\":13493:13527   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13489:13490   */\n      0x00\n        /* \"#utility.yul\":13481:13487   */\n      dup3\n        /* \"#utility.yul\":13477:13491   */\n      add\n        /* \"#utility.yul\":13470:13528   */\n      mstore\n        /* \"#utility.yul\":13562:13570   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13557:13559   */\n      0x20\n        /* \"#utility.yul\":13549:13555   */\n      dup3\n        /* \"#utility.yul\":13545:13560   */\n      add\n        /* \"#utility.yul\":13538:13571   */\n      mstore\n        /* \"#utility.yul\":13353:13578   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13584:13950   */\n    tag_418:\n        /* \"#utility.yul\":13726:13729   */\n      0x00\n        /* \"#utility.yul\":13747:13814   */\n      tag_568\n        /* \"#utility.yul\":13811:13813   */\n      0x26\n        /* \"#utility.yul\":13806:13809   */\n      dup4\n        /* \"#utility.yul\":13747:13814   */\n      tag_405\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":13740:13814   */\n      swap2\n      pop\n        /* \"#utility.yul\":13823:13916   */\n      tag_569\n        /* \"#utility.yul\":13912:13915   */\n      dup3\n        /* \"#utility.yul\":13823:13916   */\n      tag_417\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":13941:13943   */\n      0x40\n        /* \"#utility.yul\":13936:13939   */\n      dup3\n        /* \"#utility.yul\":13932:13944   */\n      add\n        /* \"#utility.yul\":13925:13944   */\n      swap1\n      pop\n        /* \"#utility.yul\":13584:13950   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13956:14375   */\n    tag_369:\n        /* \"#utility.yul\":14122:14126   */\n      0x00\n        /* \"#utility.yul\":14160:14162   */\n      0x20\n        /* \"#utility.yul\":14149:14158   */\n      dup3\n        /* \"#utility.yul\":14145:14163   */\n      add\n        /* \"#utility.yul\":14137:14163   */\n      swap1\n      pop\n        /* \"#utility.yul\":14209:14218   */\n      dup2\n        /* \"#utility.yul\":14203:14207   */\n      dup2\n        /* \"#utility.yul\":14199:14219   */\n      sub\n        /* \"#utility.yul\":14195:14196   */\n      0x00\n        /* \"#utility.yul\":14184:14193   */\n      dup4\n        /* \"#utility.yul\":14180:14197   */\n      add\n        /* \"#utility.yul\":14173:14220   */\n      mstore\n        /* \"#utility.yul\":14237:14368   */\n      tag_571\n        /* \"#utility.yul\":14363:14367   */\n      dup2\n        /* \"#utility.yul\":14237:14368   */\n      tag_418\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14229:14368   */\n      swap1\n      pop\n        /* \"#utility.yul\":13956:14375   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220692bdaf9ee9917b1d9b401d702e9d4dd62916c6ee400400f248a1c58e61e308764736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1002": {
									"entryPoint": null,
									"id": 1002,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_51": {
									"entryPoint": null,
									"id": 51,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_10": {
									"entryPoint": 89,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 97,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040526923934c5a09da1900000060055561025860075560056008556103e860095534801561002f57600080fd5b5061004c61004161005960201b60201c565b61006160201b60201c565b6001600281905550610127565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61243080620001376000396000f3fe608060405234801561001057600080fd5b50600436106102055760003560e01c80638107368b1161011a578063adc9772e116100ad578063d1af0c7d1161007c578063d1af0c7d146105de578063da4f8431146105fc578063db2e21bc1461062c578063df136d6514610636578063f2fde38b1461065457610205565b8063adc9772e14610556578063b79ec81214610572578063c8f33c91146105a2578063cdda56e0146105c057610205565b80638da5cb5b116100e95780638da5cb5b146104e05780639499c549146104fe5780639a5b17b01461051c578063a4c3b0911461053a57610205565b80638107368b14610434578063874c120b146104645780638aee8127146104945780638b876347146104b057610205565b80633e0a322d1161019d5780636917c5011161016c5780636917c501146103b2578063715018a6146103d057806378e97925146103da5780637a6fcee7146103f857806380faa57d1461041657610205565b80633e0a322d146103185780634dbdc4eb146103345780635cfa91f4146103645780636139d4b41461039457610205565b806318e20ecf116101d957806318e20ecf146102a457806324d7806c146102c05780633c4045cf146102f05780633d18b9121461030e57610205565b80628cc2621461020a5780630700037d1461023a5780630e15561a1461026a578063129ee21a14610288575b600080fd5b610224600480360381019061021f9190611c42565b610670565b6040516102319190611c88565b60405180910390f35b610254600480360381019061024f9190611c42565b6107dc565b6040516102619190611c88565b60405180910390f35b6102726107f4565b60405161027f9190611c88565b60405180910390f35b6102a2600480360381019061029d9190611ccf565b6107fa565b005b6102be60048036038101906102b99190611d5a565b610890565b005b6102da60048036038101906102d59190611c42565b610a01565b6040516102e79190611da9565b60405180910390f35b6102f8610a56565b6040516103059190611c88565b60405180910390f35b610316610a5c565b005b610332600480360381019061032d9190611dc4565b610dc1565b005b61034e60048036038101906103499190611dc4565b610e1a565b60405161035b9190611c88565b60405180910390f35b61037e60048036038101906103799190611dc4565b610eb1565b60405161038b9190611c88565b60405180910390f35b61039c610f75565b6040516103a99190611c88565b60405180910390f35b6103ba610f7b565b6040516103c79190611c88565b60405180910390f35b6103d8610f85565b005b6103e261100d565b6040516103ef9190611c88565b60405180910390f35b610400611013565b60405161040d9190611c88565b60405180910390f35b61041e611019565b60405161042b9190611c88565b60405180910390f35b61044e60048036038101906104499190611c42565b611021565b60405161045b9190611c88565b60405180910390f35b61047e60048036038101906104799190611dc4565b611039565b60405161048b9190611c88565b60405180910390f35b6104ae60048036038101906104a99190611c42565b6110c6565b005b6104ca60048036038101906104c59190611c42565b611186565b6040516104d79190611c88565b60405180910390f35b6104e861119e565b6040516104f59190611e00565b60405180910390f35b6105066111c8565b6040516105139190611c88565b60405180910390f35b6105246111d8565b6040516105319190611c88565b60405180910390f35b610554600480360381019061054f9190611e1b565b6111e0565b005b610570600480360381019061056b9190611e1b565b6112df565b005b61058c60048036038101906105879190611c42565b611653565b6040516105999190611c88565b60405180910390f35b6105aa61169c565b6040516105b79190611c88565b60405180910390f35b6105c86116a2565b6040516105d59190611c88565b60405180910390f35b6105e66116b2565b6040516105f39190611eba565b60405180910390f35b61061660048036038101906106119190611ed5565b6116d8565b6040516106239190611c88565b60405180910390f35b6106346118bf565b005b61063e61198b565b60405161064b9190611c88565b60405180910390f35b61066e60048036038101906106699190611c42565b611991565b005b6000806106bc600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426116d8565b90506107d4600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107c6670de0b6b3a76400006107b861076a600c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461075c88611039565b611a8890919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a9e90919063ffffffff16565b611ab490919063ffffffff16565b611aca90919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b610802611ae0565b73ffffffffffffffffffffffffffffffffffffffff1661082061119e565b73ffffffffffffffffffffffffffffffffffffffff1614610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d90611f98565b60405180910390fd5b826007819055508160088190555080600981905550505050565b610898611ae0565b73ffffffffffffffffffffffffffffffffffffffff166108b661119e565b73ffffffffffffffffffffffffffffffffffffffff161461090c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090390611f98565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168360405161099f929190611fb8565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b6002805403610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a979061202d565b60405180910390fd5b60028081905550336000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610afb5760065490505b6000610b0782426116d8565b9050610b1281611039565b600b81905550610b20611019565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c3157610b6383610670565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610db3576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d2092919061204d565b6020604051808303816000875af1158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d63919061208b565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610daa9190611c88565b60405180910390a25b505050506001600281905550565b610dd1610dcc611ae0565b610a01565b610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e079061212a565b60405180910390fd5b8060068190555050565b60008060065403610e2f576006549050610eac565b6000600160075460065485610e449190612179565b610e4e91906121dc565b610e58919061220d565b90506000600554905060005b82811015610ea55760095460085483610e7d9190612241565b610e8791906121dc565b82610e929190612179565b915080610e9e90612283565b9050610e64565b5080925050505b919050565b60008060065403610ec6576005549050610f70565b600654821015610ed95760009050610f70565b6000600160075460065485610eee9190612179565b610ef891906121dc565b610f02919061220d565b90506000600554905060005b82811015610f4f5760095460085483610f279190612241565b610f3191906121dc565b82610f3c9190612179565b915080610f4890612283565b9050610f0e565b5060095460085482610f619190612241565b610f6b91906121dc565b925050505b919050565b60075481565b6000600e54905090565b610f8d611ae0565b73ffffffffffffffffffffffffffffffffffffffff16610fab61119e565b73ffffffffffffffffffffffffffffffffffffffff1614611001576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff890611f98565b60405180910390fd5b61100b6000611ae8565b565b60065481565b60095481565b600042905090565b600d6020528060005260406000206000915090505481565b600080600e540361104e57600b5490506110c1565b6110be6110ad600e5461109f670de0b6b3a764000061109187611083600a54611075611019565b611a8890919063ffffffff16565b611a9e90919063ffffffff16565b611a9e90919063ffffffff16565b611ab490919063ffffffff16565b600b54611aca90919063ffffffff16565b90505b919050565b6110ce611ae0565b73ffffffffffffffffffffffffffffffffffffffff166110ec61119e565b73ffffffffffffffffffffffffffffffffffffffff1614611142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113990611f98565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006111d342610eb1565b905090565b600042905090565b6111e8611ae0565b73ffffffffffffffffffffffffffffffffffffffff1661120661119e565b73ffffffffffffffffffffffffffffffffffffffff161461125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125390611f98565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161129792919061204d565b6020604051808303816000875af11580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da919061208b565b505050565b6002805403611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131a9061202d565b60405180910390fd5b6002808190555061133a611335611ae0565b610a01565b611379576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113709061212a565b60405180910390fd5b816000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060065481116113cd5760065490505b60006113d982426116d8565b90506113e481611039565b600b819055506113f2611019565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146115035761143583610670565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d90612317565b60405180910390fd5b61155b84600e54611aca90919063ffffffff16565b600e819055506115b384600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aca90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8560405161163c9190611c88565b60405180910390a250505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b60006116ad42611bae565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060065414806116ea5750818310155b806116f55750600083145b1561170357600090506118b9565b6006548310156117135760065492505b6000600754600754600654866117299190612179565b6117339190612337565b6007546117409190612179565b61174a9190612337565b905060006007548261175b87610eb1565b6117659190612241565b61176f91906121dc565b90506000600754600654866117849190612179565b61178e9190612337565b905060006007548261179f88610eb1565b6117a99190612241565b6117b391906121dc565b90508584886117c2919061220d565b11156117dc576117d187611bae565b9450505050506118b9565b6000848884896117ec9190612179565b6117f69190612179565b6118009190612179565b9050600061180d89610e1a565b9050600080600083905060006007548661182791906121dc565b905060005b8181101561187e57600954600854846118459190612241565b61184f91906121dc565b9350838361185d9190612179565b9250838561186b919061220d565b94508061187790612283565b905061182c565b508c8c61188b9190612179565b878a86611898919061220d565b6118a2919061220d565b6118ac91906121dc565b9a50505050505050505050505b92915050565b6118c7611ae0565b73ffffffffffffffffffffffffffffffffffffffff166118e561119e565b73ffffffffffffffffffffffffffffffffffffffff161461193b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193290611f98565b60405180910390fd5b61194361119e565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015611988573d6000803e3d6000fd5b50565b600b5481565b611999611ae0565b73ffffffffffffffffffffffffffffffffffffffff166119b761119e565b73ffffffffffffffffffffffffffffffffffffffff1614611a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0490611f98565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a73906123da565b60405180910390fd5b611a8581611ae8565b50565b60008183611a969190612179565b905092915050565b60008183611aac9190612241565b905092915050565b60008183611ac291906121dc565b905092915050565b60008183611ad8919061220d565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611bba83610eb1565b90506000611bd360075483611ab490919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c0f82611be4565b9050919050565b611c1f81611c04565b8114611c2a57600080fd5b50565b600081359050611c3c81611c16565b92915050565b600060208284031215611c5857611c57611bdf565b5b6000611c6684828501611c2d565b91505092915050565b6000819050919050565b611c8281611c6f565b82525050565b6000602082019050611c9d6000830184611c79565b92915050565b611cac81611c6f565b8114611cb757600080fd5b50565b600081359050611cc981611ca3565b92915050565b600080600060608486031215611ce857611ce7611bdf565b5b6000611cf686828701611cba565b9350506020611d0786828701611cba565b9250506040611d1886828701611cba565b9150509250925092565b60008115159050919050565b611d3781611d22565b8114611d4257600080fd5b50565b600081359050611d5481611d2e565b92915050565b60008060408385031215611d7157611d70611bdf565b5b6000611d7f85828601611c2d565b9250506020611d9085828601611d45565b9150509250929050565b611da381611d22565b82525050565b6000602082019050611dbe6000830184611d9a565b92915050565b600060208284031215611dda57611dd9611bdf565b5b6000611de884828501611cba565b91505092915050565b611dfa81611c04565b82525050565b6000602082019050611e156000830184611df1565b92915050565b60008060408385031215611e3257611e31611bdf565b5b6000611e4085828601611c2d565b9250506020611e5185828601611cba565b9150509250929050565b6000819050919050565b6000611e80611e7b611e7684611be4565b611e5b565b611be4565b9050919050565b6000611e9282611e65565b9050919050565b6000611ea482611e87565b9050919050565b611eb481611e99565b82525050565b6000602082019050611ecf6000830184611eab565b92915050565b60008060408385031215611eec57611eeb611bdf565b5b6000611efa85828601611cba565b9250506020611f0b85828601611cba565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f82602283611f15565b9150611f8d82611f26565b604082019050919050565b60006020820190508181036000830152611fb181611f75565b9050919050565b6000604082019050611fcd6000830185611d9a565b611fda6020830184611d9a565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612017601f83611f15565b915061202282611fe1565b602082019050919050565b600060208201905081810360008301526120468161200a565b9050919050565b60006040820190506120626000830185611df1565b61206f6020830184611c79565b9392505050565b60008151905061208581611d2e565b92915050565b6000602082840312156120a1576120a0611bdf565b5b60006120af84828501612076565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b6000612114602283611f15565b915061211f826120b8565b604082019050919050565b6000602082019050818103600083015261214381612107565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218482611c6f565b915061218f83611c6f565b92508282039050818111156121a7576121a661214a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121e782611c6f565b91506121f283611c6f565b925082612202576122016121ad565b5b828204905092915050565b600061221882611c6f565b915061222383611c6f565b925082820190508082111561223b5761223a61214a565b5b92915050565b600061224c82611c6f565b915061225783611c6f565b925082820261226581611c6f565b9150828204841483151761227c5761227b61214a565b5b5092915050565b600061228e82611c6f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122c0576122bf61214a565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b6000612301600e83611f15565b915061230c826122cb565b602082019050919050565b60006020820190508181036000830152612330816122f4565b9050919050565b600061234282611c6f565b915061234d83611c6f565b92508261235d5761235c6121ad565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006123c4602683611f15565b91506123cf82612368565b604082019050919050565b600060208201905081810360008301526123f3816123b7565b905091905056fea2646970667358221220692bdaf9ee9917b1d9b401d702e9d4dd62916c6ee400400f248a1c58e61e308764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH10 0x23934C5A09DA19000000 PUSH1 0x5 SSTORE PUSH2 0x258 PUSH1 0x7 SSTORE PUSH1 0x5 PUSH1 0x8 SSTORE PUSH2 0x3E8 PUSH1 0x9 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C PUSH2 0x41 PUSH2 0x59 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x61 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH2 0x127 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2430 DUP1 PUSH3 0x137 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x205 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8107368B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x654 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x5C0 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x53A JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x8107368B EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x4B0 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x416 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x394 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x18E20ECF GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x30E JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x129EE21A EQ PUSH2 0x288 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xA5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0xF85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E2 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x10C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x570 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x12DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AA PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C8 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E6 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x616 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x634 PUSH2 0x18BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63E PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1991 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BC PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D4 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7C6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B8 PUSH2 0x76A PUSH1 0xC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x75C DUP9 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x1A88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1AB4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x802 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x820 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x898 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B6 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x903 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xAFB JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xB07 DUP3 TIMESTAMP PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB12 DUP2 PUSH2 0x1039 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB20 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC31 JUMPI PUSH2 0xB63 DUP4 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDD1 PUSH2 0xDCC PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE07 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xE2F JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xE44 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0xE58 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST DUP3 PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xE9E SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP PUSH2 0xE64 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xEC6 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST DUP3 PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xF48 SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP PUSH2 0xF0E JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xF6B SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF8D PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFAB PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF8 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100B PUSH1 0x0 PUSH2 0x1AE8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD SUB PUSH2 0x104E JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x10BE PUSH2 0x10AD PUSH1 0xE SLOAD PUSH2 0x109F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1091 DUP8 PUSH2 0x1083 PUSH1 0xA SLOAD PUSH2 0x1075 PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x1A88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1AB4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CE PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10EC PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1139 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D3 TIMESTAMP PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11E8 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1206 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12DA SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131A SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x133A PUSH2 0x1335 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1370 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x13CD JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP3 TIMESTAMP PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x13E4 DUP2 PUSH2 0x1039 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x13F2 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1503 JUMPI PUSH2 0x1435 DUP4 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155B DUP5 PUSH1 0xE SLOAD PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x15B3 DUP5 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD TIMESTAMP PUSH2 0x1BAE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x16EA JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x16F5 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x1713 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1729 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x174A SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x175B DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1765 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x176F SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x179F DUP9 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x17B3 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x17C2 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17D1 DUP8 PUSH2 0x1BAE JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x17EC SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x1800 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x180D DUP10 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x187E JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x185D SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x186B SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x1877 SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP PUSH2 0x182C JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x188B SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x18A2 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x18AC SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C7 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E5 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x193B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1932 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1943 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1999 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B7 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A04 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A73 SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A85 DUP2 PUSH2 0x1AE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A96 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AAC SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AC2 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BBA DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BD3 PUSH1 0x7 SLOAD DUP4 PUSH2 0x1AB4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP3 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C1F DUP2 PUSH2 0x1C04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3C DUP2 PUSH2 0x1C16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C66 DUP5 DUP3 DUP6 ADD PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C82 DUP2 PUSH2 0x1C6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CAC DUP2 PUSH2 0x1C6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC9 DUP2 PUSH2 0x1CA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D07 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D18 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D37 DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D54 DUP2 PUSH2 0x1D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D71 JUMPI PUSH2 0x1D70 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D7F DUP6 DUP3 DUP7 ADD PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D90 DUP6 DUP3 DUP7 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFA DUP2 PUSH2 0x1C04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E40 DUP6 DUP3 DUP7 ADD PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E51 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E80 PUSH2 0x1E7B PUSH2 0x1E76 DUP5 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP3 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB4 DUP2 PUSH2 0x1E99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ECF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP6 DUP3 DUP7 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F0B DUP6 DUP3 DUP7 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F82 PUSH1 0x22 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8D DUP3 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB1 DUP2 PUSH2 0x1F75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D9A JUMP JUMPDEST PUSH2 0x1FDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2017 PUSH1 0x1F DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x2022 DUP3 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2046 DUP2 PUSH2 0x200A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2062 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x206F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C79 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2085 DUP2 PUSH2 0x1D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP5 DUP3 DUP6 ADD PUSH2 0x2076 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2114 PUSH1 0x22 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x211F DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2143 DUP2 PUSH2 0x2107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2184 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x218F DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21A7 JUMPI PUSH2 0x21A6 PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21E7 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x21F2 DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2202 JUMPI PUSH2 0x2201 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2218 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x2223 DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x223B JUMPI PUSH2 0x223A PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x2257 DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2265 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x214A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228E DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22C0 JUMPI PUSH2 0x22BF PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2301 PUSH1 0xE DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x230C DUP3 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2330 DUP2 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2342 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x234D DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x235D JUMPI PUSH2 0x235C PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C4 PUSH1 0x26 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x23CF DUP3 PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F3 DUP2 PUSH2 0x23B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x2BDAF9EE9917B1D9B401 0xD7 MUL 0xE9 0xD4 0xDD PUSH3 0x916C6E 0xE4 STOP BLOCKHASH 0xF 0x24 DUP11 SHR PC 0xE6 0x1E ADDRESS DUP8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "371:7261:1:-:0;;;581:17;551:47;;666:10;636:40;;722:1;683:40;;771:4;730:45;;371:7261;;;;;;;;;;603:32:0;622:12;:10;;;:12;;:::i;:::-;603:18;;;:32;;:::i;:::-;1701:1:2;1806:7;:22;;;;371:7261:1;;63:98:0;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;371:7261:1:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_getRewardRate_584": {
									"entryPoint": 7086,
									"id": 584,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_msgSender_10": {
									"entryPoint": 6880,
									"id": 10,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_150": {
									"entryPoint": 6888,
									"id": 150,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@add_1798": {
									"entryPoint": 6858,
									"id": 1798,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@curTime_354": {
									"entryPoint": 4568,
									"id": 354,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@div_1843": {
									"entryPoint": 6836,
									"id": 1843,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@earned_666": {
									"entryPoint": 1648,
									"id": 666,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@emergencyWithdrawToken_982": {
									"entryPoint": 4576,
									"id": 982,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyWithdraw_963": {
									"entryPoint": 6335,
									"id": 963,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurRewardPool_377": {
									"entryPoint": 4552,
									"id": 377,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getCurRewardRate_561": {
									"entryPoint": 5794,
									"id": 561,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRemainPool_550": {
									"entryPoint": 3610,
									"id": 550,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardPool_442": {
									"entryPoint": 3761,
									"id": 442,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getReward_918": {
									"entryPoint": 2652,
									"id": 918,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getTimeWeightedAveRate_830": {
									"entryPoint": 5848,
									"id": 830,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isAdmin_96": {
									"entryPoint": 2561,
									"id": 96,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lastTimeRewardApplicable_593": {
									"entryPoint": 4121,
									"id": 593,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lastUpdateTime_216": {
									"entryPoint": 5788,
									"id": 216,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@modificationAdmin_174": {
									"entryPoint": 2192,
									"id": 174,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mul_1828": {
									"entryPoint": 6814,
									"id": 1828,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_84": {
									"entryPoint": 4510,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@powersOf_366": {
									"entryPoint": 5715,
									"id": 366,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rateIntervalDenominator_214": {
									"entryPoint": 4115,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateIntervalNumerator_211": {
									"entryPoint": 2646,
									"id": 211,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rateInterval_208": {
									"entryPoint": 3957,
									"id": 208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_109": {
									"entryPoint": 3973,
									"id": 109,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenStored_218": {
									"entryPoint": 6539,
									"id": 218,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerToken_626": {
									"entryPoint": 4153,
									"id": 626,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardsToken_192": {
									"entryPoint": 5810,
									"id": 192,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewards_196": {
									"entryPoint": 2012,
									"id": 196,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setConfig_325": {
									"entryPoint": 2042,
									"id": 325,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setRewardToken_932": {
									"entryPoint": 4294,
									"id": 932,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setStartTime_337": {
									"entryPoint": 3521,
									"id": 337,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_875": {
									"entryPoint": 4831,
									"id": 875,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startTime_205": {
									"entryPoint": 4109,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1813": {
									"entryPoint": 6792,
									"id": 1813,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@totalPowers_345": {
									"entryPoint": 3963,
									"id": 345,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalRewards_203": {
									"entryPoint": 2036,
									"id": 203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_131": {
									"entryPoint": 6545,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@userLastUpdateTime_226": {
									"entryPoint": 4129,
									"id": 226,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userRewardPerTokenPaid_222": {
									"entryPoint": 4486,
									"id": 222,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 7493,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8310,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7234,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$1101_to_t_address_fromStack": {
									"entryPoint": 7851,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9143,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8948,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8455,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 7289,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7680,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8269,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 8120,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$1101__to_t_address__fromStack_reversed": {
									"entryPoint": 7866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8983,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 7304,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7957,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8717,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8769,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7140,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$1101_to_t_address": {
									"entryPoint": 7833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 7815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 7781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 8835,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mod_t_uint256": {
									"entryPoint": 9015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8522,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8621,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 9064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab": {
									"entryPoint": 8907,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb": {
									"entryPoint": 7974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 8161,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 7470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7331,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14378:7",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:7"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:7"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:7",
														"type": ""
													}
												],
												"src": "7:75:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:7"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:7"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:7",
														"type": ""
													}
												],
												"src": "334:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:7",
														"type": ""
													}
												],
												"src": "466:96:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:7"
															},
															"nodeType": "YulIf",
															"src": "621:63:7"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:7",
														"type": ""
													}
												],
												"src": "568:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:7"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:7",
														"type": ""
													}
												],
												"src": "696:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:7"
															},
															"nodeType": "YulIf",
															"src": "917:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "1046:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1090:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "877:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "888:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "900:6:7",
														"type": ""
													}
												],
												"src": "841:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1221:32:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1231:16:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1242:5:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1203:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1213:7:7",
														"type": ""
													}
												],
												"src": "1176:77:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1324:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1334:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:7"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1312:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1319:3:7",
														"type": ""
													}
												],
												"src": "1259:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1481:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1491:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1499:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1527:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1453:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1465:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1476:4:7",
														"type": ""
													}
												],
												"src": "1383:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1654:79:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1711:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1723:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1713:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1677:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1702:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "1684:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:24:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1674:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1674:35:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1667:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1667:43:7"
															},
															"nodeType": "YulIf",
															"src": "1664:63:7"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1647:5:7",
														"type": ""
													}
												],
												"src": "1611:122:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1791:87:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1801:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1823:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1810:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1810:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1801:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1866:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1839:26:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1839:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1839:33:7"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1769:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1777:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1785:5:7",
														"type": ""
													}
												],
												"src": "1739:139:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1984:519:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2030:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2032:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2032:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2032:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2005:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2014:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2001:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2001:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2026:2:7",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1997:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "1997:32:7"
															},
															"nodeType": "YulIf",
															"src": "1994:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "2123:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2138:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2152:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2142:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2167:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2202:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2213:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2198:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2198:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2222:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2177:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2177:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2167:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2250:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2265:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2279:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2269:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2295:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2330:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2341:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2326:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2326:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2350:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2305:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2305:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2295:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2378:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2393:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2407:2:7",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2397:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2423:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2458:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2469:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2454:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2454:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2478:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2433:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2433:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2423:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1938:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1949:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1961:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1969:6:7",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1977:6:7",
														"type": ""
													}
												],
												"src": "1884:619:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2551:48:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2561:32:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2586:5:7"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2579:6:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2579:13:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2572:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2572:21:7"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2561:7:7"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2533:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2543:7:7",
														"type": ""
													}
												],
												"src": "2509:90:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2645:76:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2699:16:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2708:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2711:1:7",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2701:6:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2701:12:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2701:12:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2668:5:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2690:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "2675:14:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2675:21:7"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2665:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2665:32:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2658:40:7"
															},
															"nodeType": "YulIf",
															"src": "2655:60:7"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2638:5:7",
														"type": ""
													}
												],
												"src": "2605:116:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2776:84:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2786:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2808:6:7"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2795:12:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2795:20:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2786:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2848:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "2824:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2824:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2824:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2754:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2762:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2770:5:7",
														"type": ""
													}
												],
												"src": "2727:133:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2946:388:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2992:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2994:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2994:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2994:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2967:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2976:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2963:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2963:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2988:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2959:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:32:7"
															},
															"nodeType": "YulIf",
															"src": "2956:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3085:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3100:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3114:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3104:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3129:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3164:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3175:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3160:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3160:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3184:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3139:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3139:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3129:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3212:115:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3227:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3241:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3231:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3257:60:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3289:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3300:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3285:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3285:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3309:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3267:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3267:50:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3257:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2908:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2919:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2931:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2939:6:7",
														"type": ""
													}
												],
												"src": "2866:468:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3399:50:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3416:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3436:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "3421:14:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3421:21:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3409:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3409:34:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3409:34:7"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3387:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3394:3:7",
														"type": ""
													}
												],
												"src": "3340:109:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3547:118:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3557:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3569:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3580:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3565:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3565:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3557:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3631:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3644:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3655:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3640:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3640:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3593:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3593:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3593:65:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3519:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3531:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3542:4:7",
														"type": ""
													}
												],
												"src": "3455:210:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3737:263:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3783:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3785:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3785:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3785:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3758:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3767:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3754:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3754:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3779:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3750:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "3750:32:7"
															},
															"nodeType": "YulIf",
															"src": "3747:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "3876:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3891:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3905:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3895:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3920:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3955:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3966:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3951:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3951:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3975:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3930:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3930:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3920:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3707:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3718:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3730:6:7",
														"type": ""
													}
												],
												"src": "3671:329:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4071:53:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4088:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4111:5:7"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4093:17:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4093:24:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:37:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4081:37:7"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4059:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4066:3:7",
														"type": ""
													}
												],
												"src": "4006:118:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4228:124:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4238:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4250:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4261:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4246:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4246:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4238:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4318:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4331:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4342:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4327:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4327:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4274:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4274:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4274:71:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4200:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4212:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4223:4:7",
														"type": ""
													}
												],
												"src": "4130:222:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4441:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4487:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4489:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4489:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4489:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4462:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4471:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4458:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4483:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4454:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4454:32:7"
															},
															"nodeType": "YulIf",
															"src": "4451:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "4580:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4595:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4609:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4599:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4624:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4659:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4670:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4655:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4655:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4679:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4634:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4634:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4624:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4707:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4722:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4736:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4726:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4752:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4787:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4798:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4783:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4783:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4807:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4762:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4762:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4752:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4403:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4414:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4426:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4434:6:7",
														"type": ""
													}
												],
												"src": "4358:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4870:28:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4880:12:7",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4887:5:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "4880:3:7"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4856:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "4866:3:7",
														"type": ""
													}
												],
												"src": "4838:60:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4964:82:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4974:66:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5032:5:7"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nodeType": "YulIdentifier",
																					"src": "5014:17:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5014:24:7"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5005:8:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5005:34:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "4987:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "4987:53:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "4974:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4944:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "4954:9:7",
														"type": ""
													}
												],
												"src": "4904:142:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5112:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5122:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5166:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5135:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5135:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5122:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5092:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5102:9:7",
														"type": ""
													}
												],
												"src": "5052:126:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5259:66:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5269:50:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5313:5:7"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5282:30:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5282:37:7"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:7"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$1101_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5239:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5249:9:7",
														"type": ""
													}
												],
												"src": "5184:141:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5411:81:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5428:3:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5479:5:7"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$1101_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5433:45:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5433:52:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5421:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5421:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5421:65:7"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$1101_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5399:5:7",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5406:3:7",
														"type": ""
													}
												],
												"src": "5331:161:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5611:139:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5621:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5633:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5644:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5629:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5621:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5716:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5729:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5740:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5725:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5725:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$1101_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5657:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5657:86:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5657:86:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$1101__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5583:9:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5595:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5606:4:7",
														"type": ""
													}
												],
												"src": "5498:252:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5839:391:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5885:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5887:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5887:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5887:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5860:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5869:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5856:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5856:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5881:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5852:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "5852:32:7"
															},
															"nodeType": "YulIf",
															"src": "5849:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "5978:117:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5993:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6007:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5997:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6022:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6057:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6068:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6053:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6053:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6077:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6032:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6032:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6022:6:7"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6105:118:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6120:16:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6134:2:7",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6124:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6150:63:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6185:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6196:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6181:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6181:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6205:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6160:20:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6160:53:7"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6150:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5801:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5812:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5824:6:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5832:6:7",
														"type": ""
													}
												],
												"src": "5756:474:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6332:73:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6349:3:7"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6354:6:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6342:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6342:19:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6342:19:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6370:29:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6389:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6394:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6385:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6385:14:7"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6370:11:7"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6304:3:7",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6309:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6320:11:7",
														"type": ""
													}
												],
												"src": "6236:169:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6517:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6539:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6547:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6535:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6535:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6551:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6528:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6528:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6528:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6607:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6615:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6603:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6603:15:7"
																	},
																	{
																		"hexValue": "6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6620:4:7",
																		"type": "",
																		"value": "er"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6596:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6596:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6596:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6509:6:7",
														"type": ""
													}
												],
												"src": "6411:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6784:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6794:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6860:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6865:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6801:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6801:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6966:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																	"nodeType": "YulIdentifier",
																	"src": "6877:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6877:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6877:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6979:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6990:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6995:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6986:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "6986:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6979:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6772:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6780:3:7",
														"type": ""
													}
												],
												"src": "6638:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7181:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7191:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7203:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7214:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7199:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7199:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7191:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7238:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7249:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7234:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7234:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7257:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7263:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7253:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7253:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7227:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7227:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7227:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7283:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7417:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7291:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7291:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7283:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7161:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7176:4:7",
														"type": ""
													}
												],
												"src": "7010:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7549:194:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7559:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7571:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7582:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7567:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7567:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7559:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7633:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7646:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7657:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7642:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7642:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7595:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7595:65:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7595:65:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7708:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7721:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7732:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7717:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7717:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7670:37:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7670:66:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7670:66:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7513:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7525:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7533:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7544:4:7",
														"type": ""
													}
												],
												"src": "7435:308:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7855:75:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7877:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7885:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7873:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7873:14:7"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7889:33:7",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7866:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "7866:57:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7866:57:7"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7847:6:7",
														"type": ""
													}
												],
												"src": "7749:181:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8082:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8092:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8158:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8163:2:7",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8099:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8099:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "8092:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8264:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "8175:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8175:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8175:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8277:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8288:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8293:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8284:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8284:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8277:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8070:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8078:3:7",
														"type": ""
													}
												],
												"src": "7936:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8479:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8489:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8501:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8512:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8497:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8497:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8489:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8536:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8547:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8532:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8532:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8555:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8561:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8551:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8551:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8525:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8525:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8525:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8581:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8715:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8589:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8589:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8581:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8459:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8474:4:7",
														"type": ""
													}
												],
												"src": "8308:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8859:206:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8869:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8881:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8892:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8877:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8877:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8869:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8949:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8962:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8973:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8958:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8958:17:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8905:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8905:71:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8905:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9030:6:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9043:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9054:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9039:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9039:18:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8986:43:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "8986:72:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8986:72:7"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8823:9:7",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8835:6:7",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8843:6:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8854:4:7",
														"type": ""
													}
												],
												"src": "8733:332:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9131:77:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9141:22:7",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "9156:6:7"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "9150:5:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9150:13:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "9141:5:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9196:5:7"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "9172:23:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9172:30:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9172:30:7"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "9109:6:7",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9117:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9125:5:7",
														"type": ""
													}
												],
												"src": "9071:137:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9288:271:7",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9334:83:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9336:77:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9336:79:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9336:79:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9309:7:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9318:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9305:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9305:23:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9330:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9301:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9301:32:7"
															},
															"nodeType": "YulIf",
															"src": "9298:119:7"
														},
														{
															"nodeType": "YulBlock",
															"src": "9427:125:7",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9442:15:7",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9456:1:7",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9446:6:7",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9471:71:7",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9514:9:7"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9525:6:7"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9510:3:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9510:22:7"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9534:7:7"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "9481:28:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9481:61:7"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9471:6:7"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9258:9:7",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9269:7:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9281:6:7",
														"type": ""
													}
												],
												"src": "9214:345:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9671:115:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9693:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9701:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9689:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9689:14:7"
																	},
																	{
																		"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9705:34:7",
																		"type": "",
																		"value": "Adminable: caller is not the adm"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9682:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9682:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9682:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9761:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9769:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9757:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9757:15:7"
																	},
																	{
																		"hexValue": "696e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9774:4:7",
																		"type": "",
																		"value": "in"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9750:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9750:29:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9750:29:7"
														}
													]
												},
												"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9663:6:7",
														"type": ""
													}
												],
												"src": "9565:221:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9938:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9948:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10014:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10019:2:7",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9955:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "9955:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "9948:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10120:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																	"nodeType": "YulIdentifier",
																	"src": "10031:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10031:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10031:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10133:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "10144:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10149:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10140:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10140:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "10133:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9926:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "9934:3:7",
														"type": ""
													}
												],
												"src": "9792:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10335:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10345:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10357:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10368:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10353:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10353:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10345:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10392:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10403:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10388:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10388:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "10411:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10417:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10407:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10407:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10381:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10381:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10381:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10437:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "10571:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10445:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10445:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10437:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10315:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10330:4:7",
														"type": ""
													}
												],
												"src": "10164:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10617:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10634:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10627:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10627:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10627:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10731:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10734:4:7",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10724:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10724:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10724:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10755:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10758:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10748:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10748:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10748:15:7"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10589:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10820:149:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10830:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10853:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10835:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10835:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "10830:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10864:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10887:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "10869:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10869:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "10864:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10898:17:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10910:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10913:1:7"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10906:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10906:9:7"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "10898:4:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10940:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "10942:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10942:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10942:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "10931:4:7"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10937:1:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10928:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "10928:11:7"
															},
															"nodeType": "YulIf",
															"src": "10925:37:7"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "10806:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "10809:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "10815:4:7",
														"type": ""
													}
												],
												"src": "10775:194:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11003:152:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11020:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11023:77:7",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11013:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11013:88:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11013:88:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11117:1:7",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11120:4:7",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11110:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11110:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11110:15:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11141:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11144:4:7",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11134:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11134:15:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11134:15:7"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "10975:180:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11203:143:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11213:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11236:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11218:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11218:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11213:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11247:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11270:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11252:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11252:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11247:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11294:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "11296:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11296:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11296:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11291:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11284:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11284:9:7"
															},
															"nodeType": "YulIf",
															"src": "11281:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11326:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11335:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11338:1:7"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "11331:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11331:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "11326:1:7"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11192:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11195:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "11201:1:7",
														"type": ""
													}
												],
												"src": "11161:185:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11396:147:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11406:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11429:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11411:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11411:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11406:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11440:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11463:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11445:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11445:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11440:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11474:16:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11485:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11488:1:7"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11481:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11481:9:7"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11474:3:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11514:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11516:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11516:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11516:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11506:1:7"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11509:3:7"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11503:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11503:10:7"
															},
															"nodeType": "YulIf",
															"src": "11500:36:7"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11383:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11386:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11392:3:7",
														"type": ""
													}
												],
												"src": "11352:191:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11597:362:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11607:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11630:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11612:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11612:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "11607:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11641:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11664:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11646:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11646:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "11641:1:7"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11675:28:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11698:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11701:1:7"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "11694:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11694:9:7"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "11679:11:7",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11712:41:7",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "11741:11:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "11723:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11723:30:7"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "11712:7:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11930:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11932:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11932:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11932:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "11863:1:7"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "11856:6:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11856:9:7"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "11886:1:7"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "11893:7:7"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "11902:1:7"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "11889:3:7"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "11889:15:7"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "11883:2:7"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11883:22:7"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "11836:2:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11836:83:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11816:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "11816:113:7"
															},
															"nodeType": "YulIf",
															"src": "11813:139:7"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11580:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11583:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "11589:7:7",
														"type": ""
													}
												],
												"src": "11549:410:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12008:190:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12018:33:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12045:5:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "12027:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12027:24:7"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "12018:5:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12141:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12143:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12143:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12143:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12066:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12073:66:7",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12063:2:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12063:77:7"
															},
															"nodeType": "YulIf",
															"src": "12060:103:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12172:20:7",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12183:5:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12190:1:7",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12179:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12179:13:7"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12172:3:7"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11994:5:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12004:3:7",
														"type": ""
													}
												],
												"src": "11965:233:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12310:58:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12332:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12340:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12328:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12328:14:7"
																	},
																	{
																		"hexValue": "43616e6e6f74207374616b652030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12344:16:7",
																		"type": "",
																		"value": "Cannot stake 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12321:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12321:40:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12321:40:7"
														}
													]
												},
												"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12302:6:7",
														"type": ""
													}
												],
												"src": "12204:164:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12520:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12530:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12596:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12601:2:7",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12537:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12537:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12530:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12702:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																	"nodeType": "YulIdentifier",
																	"src": "12613:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12613:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12613:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12715:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12726:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12731:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12722:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12722:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12715:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12508:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12516:3:7",
														"type": ""
													}
												],
												"src": "12374:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12917:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12927:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12939:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12950:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12935:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12935:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12927:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12974:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12985:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12970:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12993:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12999:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12989:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12989:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12963:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "12963:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12963:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13019:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13153:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13027:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13027:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13019:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12897:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12912:4:7",
														"type": ""
													}
												],
												"src": "12746:419:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13205:142:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13215:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13238:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13220:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13220:20:7"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "13215:1:7"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "13249:25:7",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13272:1:7"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "13254:17:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13254:20:7"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "13249:1:7"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13296:22:7",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "13298:16:7"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13298:18:7"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13298:18:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13293:1:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13286:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13286:9:7"
															},
															"nodeType": "YulIf",
															"src": "13283:35:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13327:14:7",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13336:1:7"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13339:1:7"
																	}
																],
																"functionName": {
																	"name": "mod",
																	"nodeType": "YulIdentifier",
																	"src": "13332:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13332:9:7"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "13327:1:7"
																}
															]
														}
													]
												},
												"name": "mod_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13194:1:7",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13197:1:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "13203:1:7",
														"type": ""
													}
												],
												"src": "13171:176:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13459:119:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13481:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13489:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13477:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13477:14:7"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13493:34:7",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13470:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13470:58:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13470:58:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13549:6:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13557:2:7",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13545:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13545:15:7"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13562:8:7",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13538:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13538:33:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13538:33:7"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13451:6:7",
														"type": ""
													}
												],
												"src": "13353:225:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13730:220:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13740:74:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13806:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13811:2:7",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13747:58:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13747:67:7"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13740:3:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13912:3:7"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "13823:88:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13823:93:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13823:93:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13925:19:7",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13936:3:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13941:2:7",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13932:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "13932:12:7"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13925:3:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13718:3:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13726:3:7",
														"type": ""
													}
												],
												"src": "13584:366:7"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14127:248:7",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14137:26:7",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14149:9:7"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14160:2:7",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14145:3:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14145:18:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14137:4:7"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14184:9:7"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14195:1:7",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14180:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14180:17:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14203:4:7"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14209:9:7"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14199:3:7"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14199:20:7"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14173:6:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14173:47:7"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14173:47:7"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14229:139:7",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14363:4:7"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14237:124:7"
																},
																"nodeType": "YulFunctionCall",
																"src": "14237:131:7"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14229:4:7"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14107:9:7",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14122:4:7",
														"type": ""
													}
												],
												"src": "13956:419:7"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$1101_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$1101_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$1101_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$1101__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$1101_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the own\")\n\n        mstore(add(memPtr, 32), \"er\")\n\n    }\n\n    function abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bool_t_bool__to_t_bool_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(memPtr) {\n\n        mstore(add(memPtr, 0), \"Adminable: caller is not the adm\")\n\n        mstore(add(memPtr, 32), \"in\")\n\n    }\n\n    function abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot stake 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function mod_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 7,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106102055760003560e01c80638107368b1161011a578063adc9772e116100ad578063d1af0c7d1161007c578063d1af0c7d146105de578063da4f8431146105fc578063db2e21bc1461062c578063df136d6514610636578063f2fde38b1461065457610205565b8063adc9772e14610556578063b79ec81214610572578063c8f33c91146105a2578063cdda56e0146105c057610205565b80638da5cb5b116100e95780638da5cb5b146104e05780639499c549146104fe5780639a5b17b01461051c578063a4c3b0911461053a57610205565b80638107368b14610434578063874c120b146104645780638aee8127146104945780638b876347146104b057610205565b80633e0a322d1161019d5780636917c5011161016c5780636917c501146103b2578063715018a6146103d057806378e97925146103da5780637a6fcee7146103f857806380faa57d1461041657610205565b80633e0a322d146103185780634dbdc4eb146103345780635cfa91f4146103645780636139d4b41461039457610205565b806318e20ecf116101d957806318e20ecf146102a457806324d7806c146102c05780633c4045cf146102f05780633d18b9121461030e57610205565b80628cc2621461020a5780630700037d1461023a5780630e15561a1461026a578063129ee21a14610288575b600080fd5b610224600480360381019061021f9190611c42565b610670565b6040516102319190611c88565b60405180910390f35b610254600480360381019061024f9190611c42565b6107dc565b6040516102619190611c88565b60405180910390f35b6102726107f4565b60405161027f9190611c88565b60405180910390f35b6102a2600480360381019061029d9190611ccf565b6107fa565b005b6102be60048036038101906102b99190611d5a565b610890565b005b6102da60048036038101906102d59190611c42565b610a01565b6040516102e79190611da9565b60405180910390f35b6102f8610a56565b6040516103059190611c88565b60405180910390f35b610316610a5c565b005b610332600480360381019061032d9190611dc4565b610dc1565b005b61034e60048036038101906103499190611dc4565b610e1a565b60405161035b9190611c88565b60405180910390f35b61037e60048036038101906103799190611dc4565b610eb1565b60405161038b9190611c88565b60405180910390f35b61039c610f75565b6040516103a99190611c88565b60405180910390f35b6103ba610f7b565b6040516103c79190611c88565b60405180910390f35b6103d8610f85565b005b6103e261100d565b6040516103ef9190611c88565b60405180910390f35b610400611013565b60405161040d9190611c88565b60405180910390f35b61041e611019565b60405161042b9190611c88565b60405180910390f35b61044e60048036038101906104499190611c42565b611021565b60405161045b9190611c88565b60405180910390f35b61047e60048036038101906104799190611dc4565b611039565b60405161048b9190611c88565b60405180910390f35b6104ae60048036038101906104a99190611c42565b6110c6565b005b6104ca60048036038101906104c59190611c42565b611186565b6040516104d79190611c88565b60405180910390f35b6104e861119e565b6040516104f59190611e00565b60405180910390f35b6105066111c8565b6040516105139190611c88565b60405180910390f35b6105246111d8565b6040516105319190611c88565b60405180910390f35b610554600480360381019061054f9190611e1b565b6111e0565b005b610570600480360381019061056b9190611e1b565b6112df565b005b61058c60048036038101906105879190611c42565b611653565b6040516105999190611c88565b60405180910390f35b6105aa61169c565b6040516105b79190611c88565b60405180910390f35b6105c86116a2565b6040516105d59190611c88565b60405180910390f35b6105e66116b2565b6040516105f39190611eba565b60405180910390f35b61061660048036038101906106119190611ed5565b6116d8565b6040516106239190611c88565b60405180910390f35b6106346118bf565b005b61063e61198b565b60405161064b9190611c88565b60405180910390f35b61066e60048036038101906106699190611c42565b611991565b005b6000806106bc600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054426116d8565b90506107d4600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546107c6670de0b6b3a76400006107b861076a600c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461075c88611039565b611a8890919063ffffffff16565b600f60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611a9e90919063ffffffff16565b611ab490919063ffffffff16565b611aca90919063ffffffff16565b915050919050565b60046020528060005260406000206000915090505481565b60055481565b610802611ae0565b73ffffffffffffffffffffffffffffffffffffffff1661082061119e565b73ffffffffffffffffffffffffffffffffffffffff1614610876576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086d90611f98565b60405180910390fd5b826007819055508160088190555080600981905550505050565b610898611ae0565b73ffffffffffffffffffffffffffffffffffffffff166108b661119e565b73ffffffffffffffffffffffffffffffffffffffff161461090c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090390611f98565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd88546000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff168360405161099f929190611fb8565b60405180910390a2806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b60085481565b6002805403610aa0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a979061202d565b60405180910390fd5b60028081905550336000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506006548111610afb5760065490505b6000610b0782426116d8565b9050610b1281611039565b600b81905550610b20611019565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610c3157610b6383610670565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000811115610db3576000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d2092919061204d565b6020604051808303816000875af1158015610d3f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d63919061208b565b503373ffffffffffffffffffffffffffffffffffffffff167fe2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e048682604051610daa9190611c88565b60405180910390a25b505050506001600281905550565b610dd1610dcc611ae0565b610a01565b610e10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e079061212a565b60405180910390fd5b8060068190555050565b60008060065403610e2f576006549050610eac565b6000600160075460065485610e449190612179565b610e4e91906121dc565b610e58919061220d565b90506000600554905060005b82811015610ea55760095460085483610e7d9190612241565b610e8791906121dc565b82610e929190612179565b915080610e9e90612283565b9050610e64565b5080925050505b919050565b60008060065403610ec6576005549050610f70565b600654821015610ed95760009050610f70565b6000600160075460065485610eee9190612179565b610ef891906121dc565b610f02919061220d565b90506000600554905060005b82811015610f4f5760095460085483610f279190612241565b610f3191906121dc565b82610f3c9190612179565b915080610f4890612283565b9050610f0e565b5060095460085482610f619190612241565b610f6b91906121dc565b925050505b919050565b60075481565b6000600e54905090565b610f8d611ae0565b73ffffffffffffffffffffffffffffffffffffffff16610fab61119e565b73ffffffffffffffffffffffffffffffffffffffff1614611001576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff890611f98565b60405180910390fd5b61100b6000611ae8565b565b60065481565b60095481565b600042905090565b600d6020528060005260406000206000915090505481565b600080600e540361104e57600b5490506110c1565b6110be6110ad600e5461109f670de0b6b3a764000061109187611083600a54611075611019565b611a8890919063ffffffff16565b611a9e90919063ffffffff16565b611a9e90919063ffffffff16565b611ab490919063ffffffff16565b600b54611aca90919063ffffffff16565b90505b919050565b6110ce611ae0565b73ffffffffffffffffffffffffffffffffffffffff166110ec61119e565b73ffffffffffffffffffffffffffffffffffffffff1614611142576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161113990611f98565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600c6020528060005260406000206000915090505481565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006111d342610eb1565b905090565b600042905090565b6111e8611ae0565b73ffffffffffffffffffffffffffffffffffffffff1661120661119e565b73ffffffffffffffffffffffffffffffffffffffff161461125c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161125390611f98565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b815260040161129792919061204d565b6020604051808303816000875af11580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da919061208b565b505050565b6002805403611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131a9061202d565b60405180910390fd5b6002808190555061133a611335611ae0565b610a01565b611379576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113709061212a565b60405180910390fd5b816000600d60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905060065481116113cd5760065490505b60006113d982426116d8565b90506113e481611039565b600b819055506113f2611019565b600a81905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16146115035761143583610670565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600b54600c60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555042600d60008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505b60008411611546576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161153d90612317565b60405180910390fd5b61155b84600e54611aca90919063ffffffff16565b600e819055506115b384600f60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611aca90919063ffffffff16565b600f60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508473ffffffffffffffffffffffffffffffffffffffff167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d8560405161163c9190611c88565b60405180910390a250505060016002819055505050565b6000600f60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600a5481565b60006116ad42611bae565b905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060065414806116ea5750818310155b806116f55750600083145b1561170357600090506118b9565b6006548310156117135760065492505b6000600754600754600654866117299190612179565b6117339190612337565b6007546117409190612179565b61174a9190612337565b905060006007548261175b87610eb1565b6117659190612241565b61176f91906121dc565b90506000600754600654866117849190612179565b61178e9190612337565b905060006007548261179f88610eb1565b6117a99190612241565b6117b391906121dc565b90508584886117c2919061220d565b11156117dc576117d187611bae565b9450505050506118b9565b6000848884896117ec9190612179565b6117f69190612179565b6118009190612179565b9050600061180d89610e1a565b9050600080600083905060006007548661182791906121dc565b905060005b8181101561187e57600954600854846118459190612241565b61184f91906121dc565b9350838361185d9190612179565b9250838561186b919061220d565b94508061187790612283565b905061182c565b508c8c61188b9190612179565b878a86611898919061220d565b6118a2919061220d565b6118ac91906121dc565b9a50505050505050505050505b92915050565b6118c7611ae0565b73ffffffffffffffffffffffffffffffffffffffff166118e561119e565b73ffffffffffffffffffffffffffffffffffffffff161461193b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193290611f98565b60405180910390fd5b61194361119e565b73ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015611988573d6000803e3d6000fd5b50565b600b5481565b611999611ae0565b73ffffffffffffffffffffffffffffffffffffffff166119b761119e565b73ffffffffffffffffffffffffffffffffffffffff1614611a0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0490611f98565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611a7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a73906123da565b60405180910390fd5b611a8581611ae8565b50565b60008183611a969190612179565b905092915050565b60008183611aac9190612241565b905092915050565b60008183611ac291906121dc565b905092915050565b60008183611ad8919061220d565b905092915050565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080611bba83610eb1565b90506000611bd360075483611ab490919063ffffffff16565b90508092505050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611c0f82611be4565b9050919050565b611c1f81611c04565b8114611c2a57600080fd5b50565b600081359050611c3c81611c16565b92915050565b600060208284031215611c5857611c57611bdf565b5b6000611c6684828501611c2d565b91505092915050565b6000819050919050565b611c8281611c6f565b82525050565b6000602082019050611c9d6000830184611c79565b92915050565b611cac81611c6f565b8114611cb757600080fd5b50565b600081359050611cc981611ca3565b92915050565b600080600060608486031215611ce857611ce7611bdf565b5b6000611cf686828701611cba565b9350506020611d0786828701611cba565b9250506040611d1886828701611cba565b9150509250925092565b60008115159050919050565b611d3781611d22565b8114611d4257600080fd5b50565b600081359050611d5481611d2e565b92915050565b60008060408385031215611d7157611d70611bdf565b5b6000611d7f85828601611c2d565b9250506020611d9085828601611d45565b9150509250929050565b611da381611d22565b82525050565b6000602082019050611dbe6000830184611d9a565b92915050565b600060208284031215611dda57611dd9611bdf565b5b6000611de884828501611cba565b91505092915050565b611dfa81611c04565b82525050565b6000602082019050611e156000830184611df1565b92915050565b60008060408385031215611e3257611e31611bdf565b5b6000611e4085828601611c2d565b9250506020611e5185828601611cba565b9150509250929050565b6000819050919050565b6000611e80611e7b611e7684611be4565b611e5b565b611be4565b9050919050565b6000611e9282611e65565b9050919050565b6000611ea482611e87565b9050919050565b611eb481611e99565b82525050565b6000602082019050611ecf6000830184611eab565b92915050565b60008060408385031215611eec57611eeb611bdf565b5b6000611efa85828601611cba565b9250506020611f0b85828601611cba565b9150509250929050565b600082825260208201905092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e60008201527f6572000000000000000000000000000000000000000000000000000000000000602082015250565b6000611f82602283611f15565b9150611f8d82611f26565b604082019050919050565b60006020820190508181036000830152611fb181611f75565b9050919050565b6000604082019050611fcd6000830185611d9a565b611fda6020830184611d9a565b9392505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000612017601f83611f15565b915061202282611fe1565b602082019050919050565b600060208201905081810360008301526120468161200a565b9050919050565b60006040820190506120626000830185611df1565b61206f6020830184611c79565b9392505050565b60008151905061208581611d2e565b92915050565b6000602082840312156120a1576120a0611bdf565b5b60006120af84828501612076565b91505092915050565b7f41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d60008201527f696e000000000000000000000000000000000000000000000000000000000000602082015250565b6000612114602283611f15565b915061211f826120b8565b604082019050919050565b6000602082019050818103600083015261214381612107565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061218482611c6f565b915061218f83611c6f565b92508282039050818111156121a7576121a661214a565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006121e782611c6f565b91506121f283611c6f565b925082612202576122016121ad565b5b828204905092915050565b600061221882611c6f565b915061222383611c6f565b925082820190508082111561223b5761223a61214a565b5b92915050565b600061224c82611c6f565b915061225783611c6f565b925082820261226581611c6f565b9150828204841483151761227c5761227b61214a565b5b5092915050565b600061228e82611c6f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036122c0576122bf61214a565b5b600182019050919050565b7f43616e6e6f74207374616b652030000000000000000000000000000000000000600082015250565b6000612301600e83611f15565b915061230c826122cb565b602082019050919050565b60006020820190508181036000830152612330816122f4565b9050919050565b600061234282611c6f565b915061234d83611c6f565b92508261235d5761235c6121ad565b5b828206905092915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006123c4602683611f15565b91506123cf82612368565b604082019050919050565b600060208201905081810360008301526123f3816123b7565b905091905056fea2646970667358221220692bdaf9ee9917b1d9b401d702e9d4dd62916c6ee400400f248a1c58e61e308764736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x205 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8107368B GT PUSH2 0x11A JUMPI DUP1 PUSH4 0xADC9772E GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD1AF0C7D GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xD1AF0C7D EQ PUSH2 0x5DE JUMPI DUP1 PUSH4 0xDA4F8431 EQ PUSH2 0x5FC JUMPI DUP1 PUSH4 0xDB2E21BC EQ PUSH2 0x62C JUMPI DUP1 PUSH4 0xDF136D65 EQ PUSH2 0x636 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x654 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0xADC9772E EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xB79EC812 EQ PUSH2 0x572 JUMPI DUP1 PUSH4 0xC8F33C91 EQ PUSH2 0x5A2 JUMPI DUP1 PUSH4 0xCDDA56E0 EQ PUSH2 0x5C0 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x4E0 JUMPI DUP1 PUSH4 0x9499C549 EQ PUSH2 0x4FE JUMPI DUP1 PUSH4 0x9A5B17B0 EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0xA4C3B091 EQ PUSH2 0x53A JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x8107368B EQ PUSH2 0x434 JUMPI DUP1 PUSH4 0x874C120B EQ PUSH2 0x464 JUMPI DUP1 PUSH4 0x8AEE8127 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0x8B876347 EQ PUSH2 0x4B0 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D GT PUSH2 0x19D JUMPI DUP1 PUSH4 0x6917C501 GT PUSH2 0x16C JUMPI DUP1 PUSH4 0x6917C501 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3D0 JUMPI DUP1 PUSH4 0x78E97925 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x7A6FCEE7 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x80FAA57D EQ PUSH2 0x416 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x3E0A322D EQ PUSH2 0x318 JUMPI DUP1 PUSH4 0x4DBDC4EB EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x5CFA91F4 EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x6139D4B4 EQ PUSH2 0x394 JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH4 0x18E20ECF GT PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x18E20ECF EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x24D7806C EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x3C4045CF EQ PUSH2 0x2F0 JUMPI DUP1 PUSH4 0x3D18B912 EQ PUSH2 0x30E JUMPI PUSH2 0x205 JUMP JUMPDEST DUP1 PUSH3 0x8CC262 EQ PUSH2 0x20A JUMPI DUP1 PUSH4 0x700037D EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xE15561A EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x129EE21A EQ PUSH2 0x288 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x224 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21F SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x670 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x254 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x272 PUSH2 0x7F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27F SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1CCF JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x890 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E7 SWAP2 SWAP1 PUSH2 0x1DA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F8 PUSH2 0xA56 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x316 PUSH2 0xA5C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x332 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32D SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xDC1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x34E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x349 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xE1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x35B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x37E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x379 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0xEB1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39C PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A9 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH2 0xF7B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3D8 PUSH2 0xF85 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E2 PUSH2 0x100D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x40D SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41E PUSH2 0x1019 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x42B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x449 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1021 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x479 SWAP2 SWAP1 PUSH2 0x1DC4 JUMP JUMPDEST PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x10C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1186 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D7 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E8 PUSH2 0x119E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F5 SWAP2 SWAP1 PUSH2 0x1E00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x506 PUSH2 0x11C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x513 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x524 PUSH2 0x11D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x554 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54F SWAP2 SWAP1 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x11E0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x570 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56B SWAP2 SWAP1 PUSH2 0x1E1B JUMP JUMPDEST PUSH2 0x12DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x58C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x587 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x599 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AA PUSH2 0x169C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B7 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5C8 PUSH2 0x16A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5D5 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E6 PUSH2 0x16B2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F3 SWAP2 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x616 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x611 SWAP2 SWAP1 PUSH2 0x1ED5 JUMP JUMPDEST PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x634 PUSH2 0x18BF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x63E PUSH2 0x198B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x64B SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x66E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x669 SWAP2 SWAP1 PUSH2 0x1C42 JUMP JUMPDEST PUSH2 0x1991 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x6BC PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD TIMESTAMP PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D4 PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x7C6 PUSH8 0xDE0B6B3A7640000 PUSH2 0x7B8 PUSH2 0x76A PUSH1 0xC PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x75C DUP9 PUSH2 0x1039 JUMP JUMPDEST PUSH2 0x1A88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1A9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1AB4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x802 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x820 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x876 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x86D SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x7 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x8 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 DUP2 SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH2 0x898 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8B6 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x90C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x903 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x99F SWAP3 SWAP2 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0xAA0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA97 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0xAFB JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0xB07 DUP3 TIMESTAMP PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH2 0xB12 DUP2 PUSH2 0x1039 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0xB20 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xC31 JUMPI PUSH2 0xB63 DUP4 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 GT ISZERO PUSH2 0xDB3 JUMPI PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD20 SWAP3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD3F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD63 SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486 DUP3 PUSH1 0x40 MLOAD PUSH2 0xDAA SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xDD1 PUSH2 0xDCC PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH2 0xE10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE07 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xE2F JUMPI PUSH1 0x6 SLOAD SWAP1 POP PUSH2 0xEAC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xE44 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0xE4E SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0xE58 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xEA5 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xE7D SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xE87 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST DUP3 PUSH2 0xE92 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xE9E SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP PUSH2 0xE64 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD SUB PUSH2 0xEC6 JUMPI PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP3 LT ISZERO PUSH2 0xED9 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xF70 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP6 PUSH2 0xEEE SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0xEF8 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST PUSH2 0xF02 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 SLOAD SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF4F JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP4 PUSH2 0xF27 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST DUP3 PUSH2 0xF3C SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xF48 SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP PUSH2 0xF0E JUMP JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP3 PUSH2 0xF61 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0xF6B SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xF8D PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFAB PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1001 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF8 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x100B PUSH1 0x0 PUSH2 0x1AE8 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0xE SLOAD SUB PUSH2 0x104E JUMPI PUSH1 0xB SLOAD SWAP1 POP PUSH2 0x10C1 JUMP JUMPDEST PUSH2 0x10BE PUSH2 0x10AD PUSH1 0xE SLOAD PUSH2 0x109F PUSH8 0xDE0B6B3A7640000 PUSH2 0x1091 DUP8 PUSH2 0x1083 PUSH1 0xA SLOAD PUSH2 0x1075 PUSH2 0x1019 JUMP JUMPDEST PUSH2 0x1A88 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1A9E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1AB4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10CE PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x10EC PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1142 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1139 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D3 TIMESTAMP PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x11E8 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1206 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x125C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1253 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1297 SWAP3 SWAP2 SWAP1 PUSH2 0x204D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12DA SWAP2 SWAP1 PUSH2 0x208B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131A SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP PUSH2 0x133A PUSH2 0x1335 PUSH2 0x1AE0 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST PUSH2 0x1379 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1370 SWAP1 PUSH2 0x212A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x6 SLOAD DUP2 GT PUSH2 0x13CD JUMPI PUSH1 0x6 SLOAD SWAP1 POP JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP3 TIMESTAMP PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP PUSH2 0x13E4 DUP2 PUSH2 0x1039 JUMP JUMPDEST PUSH1 0xB DUP2 SWAP1 SSTORE POP PUSH2 0x13F2 PUSH2 0x1019 JUMP JUMPDEST PUSH1 0xA DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1503 JUMPI PUSH2 0x1435 DUP4 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0xB SLOAD PUSH1 0xC PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 DUP5 GT PUSH2 0x1546 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x153D SWAP1 PUSH2 0x2317 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x155B DUP5 PUSH1 0xE SLOAD PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH2 0x15B3 DUP5 PUSH1 0xF PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1ACA SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0xF PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D DUP6 PUSH1 0x40 MLOAD PUSH2 0x163C SWAP2 SWAP1 PUSH2 0x1C88 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16AD TIMESTAMP PUSH2 0x1BAE JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x6 SLOAD EQ DUP1 PUSH2 0x16EA JUMPI POP DUP2 DUP4 LT ISZERO JUMPDEST DUP1 PUSH2 0x16F5 JUMPI POP PUSH1 0x0 DUP4 EQ JUMPDEST ISZERO PUSH2 0x1703 JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x6 SLOAD DUP4 LT ISZERO PUSH2 0x1713 JUMPI PUSH1 0x6 SLOAD SWAP3 POP JUMPDEST PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1729 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x174A SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x175B DUP8 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x1765 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x176F SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD PUSH1 0x6 SLOAD DUP7 PUSH2 0x1784 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x178E SWAP2 SWAP1 PUSH2 0x2337 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP3 PUSH2 0x179F DUP9 PUSH2 0xEB1 JUMP JUMPDEST PUSH2 0x17A9 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x17B3 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP DUP6 DUP5 DUP9 PUSH2 0x17C2 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST GT ISZERO PUSH2 0x17DC JUMPI PUSH2 0x17D1 DUP8 PUSH2 0x1BAE JUMP JUMPDEST SWAP5 POP POP POP POP POP PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP9 DUP5 DUP10 PUSH2 0x17EC SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x17F6 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST PUSH2 0x1800 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x180D DUP10 PUSH2 0xE1A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 SWAP1 POP PUSH1 0x0 PUSH1 0x7 SLOAD DUP7 PUSH2 0x1827 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x187E JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD DUP5 PUSH2 0x1845 SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST PUSH2 0x184F SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP4 POP DUP4 DUP4 PUSH2 0x185D SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP3 POP DUP4 DUP6 PUSH2 0x186B SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP5 POP DUP1 PUSH2 0x1877 SWAP1 PUSH2 0x2283 JUMP JUMPDEST SWAP1 POP PUSH2 0x182C JUMP JUMPDEST POP DUP13 DUP13 PUSH2 0x188B SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST DUP8 DUP11 DUP7 PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x18A2 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST PUSH2 0x18AC SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x18C7 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x18E5 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x193B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1932 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1943 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1988 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1999 PUSH2 0x1AE0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x19B7 PUSH2 0x119E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1A0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A04 SWAP1 PUSH2 0x1F98 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A73 SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A85 DUP2 PUSH2 0x1AE8 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1A96 SWAP2 SWAP1 PUSH2 0x2179 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AAC SWAP2 SWAP1 PUSH2 0x2241 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AC2 SWAP2 SWAP1 PUSH2 0x21DC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1AD8 SWAP2 SWAP1 PUSH2 0x220D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1BBA DUP4 PUSH2 0xEB1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1BD3 PUSH1 0x7 SLOAD DUP4 PUSH2 0x1AB4 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0F DUP3 PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C1F DUP2 PUSH2 0x1C04 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C2A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C3C DUP2 PUSH2 0x1C16 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C58 JUMPI PUSH2 0x1C57 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C66 DUP5 DUP3 DUP6 ADD PUSH2 0x1C2D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C82 DUP2 PUSH2 0x1C6F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C9D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1C79 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CAC DUP2 PUSH2 0x1C6F JUMP JUMPDEST DUP2 EQ PUSH2 0x1CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CC9 DUP2 PUSH2 0x1CA3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1CE8 JUMPI PUSH2 0x1CE7 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CF6 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1D07 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1D18 DUP7 DUP3 DUP8 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D37 DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D54 DUP2 PUSH2 0x1D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D71 JUMPI PUSH2 0x1D70 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D7F DUP6 DUP3 DUP7 ADD PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D90 DUP6 DUP3 DUP7 ADD PUSH2 0x1D45 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA3 DUP2 PUSH2 0x1D22 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DDA JUMPI PUSH2 0x1DD9 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1DE8 DUP5 DUP3 DUP6 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1DFA DUP2 PUSH2 0x1C04 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E15 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1DF1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E32 JUMPI PUSH2 0x1E31 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1E40 DUP6 DUP3 DUP7 ADD PUSH2 0x1C2D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E51 DUP6 DUP3 DUP7 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E80 PUSH2 0x1E7B PUSH2 0x1E76 DUP5 PUSH2 0x1BE4 JUMP JUMPDEST PUSH2 0x1E5B JUMP JUMPDEST PUSH2 0x1BE4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E92 DUP3 PUSH2 0x1E65 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 DUP3 PUSH2 0x1E87 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB4 DUP2 PUSH2 0x1E99 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1ECF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1EAB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1EEC JUMPI PUSH2 0x1EEB PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EFA DUP6 DUP3 DUP7 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F0B DUP6 DUP3 DUP7 ADD PUSH2 0x1CBA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6572000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F82 PUSH1 0x22 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F8D DUP3 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FB1 DUP2 PUSH2 0x1F75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1FCD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1D9A JUMP JUMPDEST PUSH2 0x1FDA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1D9A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2017 PUSH1 0x1F DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x2022 DUP3 PUSH2 0x1FE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2046 DUP2 PUSH2 0x200A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2062 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x206F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1C79 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x2085 DUP2 PUSH2 0x1D2E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x1BDF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20AF DUP5 DUP3 DUP6 ADD PUSH2 0x2076 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2114 PUSH1 0x22 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x211F DUP3 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2143 DUP2 PUSH2 0x2107 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2184 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x218F DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x21A7 JUMPI PUSH2 0x21A6 PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x21E7 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x21F2 DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2202 JUMPI PUSH2 0x2201 PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2218 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x2223 DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x223B JUMPI PUSH2 0x223A PUSH2 0x214A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x224C DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x2257 DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2265 DUP2 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x227C JUMPI PUSH2 0x227B PUSH2 0x214A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x228E DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x22C0 JUMPI PUSH2 0x22BF PUSH2 0x214A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207374616B652030000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2301 PUSH1 0xE DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x230C DUP3 PUSH2 0x22CB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2330 DUP2 PUSH2 0x22F4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2342 DUP3 PUSH2 0x1C6F JUMP JUMPDEST SWAP2 POP PUSH2 0x234D DUP4 PUSH2 0x1C6F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x235D JUMPI PUSH2 0x235C PUSH2 0x21AD JUMP JUMPDEST JUMPDEST DUP3 DUP3 MOD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23C4 PUSH1 0x26 DUP4 PUSH2 0x1F15 JUMP JUMPDEST SWAP2 POP PUSH2 0x23CF DUP3 PUSH2 0x2368 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x23F3 DUP2 PUSH2 0x23B7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH10 0x2BDAF9EE9917B1D9B401 0xD7 MUL 0xE9 0xD4 0xDD PUSH3 0x916C6E 0xE4 STOP BLOCKHASH 0xF 0x24 DUP11 SHR PC 0xE6 0x1E ADDRESS DUP8 PUSH5 0x736F6C6343 STOP ADDMOD GT STOP CALLER ",
							"sourceMap": "371:7261:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4773:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;500:42;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;551:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1682:292;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1642:184:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1004:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;683:40:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6811:305;;;:::i;:::-;;1982:90;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3523:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2524:565;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2080:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1123:103:0;;;:::i;:::-;;605:24:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;730:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4302:107;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;926:53;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4417:348;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7124:105;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;862:57;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;909:87:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2402:114:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2181:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7486:143;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6505:294;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2283:111;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;782:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3947:115;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;467:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5112:1383;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7363:115;;;:::i;:::-;;818:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1234:201:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4773:296:1;4827:7;4847:12;4862:68;4885:18;:27;4904:7;4885:27;;;;;;;;;;;;;;;;4914:15;4862:22;:68::i;:::-;4847:83;;4948:113;5044:7;:16;5052:7;5044:16;;;;;;;;;;;;;;;;4948:91;5034:4;4948:81;4971:57;4996:22;:31;5019:7;4996:31;;;;;;;;;;;;;;;;4971:20;4986:4;4971:14;:20::i;:::-;:24;;:57;;;;:::i;:::-;4948:9;:18;4958:7;4948:18;;;;;;;;;;;;;;;;:22;;:81;;;;:::i;:::-;:85;;:91;;;;:::i;:::-;:95;;:113;;;;:::i;:::-;4941:120;;;4773:296;;;:::o;500:42::-;;;;;;;;;;;;;;;;;:::o;551:47::-;;;;:::o;1682:292::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1835:13:1::1;1820:12;:28;;;;1883:22;1859:21;:46;;;;1942:24;1916:23;:50;;;;1682:292:::0;;;:::o;1642:184:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1755:5:::1;1737:48;;;1763:7;:14:::0;1771:5:::1;1763:14;;;;;;;;;;;;;;;;;;;;;;;;;1779:5;1737:48;;;;;;;:::i;:::-;;;;;;;;1813:5;1796:7;:14:::0;1804:5:::1;1796:14;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;;;;;;;1642:184:::0;;:::o;1004:111::-;1067:4;1091:7;:16;1099:7;1091:16;;;;;;;;;;;;;;;;;;;;;;;;;1084:23;;1004:111;;;:::o;683:40:1:-;;;;:::o;6811:305::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;6867:10:1::1;1131:12;1146:18;:27;1165:7;1146:27;;;;;;;;;;;;;;;;1131:42;;1195:9;;1187:4;:17;1184:65;;1228:9;;1221:16;;1184:65;1259:12;1274:45;1297:4;1303:15;1274:22;:45::i;:::-;1259:60;;1353:20;1368:4;1353:14;:20::i;:::-;1330;:43;;;;1401:26;:24;:26::i;:::-;1384:14;:43;;;;1461:1;1442:21;;:7;:21;;;1438:217;;1499:15;1506:7;1499:6;:15::i;:::-;1480:7;:16;1488:7;1480:16;;;;;;;;;;;;;;;:34;;;;1563:20;;1529:22;:31;1552:7;1529:31;;;;;;;;;;;;;;;:54;;;;1628:15;1598:18;:27;1617:7;1598:27;;;;;;;;;;;;;;;:45;;;;1438:217;6890:14:::2;6907:7;:19;6915:10;6907:19;;;;;;;;;;;;;;;;6890:36;;6950:1;6941:6;:10;6937:172;;;6990:1;6968:7;:19;6976:10;6968:19;;;;;;;;;;;;;;;:23;;;;7006:12;;;;;;;;;;;:21;;;7028:10;7040:6;7006:41;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7078:10;7067:30;;;7090:6;7067:30;;;;;;:::i;:::-;;;;;;;;6937:172;6879:237;1120:554:::1;;2484:1:2;1701::::0;2628:7;:22;;;;6811:305:1:o;1982:90::-;821:21:0;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2060:4:1::1;2048:9;:16;;;;1982:90:::0;:::o;3523:416::-;3581:7;3617:1;3604:9;;:14;3601:62;;3642:9;;3635:16;;;;3601:62;3673:13;3725:1;3710:12;;3697:9;;3690:4;:16;;;;:::i;:::-;3689:33;;;;:::i;:::-;:37;;;;:::i;:::-;3673:53;;3737:13;3753:12;;3737:28;;3780:9;3776:133;3799:5;3795:1;:9;3776:133;;;3874:23;;3850:21;;3842:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;3834:5;:63;;;;:::i;:::-;3826:71;;3806:3;;;;:::i;:::-;;;3776:133;;;;3926:5;3919:12;;;;3523:416;;;;:::o;2524:565::-;2582:7;2618:1;2605:9;;:14;2602:65;;2643:12;;2636:19;;;;2602:65;2687:9;;2680:4;:16;2677:56;;;2720:1;2713:8;;;;2677:56;2743:13;2795:1;2780:12;;2767:9;;2760:4;:16;;;;:::i;:::-;2759:33;;;;:::i;:::-;:37;;;;:::i;:::-;2743:53;;2807:13;2823:12;;2807:28;;2850:9;2846:133;2869:5;2865:1;:9;2846:133;;;2944:23;;2920:21;;2912:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;2904:5;:63;;;;:::i;:::-;2896:71;;2876:3;;;;:::i;:::-;;;2846:133;;;;3058:23;;3034:21;;3026:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;3019:62;;;;2524:565;;;;:::o;636:40::-;;;;:::o;2080:93::-;2126:7;2153:12;;2146:19;;2080:93;:::o;1123:103:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1188:30:::1;1215:1;1188:18;:30::i;:::-;1123:103::o:0;605:24:1:-;;;;:::o;730:45::-;;;;:::o;4302:107::-;4359:7;4386:15;4379:22;;4302:107;:::o;926:53::-;;;;;;;;;;;;;;;;;:::o;4417:348::-;4482:7;4522:1;4506:12;;:17;4502:77;;4547:20;;4540:27;;;;4502:77;4609:148;4652:90;4729:12;;4652:72;4719:4;4652:62;4703:10;4652:46;4683:14;;4652:26;:24;:26::i;:::-;:30;;:46;;;;:::i;:::-;:50;;:62;;;;:::i;:::-;:66;;:72;;;;:::i;:::-;:76;;:90;;;;:::i;:::-;4609:20;;:24;;:148;;;;:::i;:::-;4589:168;;4417:348;;;;:::o;7124:105::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7215:5:1::1;7193:12;;:28;;;;;;;;;;;;;;;;;;7124:105:::0;:::o;862:57::-;;;;;;;;;;;;;;;;;:::o;909:87:0:-;955:7;982:6;;;;;;;;;;;975:13;;909:87;:::o;2402:114:1:-;2451:7;2478:30;2492:15;2478:13;:30::i;:::-;2471:37;;2402:114;:::o;2181:94::-;2225:7;2252:15;2245:22;;2181:94;:::o;7486:143::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7586:5:1::1;7579:22;;;7602:10;7614:6;7579:42;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7486:143:::0;;:::o;6505:294::-;1744:1:2;2325:7;;:19;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;821:21:0::1;829:12;:10;:12::i;:::-;821:7;:21::i;:::-;813:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;6595:4:1::2;1131:12;1146:18;:27;1165:7;1146:27;;;;;;;;;;;;;;;;1131:42;;1195:9;;1187:4;:17;1184:65;;1228:9;;1221:16;;1184:65;1259:12;1274:45;1297:4;1303:15;1274:22;:45::i;:::-;1259:60;;1353:20;1368:4;1353:14;:20::i;:::-;1330;:43;;;;1401:26;:24;:26::i;:::-;1384:14;:43;;;;1461:1;1442:21;;:7;:21;;;1438:217;;1499:15;1506:7;1499:6;:15::i;:::-;1480:7;:16;1488:7;1480:16;;;;;;;;;;;;;;;:34;;;;1563:20;;1529:22;:31;1552:7;1529:31;;;;;;;;;;;;;;;:54;;;;1628:15;1598:18;:27;1617:7;1598:27;;;;;;;;;;;;;;;:45;;;;1438:217;6629:1:::3;6620:6;:10;6612:37;;;;;;;;;;;;:::i;:::-;;;;;;;;;6675:24;6692:6;6675:12;;:16;;:24;;;;:::i;:::-;6660:12;:39;;;;6728:27;6748:6;6728:9;:15;6738:4;6728:15;;;;;;;;;;;;;;;;:19;;:27;;;;:::i;:::-;6710:9;:15;6720:4;6710:15;;;;;;;;;;;;;;;:45;;;;6778:4;6771:20;;;6784:6;6771:20;;;;;;:::i;:::-;;;;;;;;1120:554:::2;;892:1:0;1701::2::0;2628:7;:22;;;;6505:294:1;;:::o;2283:111::-;2341:7;2368:9;:18;2378:7;2368:18;;;;;;;;;;;;;;;;2361:25;;2283:111;;;:::o;782:29::-;;;;:::o;3947:115::-;3996:7;4023:31;4038:15;4023:14;:31::i;:::-;4016:38;;3947:115;:::o;467:26::-;;;;;;;;;;;;;:::o;5112:1383::-;5202:7;5247:1;5234:9;;:14;:39;;;;5264:9;5252:8;:21;;5234:39;:56;;;;5289:1;5277:8;:13;5234:56;5231:96;;;5314:1;5307:8;;;;5231:96;5353:9;;5342:8;:20;5339:72;;;5390:9;;5379:20;;5339:72;5423:20;5503:12;;5487;;5474:9;;5463:8;:20;;;;:::i;:::-;5462:37;;;;:::i;:::-;5447:12;;:52;;;;:::i;:::-;5446:69;;;;:::i;:::-;5423:92;;5526:18;5588:12;;5573;5547:23;5561:8;5547:13;:23::i;:::-;:38;;;;:::i;:::-;:53;;;;:::i;:::-;5526:74;;5613:21;5663:12;;5650:9;;5638;:21;;;;:::i;:::-;5637:38;;;;:::i;:::-;5613:62;;5686:19;5751:12;;5735:13;5708:24;5722:9;5708:13;:24::i;:::-;:40;;;;:::i;:::-;:55;;;;:::i;:::-;5686:77;;5805:9;5790:12;5779:8;:23;;;;:::i;:::-;:35;5776:98;;;5838:24;5853:8;5838:14;:24::i;:::-;5831:31;;;;;;;;5776:98;5886:19;5947:12;5936:8;5920:13;5908:9;:25;;;;:::i;:::-;:36;;;;:::i;:::-;:51;;;;:::i;:::-;5886:73;;5970:19;5992:23;6006:8;5992:13;:23::i;:::-;5970:45;;6027:22;6064:18;6097:13;6113:11;6097:27;;6135:13;6165:12;;6151:11;:26;;;;:::i;:::-;6135:42;;6192:9;6188:214;6211:5;6207:1;:9;6188:214;;;6283:23;;6259:21;;6251:5;:29;;;;:::i;:::-;:55;;;;:::i;:::-;6238:68;;6337:10;6329:5;:18;;;;:::i;:::-;6321:26;;6380:10;6362:28;;;;;:::i;:::-;;;6218:3;;;;:::i;:::-;;;6188:214;;;;6478:8;6466:9;:20;;;;:::i;:::-;6450:11;6437:10;6420:14;:27;;;;:::i;:::-;:41;;;;:::i;:::-;6419:68;;;;:::i;:::-;6412:75;;;;;;;;;;;;5112:1383;;;;;:::o;7363:115::-;702:12:0;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;7430:7:1::1;:5;:7::i;:::-;7422:25;;:48;7448:21;7422:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;7363:115::o:0;818:35::-;;;;:::o;1234:201:0:-;702:12;:10;:12::i;:::-;691:23;;:7;:5;:7::i;:::-;:23;;;683:70;;;;;;;;;;;;:::i;:::-;;;;;;;;;1343:1:::1;1323:22;;:8;:22;;::::0;1315:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;1399:28;1418:8;1399:18;:28::i;:::-;1234:201:::0;:::o;3108:96:6:-;3166:7;3196:1;3192;:5;;;;:::i;:::-;3185:12;;3108:96;;;;:::o;3451:::-;3509:7;3539:1;3535;:5;;;;:::i;:::-;3528:12;;3451:96;;;;:::o;3836:::-;3894:7;3924:1;3920;:5;;;;:::i;:::-;3913:12;;3836:96;;;;:::o;2741:::-;2799:7;2829:1;2825;:5;;;;:::i;:::-;2818:12;;2741:96;;;;:::o;63:98:0:-;116:7;143:10;136:17;;63:98;:::o;1443:191::-;1517:16;1536:6;;;;;;;;;;;1517:25;;1562:8;1553:6;;:17;;;;;;;;;;;;;;;;;;1617:8;1586:40;;1607:8;1586:40;;;;;;;;;;;;1506:128;1443:191;:::o;4070:222:1:-;4130:7;4150:21;4174:19;4188:4;4174:13;:19::i;:::-;4150:43;;4204:18;4225:31;4243:12;;4225:13;:17;;:31;;;;:::i;:::-;4204:52;;4274:10;4267:17;;;;4070:222;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:122::-;1684:24;1702:5;1684:24;:::i;:::-;1677:5;1674:35;1664:63;;1723:1;1720;1713:12;1664:63;1611:122;:::o;1739:139::-;1785:5;1823:6;1810:20;1801:29;;1839:33;1866:5;1839:33;:::i;:::-;1739:139;;;;:::o;1884:619::-;1961:6;1969;1977;2026:2;2014:9;2005:7;2001:23;1997:32;1994:119;;;2032:79;;:::i;:::-;1994:119;2152:1;2177:53;2222:7;2213:6;2202:9;2198:22;2177:53;:::i;:::-;2167:63;;2123:117;2279:2;2305:53;2350:7;2341:6;2330:9;2326:22;2305:53;:::i;:::-;2295:63;;2250:118;2407:2;2433:53;2478:7;2469:6;2458:9;2454:22;2433:53;:::i;:::-;2423:63;;2378:118;1884:619;;;;;:::o;2509:90::-;2543:7;2586:5;2579:13;2572:21;2561:32;;2509:90;;;:::o;2605:116::-;2675:21;2690:5;2675:21;:::i;:::-;2668:5;2665:32;2655:60;;2711:1;2708;2701:12;2655:60;2605:116;:::o;2727:133::-;2770:5;2808:6;2795:20;2786:29;;2824:30;2848:5;2824:30;:::i;:::-;2727:133;;;;:::o;2866:468::-;2931:6;2939;2988:2;2976:9;2967:7;2963:23;2959:32;2956:119;;;2994:79;;:::i;:::-;2956:119;3114:1;3139:53;3184:7;3175:6;3164:9;3160:22;3139:53;:::i;:::-;3129:63;;3085:117;3241:2;3267:50;3309:7;3300:6;3289:9;3285:22;3267:50;:::i;:::-;3257:60;;3212:115;2866:468;;;;;:::o;3340:109::-;3421:21;3436:5;3421:21;:::i;:::-;3416:3;3409:34;3340:109;;:::o;3455:210::-;3542:4;3580:2;3569:9;3565:18;3557:26;;3593:65;3655:1;3644:9;3640:17;3631:6;3593:65;:::i;:::-;3455:210;;;;:::o;3671:329::-;3730:6;3779:2;3767:9;3758:7;3754:23;3750:32;3747:119;;;3785:79;;:::i;:::-;3747:119;3905:1;3930:53;3975:7;3966:6;3955:9;3951:22;3930:53;:::i;:::-;3920:63;;3876:117;3671:329;;;;:::o;4006:118::-;4093:24;4111:5;4093:24;:::i;:::-;4088:3;4081:37;4006:118;;:::o;4130:222::-;4223:4;4261:2;4250:9;4246:18;4238:26;;4274:71;4342:1;4331:9;4327:17;4318:6;4274:71;:::i;:::-;4130:222;;;;:::o;4358:474::-;4426:6;4434;4483:2;4471:9;4462:7;4458:23;4454:32;4451:119;;;4489:79;;:::i;:::-;4451:119;4609:1;4634:53;4679:7;4670:6;4659:9;4655:22;4634:53;:::i;:::-;4624:63;;4580:117;4736:2;4762:53;4807:7;4798:6;4787:9;4783:22;4762:53;:::i;:::-;4752:63;;4707:118;4358:474;;;;;:::o;4838:60::-;4866:3;4887:5;4880:12;;4838:60;;;:::o;4904:142::-;4954:9;4987:53;5005:34;5014:24;5032:5;5014:24;:::i;:::-;5005:34;:::i;:::-;4987:53;:::i;:::-;4974:66;;4904:142;;;:::o;5052:126::-;5102:9;5135:37;5166:5;5135:37;:::i;:::-;5122:50;;5052:126;;;:::o;5184:141::-;5249:9;5282:37;5313:5;5282:37;:::i;:::-;5269:50;;5184:141;;;:::o;5331:161::-;5433:52;5479:5;5433:52;:::i;:::-;5428:3;5421:65;5331:161;;:::o;5498:252::-;5606:4;5644:2;5633:9;5629:18;5621:26;;5657:86;5740:1;5729:9;5725:17;5716:6;5657:86;:::i;:::-;5498:252;;;;:::o;5756:474::-;5824:6;5832;5881:2;5869:9;5860:7;5856:23;5852:32;5849:119;;;5887:79;;:::i;:::-;5849:119;6007:1;6032:53;6077:7;6068:6;6057:9;6053:22;6032:53;:::i;:::-;6022:63;;5978:117;6134:2;6160:53;6205:7;6196:6;6185:9;6181:22;6160:53;:::i;:::-;6150:63;;6105:118;5756:474;;;;;:::o;6236:169::-;6320:11;6354:6;6349:3;6342:19;6394:4;6389:3;6385:14;6370:29;;6236:169;;;;:::o;6411:221::-;6551:34;6547:1;6539:6;6535:14;6528:58;6620:4;6615:2;6607:6;6603:15;6596:29;6411:221;:::o;6638:366::-;6780:3;6801:67;6865:2;6860:3;6801:67;:::i;:::-;6794:74;;6877:93;6966:3;6877:93;:::i;:::-;6995:2;6990:3;6986:12;6979:19;;6638:366;;;:::o;7010:419::-;7176:4;7214:2;7203:9;7199:18;7191:26;;7263:9;7257:4;7253:20;7249:1;7238:9;7234:17;7227:47;7291:131;7417:4;7291:131;:::i;:::-;7283:139;;7010:419;;;:::o;7435:308::-;7544:4;7582:2;7571:9;7567:18;7559:26;;7595:65;7657:1;7646:9;7642:17;7633:6;7595:65;:::i;:::-;7670:66;7732:2;7721:9;7717:18;7708:6;7670:66;:::i;:::-;7435:308;;;;;:::o;7749:181::-;7889:33;7885:1;7877:6;7873:14;7866:57;7749:181;:::o;7936:366::-;8078:3;8099:67;8163:2;8158:3;8099:67;:::i;:::-;8092:74;;8175:93;8264:3;8175:93;:::i;:::-;8293:2;8288:3;8284:12;8277:19;;7936:366;;;:::o;8308:419::-;8474:4;8512:2;8501:9;8497:18;8489:26;;8561:9;8555:4;8551:20;8547:1;8536:9;8532:17;8525:47;8589:131;8715:4;8589:131;:::i;:::-;8581:139;;8308:419;;;:::o;8733:332::-;8854:4;8892:2;8881:9;8877:18;8869:26;;8905:71;8973:1;8962:9;8958:17;8949:6;8905:71;:::i;:::-;8986:72;9054:2;9043:9;9039:18;9030:6;8986:72;:::i;:::-;8733:332;;;;;:::o;9071:137::-;9125:5;9156:6;9150:13;9141:22;;9172:30;9196:5;9172:30;:::i;:::-;9071:137;;;;:::o;9214:345::-;9281:6;9330:2;9318:9;9309:7;9305:23;9301:32;9298:119;;;9336:79;;:::i;:::-;9298:119;9456:1;9481:61;9534:7;9525:6;9514:9;9510:22;9481:61;:::i;:::-;9471:71;;9427:125;9214:345;;;;:::o;9565:221::-;9705:34;9701:1;9693:6;9689:14;9682:58;9774:4;9769:2;9761:6;9757:15;9750:29;9565:221;:::o;9792:366::-;9934:3;9955:67;10019:2;10014:3;9955:67;:::i;:::-;9948:74;;10031:93;10120:3;10031:93;:::i;:::-;10149:2;10144:3;10140:12;10133:19;;9792:366;;;:::o;10164:419::-;10330:4;10368:2;10357:9;10353:18;10345:26;;10417:9;10411:4;10407:20;10403:1;10392:9;10388:17;10381:47;10445:131;10571:4;10445:131;:::i;:::-;10437:139;;10164:419;;;:::o;10589:180::-;10637:77;10634:1;10627:88;10734:4;10731:1;10724:15;10758:4;10755:1;10748:15;10775:194;10815:4;10835:20;10853:1;10835:20;:::i;:::-;10830:25;;10869:20;10887:1;10869:20;:::i;:::-;10864:25;;10913:1;10910;10906:9;10898:17;;10937:1;10931:4;10928:11;10925:37;;;10942:18;;:::i;:::-;10925:37;10775:194;;;;:::o;10975:180::-;11023:77;11020:1;11013:88;11120:4;11117:1;11110:15;11144:4;11141:1;11134:15;11161:185;11201:1;11218:20;11236:1;11218:20;:::i;:::-;11213:25;;11252:20;11270:1;11252:20;:::i;:::-;11247:25;;11291:1;11281:35;;11296:18;;:::i;:::-;11281:35;11338:1;11335;11331:9;11326:14;;11161:185;;;;:::o;11352:191::-;11392:3;11411:20;11429:1;11411:20;:::i;:::-;11406:25;;11445:20;11463:1;11445:20;:::i;:::-;11440:25;;11488:1;11485;11481:9;11474:16;;11509:3;11506:1;11503:10;11500:36;;;11516:18;;:::i;:::-;11500:36;11352:191;;;;:::o;11549:410::-;11589:7;11612:20;11630:1;11612:20;:::i;:::-;11607:25;;11646:20;11664:1;11646:20;:::i;:::-;11641:25;;11701:1;11698;11694:9;11723:30;11741:11;11723:30;:::i;:::-;11712:41;;11902:1;11893:7;11889:15;11886:1;11883:22;11863:1;11856:9;11836:83;11813:139;;11932:18;;:::i;:::-;11813:139;11597:362;11549:410;;;;:::o;11965:233::-;12004:3;12027:24;12045:5;12027:24;:::i;:::-;12018:33;;12073:66;12066:5;12063:77;12060:103;;12143:18;;:::i;:::-;12060:103;12190:1;12183:5;12179:13;12172:20;;11965:233;;;:::o;12204:164::-;12344:16;12340:1;12332:6;12328:14;12321:40;12204:164;:::o;12374:366::-;12516:3;12537:67;12601:2;12596:3;12537:67;:::i;:::-;12530:74;;12613:93;12702:3;12613:93;:::i;:::-;12731:2;12726:3;12722:12;12715:19;;12374:366;;;:::o;12746:419::-;12912:4;12950:2;12939:9;12935:18;12927:26;;12999:9;12993:4;12989:20;12985:1;12974:9;12970:17;12963:47;13027:131;13153:4;13027:131;:::i;:::-;13019:139;;12746:419;;;:::o;13171:176::-;13203:1;13220:20;13238:1;13220:20;:::i;:::-;13215:25;;13254:20;13272:1;13254:20;:::i;:::-;13249:25;;13293:1;13283:35;;13298:18;;:::i;:::-;13283:35;13339:1;13336;13332:9;13327:14;;13171:176;;;;:::o;13353:225::-;13493:34;13489:1;13481:6;13477:14;13470:58;13562:8;13557:2;13549:6;13545:15;13538:33;13353:225;:::o;13584:366::-;13726:3;13747:67;13811:2;13806:3;13747:67;:::i;:::-;13740:74;;13823:93;13912:3;13823:93;:::i;:::-;13941:2;13936:3;13932:12;13925:19;;13584:366;;;:::o;13956:419::-;14122:4;14160:2;14149:9;14145:18;14137:26;;14209:9;14203:4;14199:20;14195:1;14184:9;14180:17;14173:47;14237:131;14363:4;14237:131;:::i;:::-;14229:139;;13956:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1852800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"curTime()": "425",
								"earned(address)": "infinite",
								"emergencyWithdraw()": "infinite",
								"emergencyWithdrawToken(address,uint256)": "infinite",
								"getCurRewardPool()": "infinite",
								"getCurRewardRate()": "infinite",
								"getRemainPool(uint256)": "infinite",
								"getReward()": "infinite",
								"getRewardPool(uint256)": "infinite",
								"getTimeWeightedAveRate(uint256,uint256)": "infinite",
								"isAdmin(address)": "2951",
								"lastTimeRewardApplicable()": "469",
								"lastUpdateTime()": "2518",
								"modificationAdmin(address,bool)": "infinite",
								"owner()": "2567",
								"powersOf(address)": "2908",
								"rateInterval()": "2541",
								"rateIntervalDenominator()": "2540",
								"rateIntervalNumerator()": "2519",
								"renounceOwnership()": "30441",
								"rewardPerToken(uint256)": "infinite",
								"rewardPerTokenStored()": "2539",
								"rewards(address)": "2883",
								"rewardsToken()": "infinite",
								"setConfig(uint256,uint256,uint256)": "infinite",
								"setRewardToken(address)": "27052",
								"setStartTime(uint256)": "24886",
								"stake(address,uint256)": "infinite",
								"startTime()": "2518",
								"totalPowers()": "2482",
								"totalRewards()": "2520",
								"transferOwnership(address)": "30852",
								"userLastUpdateTime(address)": "2860",
								"userRewardPerTokenPaid(address)": "2926"
							},
							"internal": {
								"_getRemainPool(uint256)": "infinite",
								"_getRewardRate(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 581,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "23934C5A09DA19000000"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 551,
									"end": 598,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 666,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "258"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "PUSH",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 636,
									"end": 676,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 683,
									"end": 723,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 771,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "3E8"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "PUSH",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 730,
									"end": 775,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 632,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 622,
									"end": 634,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 622,
									"end": 634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 621,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 603,
									"end": 635,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 603,
									"end": 635,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 63,
									"end": 161,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 63,
									"end": 161,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 116,
									"end": 123,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 143,
									"end": 153,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 136,
									"end": 153,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 63,
									"end": 161,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1533,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1536,
									"end": 1542,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1517,
									"end": 1542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1562,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1553,
									"end": 1559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1553,
									"end": 1570,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1617,
									"end": 1625,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1607,
									"end": 1615,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1586,
									"end": 1626,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 1506,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1443,
									"end": 1634,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 7632,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220692bdaf9ee9917b1d9b401d702e9d4dd62916c6ee400400f248a1c58e61e308764736f6c63430008110033",
									".code": [
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "D1AF0C7D"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "DA4F8431"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "DB2E21BC"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "DF136D65"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "F2FDE38B"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "ADC9772E"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "B79EC812"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "C8F33C91"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "CDDA56E0"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "9499C549"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "9A5B17B0"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "A4C3B091"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "8107368B"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "874C120B"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "8AEE8127"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "8B876347"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "6917C501"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "78E97925"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "7A6FCEE7"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "80FAA57D"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "3E0A322D"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "4DBDC4EB"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "5CFA91F4"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "6139D4B4"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "18E20ECF"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "24D7806C"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "3C4045CF"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "3D18B912"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "8CC262"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "700037D"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "E15561A"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "129EE21A"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 371,
											"end": 7632,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 4773,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4773,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4773,
											"end": 5069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1682,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1682,
											"end": 1974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6811,
											"end": 7116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 1982,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1982,
											"end": 2072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 3523,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3523,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3523,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 2524,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2524,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2524,
											"end": 3089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2080,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2080,
											"end": 2173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4302,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4302,
											"end": 4409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4417,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4417,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4417,
											"end": 4765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7124,
											"end": 7229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7124,
											"end": 7229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2402,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2402,
											"end": 2516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "tag",
											"source": 1,
											"value": "125"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2181,
											"end": 2275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2181,
											"end": 2275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 7486,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7486,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 6505,
											"end": 6799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "tag",
											"source": 1,
											"value": "134"
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6505,
											"end": 6799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2283,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2283,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 2283,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3947,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3947,
											"end": 4062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "148"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "152"
										},
										{
											"begin": 5112,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5112,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "150"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 5112,
											"end": 6495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7363,
											"end": 7478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "157"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4827,
											"end": 4834,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4847,
											"end": 4859,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4885,
											"end": 4903,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4904,
											"end": 4911,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4912,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4914,
											"end": 4929,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4884,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 4862,
											"end": 4930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4862,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "164"
										},
										{
											"begin": 4862,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4847,
											"end": 4930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5061,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5044,
											"end": 5051,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5059,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5060,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5034,
											"end": 5038,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4948,
											"end": 5029,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4996,
											"end": 5018,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5019,
											"end": 5026,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4996,
											"end": 5027,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4986,
											"end": 4990,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4971,
											"end": 4991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4991,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 4971,
											"end": 4991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4971,
											"end": 4995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 5028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 4971,
											"end": 5028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 4965,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4966,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4948,
											"end": 4970,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5029,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5029,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5029,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 5029,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5029,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 4948,
											"end": 5029,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4948,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5039,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5039,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5039,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 5039,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5039,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 4948,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4948,
											"end": 5043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5061,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4948,
											"end": 5061,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4948,
											"end": 5061,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 4948,
											"end": 5061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 5061,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 5061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4941,
											"end": 5061,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4773,
											"end": 5069,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 500,
											"end": 542,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 551,
											"end": 598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1835,
											"end": 1848,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1832,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1820,
											"end": 1848,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1848,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1848,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1848,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1883,
											"end": 1905,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1880,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1859,
											"end": 1905,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1905,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1905,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1905,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1942,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1939,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1916,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1966,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1966,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1755,
											"end": 1760,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "82F1FA40A3D82DEA3E406073819290601F436580AA7C69F9FEB61F885BDD8854"
										},
										{
											"begin": 1763,
											"end": 1770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1771,
											"end": 1776,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1763,
											"end": 1777,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1779,
											"end": 1784,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1737,
											"end": 1785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1737,
											"end": 1785,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 1813,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1803,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1804,
											"end": 1809,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1810,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1642,
											"end": 1826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1067,
											"end": 1071,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1099,
											"end": 1106,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 1091,
											"end": 1107,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1107,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 723,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 683,
											"end": 723,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 683,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 6811,
											"end": 7116,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6867,
											"end": 6877,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1172,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1204,
											"modifierDepth": 1,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1297,
											"end": 1301,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1318,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1274,
											"end": 1319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1368,
											"end": 1372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1367,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1353,
											"end": 1373,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1401,
											"end": 1425,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1401,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1398,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1506,
											"end": 1513,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1499,
											"end": 1514,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1487,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1495,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1559,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1643,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1616,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1624,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6904,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6914,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6915,
											"end": 6925,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6907,
											"end": 6926,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6926,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6926,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6950,
											"end": 6951,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6941,
											"end": 6947,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6941,
											"end": 6951,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7109,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7109,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6937,
											"end": 7109,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6990,
											"end": 6991,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6975,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6976,
											"end": 6986,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6968,
											"end": 6987,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6991,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6991,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6991,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6968,
											"end": 6991,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7018,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7027,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7027,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7027,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 7028,
											"end": 7038,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7040,
											"end": 7046,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7006,
											"end": 7047,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7047,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7006,
											"end": 7047,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7006,
											"end": 7047,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7078,
											"end": 7088,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "E2403640BA68FED3A2F88B7557551D1993F84B99BB10FF833F0CF8DB0C5E0486"
										},
										{
											"begin": 7090,
											"end": 7096,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7067,
											"end": 7097,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7067,
											"end": 7097,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 6937,
											"end": 7109,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 6937,
											"end": 7109,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6879,
											"end": 7116,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2484,
											"end": 2485,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6811,
											"end": 7116,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "tag",
											"source": 1,
											"value": "78"
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 821,
											"end": 842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 829,
											"end": 839,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 829,
											"end": 841,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 821,
											"end": 842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 813,
											"end": 881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2060,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2057,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2048,
											"end": 2064,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2064,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2064,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1982,
											"end": 2072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3581,
											"end": 3588,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3617,
											"end": 3618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3604,
											"end": 3613,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3604,
											"end": 3618,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3601,
											"end": 3663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3642,
											"end": 3651,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3651,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3635,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3635,
											"end": 3651,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3601,
											"end": 3663,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 3601,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3726,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 3697,
											"end": 3706,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3694,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3690,
											"end": 3706,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3690,
											"end": 3706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3690,
											"end": 3706,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 3690,
											"end": 3706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3689,
											"end": 3722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3722,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3689,
											"end": 3722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3722,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3689,
											"end": 3722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3689,
											"end": 3726,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 3689,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3689,
											"end": 3726,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 3689,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3673,
											"end": 3726,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3753,
											"end": 3765,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3789,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3799,
											"end": 3804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3804,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3874,
											"end": 3897,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3850,
											"end": 3871,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3847,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3842,
											"end": 3871,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3842,
											"end": 3871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3842,
											"end": 3897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3842,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 3842,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3839,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3834,
											"end": 3897,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3834,
											"end": 3897,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3897,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3897,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 3806,
											"end": 3809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3806,
											"end": 3809,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3776,
											"end": 3909,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3926,
											"end": 3931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 3931,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3523,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2582,
											"end": 2589,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2618,
											"end": 2619,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2605,
											"end": 2614,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2605,
											"end": 2619,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2667,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2602,
											"end": 2667,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2643,
											"end": 2655,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2655,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2636,
											"end": 2655,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2636,
											"end": 2655,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2667,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2602,
											"end": 2667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2687,
											"end": 2696,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2696,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2713,
											"end": 2721,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2677,
											"end": 2733,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2756,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2795,
											"end": 2796,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2767,
											"end": 2776,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2764,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2760,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 2760,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2759,
											"end": 2792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 2759,
											"end": 2792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2759,
											"end": 2796,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2759,
											"end": 2796,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2796,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2796,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2823,
											"end": 2835,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2823,
											"end": 2835,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2835,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2835,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2850,
											"end": 2859,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2874,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2865,
											"end": 2874,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2944,
											"end": 2967,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2944,
											"end": 2967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2920,
											"end": 2941,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2920,
											"end": 2941,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2912,
											"end": 2941,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2941,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 2912,
											"end": 2941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2941,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 2912,
											"end": 2941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2912,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 2912,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2904,
											"end": 2967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2904,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2904,
											"end": 2967,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 2904,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2967,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2896,
											"end": 2967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2876,
											"end": 2879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2876,
											"end": 2879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2846,
											"end": 2979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3058,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 3058,
											"end": 3081,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3055,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3034,
											"end": 3055,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3031,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3026,
											"end": 3055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3026,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 3026,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3081,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3019,
											"end": 3081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2524,
											"end": 3089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 636,
											"end": 676,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 636,
											"end": 676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 2153,
											"end": 2165,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2146,
											"end": 2165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2080,
											"end": 2173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1123,
											"end": 1226,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1215,
											"end": 1216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1188,
											"end": 1218,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1188,
											"end": 1218,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1123,
											"end": 1226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 605,
											"end": 629,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 605,
											"end": 629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 605,
											"end": 629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 730,
											"end": 775,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 730,
											"end": 775,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4359,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4386,
											"end": 4401,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4401,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4379,
											"end": 4401,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4409,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 926,
											"end": 979,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4489,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4522,
											"end": 4523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4502,
											"end": 4579,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4547,
											"end": 4567,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4547,
											"end": 4567,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4540,
											"end": 4567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4540,
											"end": 4567,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4579,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 4502,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4652,
											"end": 4742,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 4729,
											"end": 4741,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4724,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4719,
											"end": 4723,
											"name": "PUSH",
											"source": 1,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 4652,
											"end": 4714,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4703,
											"end": 4713,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4683,
											"end": 4697,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 4683,
											"end": 4697,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4652,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 4652,
											"end": 4678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 4652,
											"end": 4682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 4652,
											"end": 4698,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4702,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4652,
											"end": 4702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4714,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4714,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4714,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4652,
											"end": 4714,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4714,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 4652,
											"end": 4714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 4652,
											"end": 4718,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4724,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4724,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4652,
											"end": 4724,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4724,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 4652,
											"end": 4724,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4652,
											"end": 4728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4742,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4652,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4652,
											"end": 4742,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 4652,
											"end": 4742,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4629,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4609,
											"end": 4629,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 4609,
											"end": 4633,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4757,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4757,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4609,
											"end": 4757,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4609,
											"end": 4757,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 4609,
											"end": 4757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4757,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4589,
											"end": 4757,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4417,
											"end": 4765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7215,
											"end": 7220,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 7193,
											"end": 7205,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7193,
											"end": 7221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7124,
											"end": 7229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 862,
											"end": 919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 909,
											"end": 996,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 909,
											"end": 996,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 955,
											"end": 962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 982,
											"end": 988,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 982,
											"end": 988,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 975,
											"end": 988,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 909,
											"end": 996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "tag",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2451,
											"end": 2458,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2492,
											"end": 2507,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2478,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2478,
											"end": 2508,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 2478,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2471,
											"end": 2508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2402,
											"end": 2516,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2232,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2252,
											"end": 2267,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2267,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7591,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7579,
											"end": 7601,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7601,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 7602,
											"end": 7612,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7620,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 7579,
											"end": 7621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7621,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 7579,
											"end": 7621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7579,
											"end": 7621,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7486,
											"end": 7629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "tag",
											"source": 1,
											"value": "135"
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2317,
											"end": 2380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "290"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 829,
											"end": 839,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 829,
											"end": 841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 829,
											"end": 841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 821,
											"end": 828,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 821,
											"end": 842,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 821,
											"end": 842,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 813,
											"end": 881,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 813,
											"end": 881,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6595,
											"end": 6599,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1143,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1172,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1173,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1173,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1195,
											"end": 1204,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1191,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1204,
											"modifierDepth": 2,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1228,
											"end": 1237,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1221,
											"end": 1237,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 1184,
											"end": 1249,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1271,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1297,
											"end": 1301,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1318,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1296,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 1274,
											"end": 1319,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1274,
											"end": 1319,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1259,
											"end": 1319,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1368,
											"end": 1372,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1367,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1353,
											"end": 1373,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1353,
											"end": 1373,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1350,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1373,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1401,
											"end": 1425,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 1401,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1401,
											"end": 1427,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1398,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1384,
											"end": 1427,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1462,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1449,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1463,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1506,
											"end": 1513,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1505,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1499,
											"end": 1514,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 1499,
											"end": 1514,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1487,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1495,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1496,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1480,
											"end": 1514,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 1563,
											"end": 1583,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1551,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1559,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1529,
											"end": 1560,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1529,
											"end": 1583,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1628,
											"end": 1643,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1616,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "D"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1617,
											"end": 1624,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1598,
											"end": 1625,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1598,
											"end": 1643,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 1438,
											"end": 1655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6629,
											"end": 6630,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6620,
											"end": 6626,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6620,
											"end": 6630,
											"modifierDepth": 3,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6612,
											"end": 6649,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6612,
											"end": 6649,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6699,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6692,
											"end": 6698,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6687,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6675,
											"end": 6687,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6691,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6675,
											"end": 6691,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6699,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6699,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6699,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6675,
											"end": 6699,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6699,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6675,
											"end": 6699,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6675,
											"end": 6699,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6672,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6660,
											"end": 6699,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6699,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6699,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6699,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6755,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6748,
											"end": 6754,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6737,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6738,
											"end": 6742,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6743,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6747,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 6728,
											"end": 6747,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6755,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6755,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6755,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6728,
											"end": 6755,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6755,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6728,
											"end": 6755,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6728,
											"end": 6755,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6719,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6720,
											"end": 6724,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6710,
											"end": 6725,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6755,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6755,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6755,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6710,
											"end": 6755,
											"modifierDepth": 3,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6778,
											"end": 6782,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "9E71BC8EEA02A63969F509818F2DAFB9254532904319F9DBDA79B67BD34A5F3D"
										},
										{
											"begin": 6784,
											"end": 6790,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 6771,
											"end": 6791,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6771,
											"end": 6791,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1120,
											"end": 1674,
											"modifierDepth": 2,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 892,
											"end": 893,
											"modifierDepth": 2,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6505,
											"end": 6799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2341,
											"end": 2348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2377,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2386,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2386,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2283,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 782,
											"end": 811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 782,
											"end": 811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3996,
											"end": 4003,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4038,
											"end": 4053,
											"name": "TIMESTAMP",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4023,
											"end": 4054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 4023,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4016,
											"end": 4054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3947,
											"end": 4062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 467,
											"end": 493,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 467,
											"end": 493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "153"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5202,
											"end": 5209,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5243,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5234,
											"end": 5243,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5248,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5273,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5234,
											"end": 5273,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5273,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5273,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5260,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5273,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5273,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 5234,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5290,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5234,
											"end": 5290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5289,
											"end": 5290,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5285,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5277,
											"end": 5290,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5234,
											"end": 5290,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 5234,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5327,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5327,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5231,
											"end": 5327,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5314,
											"end": 5315,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5307,
											"end": 5315,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5307,
											"end": 5315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5307,
											"end": 5315,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5327,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 5231,
											"end": 5327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5362,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5353,
											"end": 5362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5350,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5342,
											"end": 5362,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5411,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5339,
											"end": 5411,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5399,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5390,
											"end": 5399,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5339,
											"end": 5411,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5339,
											"end": 5411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5503,
											"end": 5515,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5503,
											"end": 5515,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5487,
											"end": 5499,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5487,
											"end": 5499,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5474,
											"end": 5483,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5474,
											"end": 5483,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5471,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5463,
											"end": 5483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5463,
											"end": 5483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5483,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 5463,
											"end": 5483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5462,
											"end": 5499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5462,
											"end": 5499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5462,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 5462,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5447,
											"end": 5459,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5447,
											"end": 5499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5447,
											"end": 5499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5446,
											"end": 5515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5515,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5446,
											"end": 5515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5446,
											"end": 5515,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 5446,
											"end": 5515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5588,
											"end": 5600,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5588,
											"end": 5600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5573,
											"end": 5585,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5561,
											"end": 5569,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5560,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5547,
											"end": 5570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5570,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 5547,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5547,
											"end": 5585,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5585,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5547,
											"end": 5585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5585,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 5547,
											"end": 5585,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5547,
											"end": 5600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 5547,
											"end": 5600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5663,
											"end": 5675,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5663,
											"end": 5675,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5650,
											"end": 5659,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 5650,
											"end": 5659,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5647,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5638,
											"end": 5659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5659,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5638,
											"end": 5659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5659,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 5638,
											"end": 5659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5637,
											"end": 5675,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 5637,
											"end": 5675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5675,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 5637,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5613,
											"end": 5675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5751,
											"end": 5763,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 5751,
											"end": 5763,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5735,
											"end": 5748,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5732,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5722,
											"end": 5731,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5721,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 5708,
											"end": 5732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5732,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 5708,
											"end": 5732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5708,
											"end": 5748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 5708,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5708,
											"end": 5763,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5763,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5708,
											"end": 5763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5708,
											"end": 5763,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 5708,
											"end": 5763,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5686,
											"end": 5763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5805,
											"end": 5814,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 5802,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5787,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5779,
											"end": 5802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5779,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5779,
											"end": 5814,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5874,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5776,
											"end": 5874,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5853,
											"end": 5861,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 5838,
											"end": 5862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5838,
											"end": 5862,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5838,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5831,
											"end": 5862,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5776,
											"end": 5874,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5776,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5905,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5947,
											"end": 5959,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5936,
											"end": 5944,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5920,
											"end": 5933,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5917,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5908,
											"end": 5933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5908,
											"end": 5933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5933,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5908,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5908,
											"end": 5944,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5944,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5908,
											"end": 5944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5944,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5908,
											"end": 5944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5908,
											"end": 5959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5959,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5908,
											"end": 5959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5908,
											"end": 5959,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5908,
											"end": 5959,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5886,
											"end": 5959,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5992,
											"end": 6015,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 6006,
											"end": 6014,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 5992,
											"end": 6015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6015,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5992,
											"end": 6015,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 6015,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5970,
											"end": 6015,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6049,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6064,
											"end": 6082,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6110,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6113,
											"end": 6124,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6124,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6124,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6148,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 6165,
											"end": 6177,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6162,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6151,
											"end": 6177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 6151,
											"end": 6177,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6177,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6135,
											"end": 6177,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6192,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6207,
											"end": 6216,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6306,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 6283,
											"end": 6306,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6259,
											"end": 6280,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6259,
											"end": 6280,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6256,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6251,
											"end": 6280,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6280,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 6251,
											"end": 6280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6280,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 6251,
											"end": 6280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6251,
											"end": 6306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6306,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6238,
											"end": 6306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6337,
											"end": 6347,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6329,
											"end": 6347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6329,
											"end": 6347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6347,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6321,
											"end": 6347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6380,
											"end": 6390,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6362,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6390,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 6218,
											"end": 6221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6218,
											"end": 6221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6188,
											"end": 6402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6486,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 6466,
											"end": 6486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6486,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6486,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 6466,
											"end": 6486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6486,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 6466,
											"end": 6486,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6450,
											"end": 6461,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6437,
											"end": 6447,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6434,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6420,
											"end": 6447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6447,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6420,
											"end": 6447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6447,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 6420,
											"end": 6447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6420,
											"end": 6461,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6461,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6461,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 6420,
											"end": 6461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6420,
											"end": 6461,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6420,
											"end": 6461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6419,
											"end": 6487,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6487,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 6419,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6419,
											"end": 6487,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 6419,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "SWAP11",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6487,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 6495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "tag",
											"source": 1,
											"value": "156"
										},
										{
											"begin": 7363,
											"end": 7478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7430,
											"end": 7437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 7430,
											"end": 7435,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 7430,
											"end": 7437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7430,
											"end": 7437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 7430,
											"end": 7437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7447,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7422,
											"end": 7447,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "8FC"
										},
										{
											"begin": 7448,
											"end": 7469,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7422,
											"end": 7470,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7363,
											"end": 7478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 818,
											"end": 853,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 818,
											"end": 853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 702,
											"end": 712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 702,
											"end": 714,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 702,
											"end": 714,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 702,
											"end": 714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 691,
											"end": 696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 691,
											"end": 698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 698,
											"name": "tag",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 691,
											"end": 698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 714,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 683,
											"end": 753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 683,
											"end": 753,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 683,
											"end": 753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1343,
											"end": 1344,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1331,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1323,
											"end": 1345,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1323,
											"end": 1345,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 1315,
											"end": 1388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 1315,
											"end": 1388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 1418,
											"end": 1426,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1399,
											"end": 1427,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 1399,
											"end": 1427,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1234,
											"end": 1435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "tag",
											"source": 6,
											"value": "170"
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3166,
											"end": 3173,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3196,
											"end": 3197,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3193,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 3192,
											"end": 3197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "tag",
											"source": 6,
											"value": "372"
										},
										{
											"begin": 3192,
											"end": 3197,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3185,
											"end": 3197,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3108,
											"end": 3204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "tag",
											"source": 6,
											"value": "171"
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3509,
											"end": 3516,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3539,
											"end": 3540,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3536,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "230"
										},
										{
											"begin": 3535,
											"end": 3540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "tag",
											"source": 6,
											"value": "374"
										},
										{
											"begin": 3535,
											"end": 3540,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3528,
											"end": 3540,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3451,
											"end": 3547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "tag",
											"source": 6,
											"value": "172"
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3894,
											"end": 3901,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3924,
											"end": 3925,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3921,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3920,
											"end": 3925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "tag",
											"source": 6,
											"value": "376"
										},
										{
											"begin": 3920,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3913,
											"end": 3925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3836,
											"end": 3932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "173"
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2799,
											"end": 2806,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2826,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2825,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2825,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2818,
											"end": 2830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2741,
											"end": 2837,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 63,
											"end": 161,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 63,
											"end": 161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 116,
											"end": 123,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 143,
											"end": 153,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 136,
											"end": 153,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63,
											"end": 161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1533,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1517,
											"end": 1542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1562,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1553,
											"end": 1559,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 1553,
											"end": 1570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1617,
											"end": 1625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1607,
											"end": 1615,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1626,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 1506,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1443,
											"end": 1634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4070,
											"end": 4292,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 4070,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4150,
											"end": 4171,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4193,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4188,
											"end": 4192,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 4174,
											"end": 4193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4193,
											"name": "tag",
											"source": 1,
											"value": "382"
										},
										{
											"begin": 4174,
											"end": 4193,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4193,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4150,
											"end": 4193,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4222,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4225,
											"end": 4256,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "PUSH",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4243,
											"end": 4255,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4238,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4242,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 4225,
											"end": 4242,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4256,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4256,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4225,
											"end": 4256,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4256,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 4225,
											"end": 4256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4204,
											"end": 4256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4274,
											"end": 4284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4267,
											"end": 4284,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4292,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4292,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4070,
											"end": 4292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "389"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 7,
											"value": "437"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 7,
											"value": "439"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "tag",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 1702,
											"end": 1707,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 1684,
											"end": 1708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "tag",
											"source": 7,
											"value": "441"
										},
										{
											"begin": 1684,
											"end": 1708,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1677,
											"end": 1682,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1674,
											"end": 1709,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1723,
											"end": 1724,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1720,
											"end": 1721,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1713,
											"end": 1725,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "tag",
											"source": 7,
											"value": "442"
										},
										{
											"begin": 1664,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1611,
											"end": 1733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "tag",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1829,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1810,
											"end": 1830,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1801,
											"end": 1830,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 1866,
											"end": 1871,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "393"
										},
										{
											"begin": 1839,
											"end": 1872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "tag",
											"source": 7,
											"value": "444"
										},
										{
											"begin": 1839,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1739,
											"end": 1878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "tag",
											"source": 7,
											"value": "59"
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1961,
											"end": 1967,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1977,
											"end": 1983,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2014,
											"end": 2023,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 2005,
											"end": 2012,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2001,
											"end": 2024,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1997,
											"end": 2029,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 2032,
											"end": 2111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "tag",
											"source": 7,
											"value": "447"
										},
										{
											"begin": 2032,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "tag",
											"source": 7,
											"value": "446"
										},
										{
											"begin": 1994,
											"end": 2113,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2152,
											"end": 2153,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 2222,
											"end": 2229,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2213,
											"end": 2219,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2211,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2198,
											"end": 2220,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 2177,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "tag",
											"source": 7,
											"value": "448"
										},
										{
											"begin": 2177,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2123,
											"end": 2240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2279,
											"end": 2281,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2350,
											"end": 2357,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2341,
											"end": 2347,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2330,
											"end": 2339,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2326,
											"end": 2348,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 2305,
											"end": 2358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "tag",
											"source": 7,
											"value": "449"
										},
										{
											"begin": 2305,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2295,
											"end": 2358,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2250,
											"end": 2368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2407,
											"end": 2409,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2478,
											"end": 2485,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 2469,
											"end": 2475,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2458,
											"end": 2467,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 2454,
											"end": 2476,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 2433,
											"end": 2486,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "tag",
											"source": 7,
											"value": "450"
										},
										{
											"begin": 2433,
											"end": 2486,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2423,
											"end": 2486,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2378,
											"end": 2496,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1884,
											"end": 2503,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2543,
											"end": 2550,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2579,
											"end": 2592,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2572,
											"end": 2593,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2593,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2561,
											"end": 2593,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2509,
											"end": 2599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2721,
											"name": "tag",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 2605,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 2690,
											"end": 2695,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 2675,
											"end": 2696,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "tag",
											"source": 7,
											"value": "453"
										},
										{
											"begin": 2675,
											"end": 2696,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2668,
											"end": 2673,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2665,
											"end": 2697,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2711,
											"end": 2712,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2709,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2701,
											"end": 2713,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "tag",
											"source": 7,
											"value": "454"
										},
										{
											"begin": 2655,
											"end": 2715,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2721,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2605,
											"end": 2721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "tag",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2770,
											"end": 2775,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2814,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2795,
											"end": 2815,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2786,
											"end": 2815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 2848,
											"end": 2853,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 2824,
											"end": 2854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "tag",
											"source": 7,
											"value": "456"
										},
										{
											"begin": 2824,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2727,
											"end": 2860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "tag",
											"source": 7,
											"value": "63"
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2931,
											"end": 2937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2945,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2988,
											"end": 2990,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2976,
											"end": 2985,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2967,
											"end": 2974,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 2963,
											"end": 2986,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2959,
											"end": 2991,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 2994,
											"end": 3073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "tag",
											"source": 7,
											"value": "459"
										},
										{
											"begin": 2994,
											"end": 3073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "tag",
											"source": 7,
											"value": "458"
										},
										{
											"begin": 2956,
											"end": 3075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3114,
											"end": 3115,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 3184,
											"end": 3191,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3175,
											"end": 3181,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3164,
											"end": 3173,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3160,
											"end": 3182,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 3139,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "tag",
											"source": 7,
											"value": "460"
										},
										{
											"begin": 3139,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3192,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3085,
											"end": 3202,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3241,
											"end": 3243,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3300,
											"end": 3306,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3289,
											"end": 3298,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3285,
											"end": 3307,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "397"
										},
										{
											"begin": 3267,
											"end": 3317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "tag",
											"source": 7,
											"value": "461"
										},
										{
											"begin": 3267,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3317,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3257,
											"end": 3317,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3212,
											"end": 3327,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2866,
											"end": 3334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "tag",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 3436,
											"end": 3441,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 3421,
											"end": 3442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "tag",
											"source": 7,
											"value": "463"
										},
										{
											"begin": 3421,
											"end": 3442,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3416,
											"end": 3419,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3409,
											"end": 3443,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3340,
											"end": 3449,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "tag",
											"source": 7,
											"value": "69"
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3542,
											"end": 3546,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3582,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3569,
											"end": 3578,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3565,
											"end": 3583,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3557,
											"end": 3583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 3655,
											"end": 3656,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3640,
											"end": 3657,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3631,
											"end": 3637,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 3593,
											"end": 3658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "tag",
											"source": 7,
											"value": "465"
										},
										{
											"begin": 3593,
											"end": 3658,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3455,
											"end": 3665,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "tag",
											"source": 7,
											"value": "77"
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3730,
											"end": 3736,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3779,
											"end": 3781,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3767,
											"end": 3776,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3758,
											"end": 3765,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3754,
											"end": 3777,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3750,
											"end": 3782,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 3785,
											"end": 3864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "tag",
											"source": 7,
											"value": "468"
										},
										{
											"begin": 3785,
											"end": 3864,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "tag",
											"source": 7,
											"value": "467"
										},
										{
											"begin": 3747,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3905,
											"end": 3906,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 3975,
											"end": 3982,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3966,
											"end": 3972,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3951,
											"end": 3973,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 3930,
											"end": 3983,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "tag",
											"source": 7,
											"value": "469"
										},
										{
											"begin": 3930,
											"end": 3983,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3920,
											"end": 3983,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3876,
											"end": 3993,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3671,
											"end": 4000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "tag",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 4111,
											"end": 4116,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "388"
										},
										{
											"begin": 4093,
											"end": 4117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "tag",
											"source": 7,
											"value": "471"
										},
										{
											"begin": 4093,
											"end": 4117,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4088,
											"end": 4091,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4081,
											"end": 4118,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4006,
											"end": 4124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4223,
											"end": 4227,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4261,
											"end": 4263,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4250,
											"end": 4259,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4246,
											"end": 4264,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4264,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4238,
											"end": 4264,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 4342,
											"end": 4343,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4340,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4327,
											"end": 4344,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4318,
											"end": 4324,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 4274,
											"end": 4345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "tag",
											"source": 7,
											"value": "473"
										},
										{
											"begin": 4274,
											"end": 4345,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4130,
											"end": 4352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "tag",
											"source": 7,
											"value": "131"
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4426,
											"end": 4432,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4434,
											"end": 4440,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 4471,
											"end": 4480,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 4462,
											"end": 4469,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4458,
											"end": 4481,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 4454,
											"end": 4486,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 4489,
											"end": 4568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "tag",
											"source": 7,
											"value": "476"
										},
										{
											"begin": 4489,
											"end": 4568,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "tag",
											"source": 7,
											"value": "475"
										},
										{
											"begin": 4451,
											"end": 4570,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4609,
											"end": 4610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 4679,
											"end": 4686,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4670,
											"end": 4676,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4659,
											"end": 4668,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4655,
											"end": 4677,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "390"
										},
										{
											"begin": 4634,
											"end": 4687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "tag",
											"source": 7,
											"value": "477"
										},
										{
											"begin": 4634,
											"end": 4687,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4687,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4624,
											"end": 4687,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4580,
											"end": 4697,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4736,
											"end": 4738,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 4807,
											"end": 4814,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 4798,
											"end": 4804,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4787,
											"end": 4796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 4783,
											"end": 4805,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 4762,
											"end": 4815,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "tag",
											"source": 7,
											"value": "478"
										},
										{
											"begin": 4762,
											"end": 4815,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4752,
											"end": 4815,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4707,
											"end": 4825,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4358,
											"end": 4832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "tag",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4866,
											"end": 4869,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4892,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 4880,
											"end": 4892,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4880,
											"end": 4892,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4838,
											"end": 4898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "tag",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4954,
											"end": 4963,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 5032,
											"end": 5037,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 5014,
											"end": 5038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "tag",
											"source": 7,
											"value": "483"
										},
										{
											"begin": 5014,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "400"
										},
										{
											"begin": 5005,
											"end": 5039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "tag",
											"source": 7,
											"value": "482"
										},
										{
											"begin": 5005,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "387"
										},
										{
											"begin": 4987,
											"end": 5040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "tag",
											"source": 7,
											"value": "481"
										},
										{
											"begin": 4987,
											"end": 5040,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5040,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4974,
											"end": 5040,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4904,
											"end": 5046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "tag",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5102,
											"end": 5111,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 5166,
											"end": 5171,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "401"
										},
										{
											"begin": 5135,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "tag",
											"source": 7,
											"value": "485"
										},
										{
											"begin": 5135,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5172,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5122,
											"end": 5172,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5052,
											"end": 5178,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "tag",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5249,
											"end": 5258,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 5313,
											"end": 5318,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "402"
										},
										{
											"begin": 5282,
											"end": 5319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "tag",
											"source": 7,
											"value": "487"
										},
										{
											"begin": 5282,
											"end": 5319,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5319,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5269,
											"end": 5319,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5184,
											"end": 5325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "tag",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 5479,
											"end": 5484,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "403"
										},
										{
											"begin": 5433,
											"end": 5485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "tag",
											"source": 7,
											"value": "489"
										},
										{
											"begin": 5433,
											"end": 5485,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5428,
											"end": 5431,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5421,
											"end": 5486,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5331,
											"end": 5492,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "tag",
											"source": 7,
											"value": "149"
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5606,
											"end": 5610,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5644,
											"end": 5646,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 5633,
											"end": 5642,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5629,
											"end": 5647,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5647,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5621,
											"end": 5647,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 5740,
											"end": 5741,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5729,
											"end": 5738,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5725,
											"end": 5742,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "404"
										},
										{
											"begin": 5657,
											"end": 5743,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "tag",
											"source": 7,
											"value": "491"
										},
										{
											"begin": 5657,
											"end": 5743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5498,
											"end": 5750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "tag",
											"source": 7,
											"value": "152"
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5824,
											"end": 5830,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5832,
											"end": 5838,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5881,
											"end": 5883,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5869,
											"end": 5878,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5860,
											"end": 5867,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 5856,
											"end": 5879,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5852,
											"end": 5884,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 5887,
											"end": 5966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "tag",
											"source": 7,
											"value": "494"
										},
										{
											"begin": 5887,
											"end": 5966,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "tag",
											"source": 7,
											"value": "493"
										},
										{
											"begin": 5849,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 6077,
											"end": 6084,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6068,
											"end": 6074,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6057,
											"end": 6066,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6053,
											"end": 6075,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6032,
											"end": 6085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "tag",
											"source": 7,
											"value": "495"
										},
										{
											"begin": 6032,
											"end": 6085,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6085,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6022,
											"end": 6085,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5978,
											"end": 6095,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6134,
											"end": 6136,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 6205,
											"end": 6212,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 6196,
											"end": 6202,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6185,
											"end": 6194,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 6181,
											"end": 6203,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "394"
										},
										{
											"begin": 6160,
											"end": 6213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "tag",
											"source": 7,
											"value": "496"
										},
										{
											"begin": 6160,
											"end": 6213,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6150,
											"end": 6213,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6105,
											"end": 6223,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5756,
											"end": 6230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "tag",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6320,
											"end": 6331,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6354,
											"end": 6360,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6349,
											"end": 6352,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6342,
											"end": 6361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6389,
											"end": 6392,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6385,
											"end": 6399,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6370,
											"end": 6399,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6236,
											"end": 6405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6632,
											"name": "tag",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 6411,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6551,
											"end": 6585,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F7420746865206F776E"
										},
										{
											"begin": 6547,
											"end": 6548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6545,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6535,
											"end": 6549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6528,
											"end": 6586,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6620,
											"end": 6624,
											"name": "PUSH",
											"source": 7,
											"value": "6572000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6615,
											"end": 6617,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6607,
											"end": 6613,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6603,
											"end": 6618,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6596,
											"end": 6625,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6411,
											"end": 6632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "tag",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6780,
											"end": 6783,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 6865,
											"end": 6867,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 6860,
											"end": 6863,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 6801,
											"end": 6868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "tag",
											"source": 7,
											"value": "500"
										},
										{
											"begin": 6801,
											"end": 6868,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6868,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6794,
											"end": 6868,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 6966,
											"end": 6969,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "406"
										},
										{
											"begin": 6877,
											"end": 6970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "tag",
											"source": 7,
											"value": "501"
										},
										{
											"begin": 6877,
											"end": 6970,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6995,
											"end": 6997,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6990,
											"end": 6993,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6986,
											"end": 6998,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 6998,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6979,
											"end": 6998,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 6638,
											"end": 7004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7176,
											"end": 7180,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7214,
											"end": 7216,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7203,
											"end": 7212,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7199,
											"end": 7217,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7191,
											"end": 7217,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7191,
											"end": 7217,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7263,
											"end": 7272,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7257,
											"end": 7261,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7253,
											"end": 7273,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 7249,
											"end": 7250,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7238,
											"end": 7247,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7234,
											"end": 7251,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7227,
											"end": 7274,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 7417,
											"end": 7421,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "407"
										},
										{
											"begin": 7291,
											"end": 7422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "tag",
											"source": 7,
											"value": "503"
										},
										{
											"begin": 7291,
											"end": 7422,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7422,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7283,
											"end": 7422,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7010,
											"end": 7429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "tag",
											"source": 7,
											"value": "189"
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7582,
											"end": 7584,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 7571,
											"end": 7580,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7567,
											"end": 7585,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7585,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7585,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 7657,
											"end": 7658,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7655,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7642,
											"end": 7659,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7633,
											"end": 7639,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7595,
											"end": 7660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "tag",
											"source": 7,
											"value": "505"
										},
										{
											"begin": 7595,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 7732,
											"end": 7734,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 7721,
											"end": 7730,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 7717,
											"end": 7735,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "398"
										},
										{
											"begin": 7670,
											"end": 7736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "tag",
											"source": 7,
											"value": "506"
										},
										{
											"begin": 7670,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7435,
											"end": 7743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7930,
											"name": "tag",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 7749,
											"end": 7930,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 7889,
											"end": 7922,
											"name": "PUSH",
											"source": 7,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 7885,
											"end": 7886,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 7877,
											"end": 7883,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 7873,
											"end": 7887,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 7866,
											"end": 7923,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7930,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7749,
											"end": 7930,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "tag",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8078,
											"end": 8081,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 8163,
											"end": 8165,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 8158,
											"end": 8161,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 8099,
											"end": 8166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "tag",
											"source": 7,
											"value": "509"
										},
										{
											"begin": 8099,
											"end": 8166,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8166,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8092,
											"end": 8166,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 8264,
											"end": 8267,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "408"
										},
										{
											"begin": 8175,
											"end": 8268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "tag",
											"source": 7,
											"value": "510"
										},
										{
											"begin": 8175,
											"end": 8268,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8293,
											"end": 8295,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8288,
											"end": 8291,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8284,
											"end": 8296,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8296,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8277,
											"end": 8296,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 7936,
											"end": 8302,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "tag",
											"source": 7,
											"value": "194"
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8474,
											"end": 8478,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8514,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8501,
											"end": 8510,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8497,
											"end": 8515,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8489,
											"end": 8515,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8570,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8555,
											"end": 8559,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8551,
											"end": 8571,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 8547,
											"end": 8548,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8536,
											"end": 8545,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8549,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8525,
											"end": 8572,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 8715,
											"end": 8719,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "409"
										},
										{
											"begin": 8589,
											"end": 8720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "tag",
											"source": 7,
											"value": "512"
										},
										{
											"begin": 8589,
											"end": 8720,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8581,
											"end": 8720,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8308,
											"end": 8727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 9065,
											"name": "tag",
											"source": 7,
											"value": "205"
										},
										{
											"begin": 8733,
											"end": 9065,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8854,
											"end": 8858,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8892,
											"end": 8894,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8881,
											"end": 8890,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8877,
											"end": 8895,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8869,
											"end": 8895,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 8869,
											"end": 8895,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8905,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 8973,
											"end": 8974,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8962,
											"end": 8971,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8949,
											"end": 8955,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 8905,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "399"
										},
										{
											"begin": 8905,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8905,
											"end": 8976,
											"name": "tag",
											"source": 7,
											"value": "514"
										},
										{
											"begin": 8905,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 9054,
											"end": 9056,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9043,
											"end": 9052,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9039,
											"end": 9057,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9030,
											"end": 9036,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9058,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "392"
										},
										{
											"begin": 8986,
											"end": 9058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8986,
											"end": 9058,
											"name": "tag",
											"source": 7,
											"value": "515"
										},
										{
											"begin": 8986,
											"end": 9058,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 9065,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 9065,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 9065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 9065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 9065,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8733,
											"end": 9065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9208,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 9071,
											"end": 9208,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9125,
											"end": 9130,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9156,
											"end": 9162,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9150,
											"end": 9163,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9141,
											"end": 9163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 9196,
											"end": 9201,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "396"
										},
										{
											"begin": 9172,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9172,
											"end": 9202,
											"name": "tag",
											"source": 7,
											"value": "517"
										},
										{
											"begin": 9172,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9208,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9208,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9208,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9071,
											"end": 9208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9559,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 9214,
											"end": 9559,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9281,
											"end": 9287,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9330,
											"end": 9332,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9318,
											"end": 9327,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9309,
											"end": 9316,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9305,
											"end": 9328,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9301,
											"end": 9333,
											"name": "SLT",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9417,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 9298,
											"end": 9417,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9336,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 9336,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "385"
										},
										{
											"begin": 9336,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9336,
											"end": 9415,
											"name": "tag",
											"source": 7,
											"value": "520"
										},
										{
											"begin": 9336,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9298,
											"end": 9417,
											"name": "tag",
											"source": 7,
											"value": "519"
										},
										{
											"begin": 9298,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9481,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 9525,
											"end": 9531,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9514,
											"end": 9523,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 9510,
											"end": 9532,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9481,
											"end": 9542,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 9481,
											"end": 9542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9481,
											"end": 9542,
											"name": "tag",
											"source": 7,
											"value": "521"
										},
										{
											"begin": 9481,
											"end": 9542,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9542,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9471,
											"end": 9542,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9427,
											"end": 9552,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9559,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9559,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9559,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9214,
											"end": 9559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9786,
											"name": "tag",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 9565,
											"end": 9786,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9705,
											"end": 9739,
											"name": "PUSH",
											"source": 7,
											"value": "41646D696E61626C653A2063616C6C6572206973206E6F74207468652061646D"
										},
										{
											"begin": 9701,
											"end": 9702,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9693,
											"end": 9699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9689,
											"end": 9703,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9682,
											"end": 9740,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9774,
											"end": 9778,
											"name": "PUSH",
											"source": 7,
											"value": "696E000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9769,
											"end": 9771,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 9761,
											"end": 9767,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 9757,
											"end": 9772,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9750,
											"end": 9779,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9786,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9565,
											"end": 9786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "tag",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9934,
											"end": 9937,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 10019,
											"end": 10021,
											"name": "PUSH",
											"source": 7,
											"value": "22"
										},
										{
											"begin": 10014,
											"end": 10017,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 9955,
											"end": 10022,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "tag",
											"source": 7,
											"value": "524"
										},
										{
											"begin": 9955,
											"end": 10022,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9948,
											"end": 10022,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9948,
											"end": 10022,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 10120,
											"end": 10123,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "411"
										},
										{
											"begin": 10031,
											"end": 10124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "tag",
											"source": 7,
											"value": "525"
										},
										{
											"begin": 10031,
											"end": 10124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10149,
											"end": 10151,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 10144,
											"end": 10147,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10140,
											"end": 10152,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10133,
											"end": 10152,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 10158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 9792,
											"end": 10158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "tag",
											"source": 7,
											"value": "216"
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10330,
											"end": 10334,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10368,
											"end": 10370,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 10357,
											"end": 10366,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10353,
											"end": 10371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10345,
											"end": 10371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10417,
											"end": 10426,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10411,
											"end": 10415,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10407,
											"end": 10427,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10403,
											"end": 10404,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10392,
											"end": 10401,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10388,
											"end": 10405,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 10381,
											"end": 10428,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 10571,
											"end": 10575,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "412"
										},
										{
											"begin": 10445,
											"end": 10576,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "tag",
											"source": 7,
											"value": "527"
										},
										{
											"begin": 10445,
											"end": 10576,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10437,
											"end": 10576,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10583,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10164,
											"end": 10583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10589,
											"end": 10769,
											"name": "tag",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 10589,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10637,
											"end": 10714,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10634,
											"end": 10635,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10627,
											"end": 10715,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10734,
											"end": 10738,
											"name": "PUSH",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 10731,
											"end": 10732,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 10724,
											"end": 10739,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 10758,
											"end": 10762,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 10755,
											"end": 10756,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10748,
											"end": 10763,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10969,
											"name": "tag",
											"source": 7,
											"value": "221"
										},
										{
											"begin": 10775,
											"end": 10969,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10815,
											"end": 10819,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 10853,
											"end": 10854,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10855,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 10835,
											"end": 10855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10835,
											"end": 10855,
											"name": "tag",
											"source": 7,
											"value": "530"
										},
										{
											"begin": 10835,
											"end": 10855,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10830,
											"end": 10855,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10830,
											"end": 10855,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10869,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10887,
											"end": 10888,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 10869,
											"end": 10889,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 10869,
											"end": 10889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10869,
											"end": 10889,
											"name": "tag",
											"source": 7,
											"value": "531"
										},
										{
											"begin": 10869,
											"end": 10889,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 10889,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10864,
											"end": 10889,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10913,
											"end": 10914,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10910,
											"end": 10911,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 10906,
											"end": 10915,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 10898,
											"end": 10915,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 10898,
											"end": 10915,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10937,
											"end": 10938,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10931,
											"end": 10935,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 10928,
											"end": 10939,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 10962,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 10962,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 10925,
											"end": 10962,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 10942,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 10942,
											"end": 10960,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 10942,
											"end": 10960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10942,
											"end": 10960,
											"name": "tag",
											"source": 7,
											"value": "533"
										},
										{
											"begin": 10942,
											"end": 10960,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10925,
											"end": 10962,
											"name": "tag",
											"source": 7,
											"value": "532"
										},
										{
											"begin": 10925,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10969,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10969,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10969,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 10775,
											"end": 10969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 10975,
											"end": 11155,
											"name": "tag",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 10975,
											"end": 11155,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11023,
											"end": 11100,
											"name": "PUSH",
											"source": 7,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11020,
											"end": 11021,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11101,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11120,
											"end": 11124,
											"name": "PUSH",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 11117,
											"end": 11118,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 11110,
											"end": 11125,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 11144,
											"end": 11148,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 11141,
											"end": 11142,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11134,
											"end": 11149,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11346,
											"name": "tag",
											"source": 7,
											"value": "223"
										},
										{
											"begin": 11161,
											"end": 11346,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11201,
											"end": 11202,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 11236,
											"end": 11237,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11218,
											"end": 11238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "tag",
											"source": 7,
											"value": "536"
										},
										{
											"begin": 11218,
											"end": 11238,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11213,
											"end": 11238,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11213,
											"end": 11238,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11252,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11270,
											"end": 11271,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11252,
											"end": 11272,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11252,
											"end": 11272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11252,
											"end": 11272,
											"name": "tag",
											"source": 7,
											"value": "537"
										},
										{
											"begin": 11252,
											"end": 11272,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11272,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11247,
											"end": 11272,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11291,
											"end": 11292,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11281,
											"end": 11316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 11281,
											"end": 11316,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 11296,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "tag",
											"source": 7,
											"value": "539"
										},
										{
											"begin": 11296,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11281,
											"end": 11316,
											"name": "tag",
											"source": 7,
											"value": "538"
										},
										{
											"begin": 11281,
											"end": 11316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11338,
											"end": 11339,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11335,
											"end": 11336,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11331,
											"end": 11340,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11326,
											"end": 11340,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11326,
											"end": 11340,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11346,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11346,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11346,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11161,
											"end": 11346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11543,
											"name": "tag",
											"source": 7,
											"value": "225"
										},
										{
											"begin": 11352,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11392,
											"end": 11395,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11411,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 11429,
											"end": 11430,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11431,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11411,
											"end": 11431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11411,
											"end": 11431,
											"name": "tag",
											"source": 7,
											"value": "541"
										},
										{
											"begin": 11411,
											"end": 11431,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11431,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11406,
											"end": 11431,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 11463,
											"end": 11464,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11465,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11445,
											"end": 11465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11445,
											"end": 11465,
											"name": "tag",
											"source": 7,
											"value": "542"
										},
										{
											"begin": 11445,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11440,
											"end": 11465,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11440,
											"end": 11465,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11488,
											"end": 11489,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11485,
											"end": 11486,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11481,
											"end": 11490,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 11474,
											"end": 11490,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11474,
											"end": 11490,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11509,
											"end": 11512,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 11506,
											"end": 11507,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11503,
											"end": 11513,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 11500,
											"end": 11536,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11500,
											"end": 11536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 11500,
											"end": 11536,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 11516,
											"end": 11534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "tag",
											"source": 7,
											"value": "544"
										},
										{
											"begin": 11516,
											"end": 11534,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11500,
											"end": 11536,
											"name": "tag",
											"source": 7,
											"value": "543"
										},
										{
											"begin": 11500,
											"end": 11536,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11543,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11543,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11543,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "tag",
											"source": 7,
											"value": "230"
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11589,
											"end": 11596,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 11630,
											"end": 11631,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11612,
											"end": 11632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "tag",
											"source": 7,
											"value": "546"
										},
										{
											"begin": 11612,
											"end": 11632,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11607,
											"end": 11632,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 11664,
											"end": 11665,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11646,
											"end": 11666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "tag",
											"source": 7,
											"value": "547"
										},
										{
											"begin": 11646,
											"end": 11666,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11666,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11641,
											"end": 11666,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11701,
											"end": 11702,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11698,
											"end": 11699,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11694,
											"end": 11703,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 11741,
											"end": 11752,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 11723,
											"end": 11753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "tag",
											"source": 7,
											"value": "548"
										},
										{
											"begin": 11723,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11712,
											"end": 11753,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11712,
											"end": 11753,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11902,
											"end": 11903,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11893,
											"end": 11900,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 11889,
											"end": 11904,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 11886,
											"end": 11887,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 11883,
											"end": 11905,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 11863,
											"end": 11864,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 11856,
											"end": 11865,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 11836,
											"end": 11919,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 11932,
											"end": 11950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "tag",
											"source": 7,
											"value": "550"
										},
										{
											"begin": 11932,
											"end": 11950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "tag",
											"source": 7,
											"value": "549"
										},
										{
											"begin": 11813,
											"end": 11952,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11597,
											"end": 11959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11549,
											"end": 11959,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "tag",
											"source": 7,
											"value": "234"
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12004,
											"end": 12007,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 12045,
											"end": 12050,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 12027,
											"end": 12051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "tag",
											"source": 7,
											"value": "552"
										},
										{
											"begin": 12027,
											"end": 12051,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12051,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12018,
											"end": 12051,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12073,
											"end": 12139,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12066,
											"end": 12071,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12063,
											"end": 12140,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "413"
										},
										{
											"begin": 12143,
											"end": 12161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "tag",
											"source": 7,
											"value": "554"
										},
										{
											"begin": 12143,
											"end": 12161,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "tag",
											"source": 7,
											"value": "553"
										},
										{
											"begin": 12060,
											"end": 12163,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12190,
											"end": 12191,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 12183,
											"end": 12188,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12179,
											"end": 12192,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12172,
											"end": 12192,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 11965,
											"end": 12198,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12368,
											"name": "tag",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 12204,
											"end": 12368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12344,
											"end": 12360,
											"name": "PUSH",
											"source": 7,
											"value": "43616E6E6F74207374616B652030000000000000000000000000000000000000"
										},
										{
											"begin": 12340,
											"end": 12341,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12332,
											"end": 12338,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12328,
											"end": 12342,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12321,
											"end": 12361,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12204,
											"end": 12368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "tag",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12516,
											"end": 12519,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 12601,
											"end": 12603,
											"name": "PUSH",
											"source": 7,
											"value": "E"
										},
										{
											"begin": 12596,
											"end": 12599,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 12537,
											"end": 12604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "tag",
											"source": 7,
											"value": "557"
										},
										{
											"begin": 12537,
											"end": 12604,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12604,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12530,
											"end": 12604,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 12702,
											"end": 12705,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "415"
										},
										{
											"begin": 12613,
											"end": 12706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "tag",
											"source": 7,
											"value": "558"
										},
										{
											"begin": 12613,
											"end": 12706,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12731,
											"end": 12733,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12726,
											"end": 12729,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12722,
											"end": 12734,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12715,
											"end": 12734,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12715,
											"end": 12734,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12374,
											"end": 12740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "tag",
											"source": 7,
											"value": "306"
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12912,
											"end": 12916,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12950,
											"end": 12952,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 12939,
											"end": 12948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 12935,
											"end": 12953,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12927,
											"end": 12953,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12927,
											"end": 12953,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12999,
											"end": 13008,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12993,
											"end": 12997,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 12989,
											"end": 13009,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 12985,
											"end": 12986,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 12974,
											"end": 12983,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 12970,
											"end": 12987,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 12963,
											"end": 13010,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 13153,
											"end": 13157,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "416"
										},
										{
											"begin": 13027,
											"end": 13158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "tag",
											"source": 7,
											"value": "560"
										},
										{
											"begin": 13027,
											"end": 13158,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13158,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13019,
											"end": 13158,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 12746,
											"end": 13165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "tag",
											"source": 7,
											"value": "321"
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13203,
											"end": 13204,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 13238,
											"end": 13239,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 13220,
											"end": 13240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "tag",
											"source": 7,
											"value": "562"
										},
										{
											"begin": 13220,
											"end": 13240,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13215,
											"end": 13240,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13215,
											"end": 13240,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 13272,
											"end": 13273,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "391"
										},
										{
											"begin": 13254,
											"end": 13274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "tag",
											"source": 7,
											"value": "563"
										},
										{
											"begin": 13254,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13274,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13249,
											"end": 13274,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13293,
											"end": 13294,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "414"
										},
										{
											"begin": 13298,
											"end": 13316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "tag",
											"source": 7,
											"value": "565"
										},
										{
											"begin": 13298,
											"end": 13316,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "tag",
											"source": 7,
											"value": "564"
										},
										{
											"begin": 13283,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13339,
											"end": 13340,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13336,
											"end": 13337,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13332,
											"end": 13341,
											"name": "MOD",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13327,
											"end": 13341,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13171,
											"end": 13347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13578,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 13353,
											"end": 13578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13493,
											"end": 13527,
											"name": "PUSH",
											"source": 7,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13489,
											"end": 13490,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13481,
											"end": 13487,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13477,
											"end": 13491,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13470,
											"end": 13528,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13562,
											"end": 13570,
											"name": "PUSH",
											"source": 7,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13557,
											"end": 13559,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 13549,
											"end": 13555,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13545,
											"end": 13560,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13538,
											"end": 13571,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13578,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13353,
											"end": 13578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13726,
											"end": 13729,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 13811,
											"end": 13813,
											"name": "PUSH",
											"source": 7,
											"value": "26"
										},
										{
											"begin": 13806,
											"end": 13809,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "405"
										},
										{
											"begin": 13747,
											"end": 13814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "tag",
											"source": 7,
											"value": "568"
										},
										{
											"begin": 13747,
											"end": 13814,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13740,
											"end": 13814,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13740,
											"end": 13814,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 13912,
											"end": 13915,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 13823,
											"end": 13916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "tag",
											"source": 7,
											"value": "569"
										},
										{
											"begin": 13823,
											"end": 13916,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13941,
											"end": 13943,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 13936,
											"end": 13939,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 13932,
											"end": 13944,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 13925,
											"end": 13944,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13925,
											"end": 13944,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13584,
											"end": 13950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "tag",
											"source": 7,
											"value": "369"
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14122,
											"end": 14126,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14160,
											"end": 14162,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 14149,
											"end": 14158,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 14145,
											"end": 14163,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14137,
											"end": 14163,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14137,
											"end": 14163,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 14209,
											"end": 14218,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14203,
											"end": 14207,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14199,
											"end": 14219,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 14195,
											"end": 14196,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 14184,
											"end": 14193,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 14180,
											"end": 14197,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 14173,
											"end": 14220,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 14363,
											"end": 14367,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 14237,
											"end": 14368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "tag",
											"source": 7,
											"value": "571"
										},
										{
											"begin": 14237,
											"end": 14368,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14368,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 14229,
											"end": 14368,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 13956,
											"end": 14375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"curTime()": "9a5b17b0",
							"earned(address)": "008cc262",
							"emergencyWithdraw()": "db2e21bc",
							"emergencyWithdrawToken(address,uint256)": "a4c3b091",
							"getCurRewardPool()": "9499c549",
							"getCurRewardRate()": "cdda56e0",
							"getRemainPool(uint256)": "4dbdc4eb",
							"getReward()": "3d18b912",
							"getRewardPool(uint256)": "5cfa91f4",
							"getTimeWeightedAveRate(uint256,uint256)": "da4f8431",
							"isAdmin(address)": "24d7806c",
							"lastTimeRewardApplicable()": "80faa57d",
							"lastUpdateTime()": "c8f33c91",
							"modificationAdmin(address,bool)": "18e20ecf",
							"owner()": "8da5cb5b",
							"powersOf(address)": "b79ec812",
							"rateInterval()": "6139d4b4",
							"rateIntervalDenominator()": "7a6fcee7",
							"rateIntervalNumerator()": "3c4045cf",
							"renounceOwnership()": "715018a6",
							"rewardPerToken(uint256)": "874c120b",
							"rewardPerTokenStored()": "df136d65",
							"rewards(address)": "0700037d",
							"rewardsToken()": "d1af0c7d",
							"setConfig(uint256,uint256,uint256)": "129ee21a",
							"setRewardToken(address)": "8aee8127",
							"setStartTime(uint256)": "3e0a322d",
							"stake(address,uint256)": "adc9772e",
							"startTime()": "78e97925",
							"totalPowers()": "6917c501",
							"totalRewards()": "0e15561a",
							"transferOwnership(address)": "f2fde38b",
							"userLastUpdateTime(address)": "8107368b",
							"userRewardPerTokenPaid(address)": "8b876347"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"oldState\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"newState\",\"type\":\"bool\"}],\"name\":\"ModificationAdmin\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardPaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"curTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"earned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurRewardRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRemainPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"getRewardPool\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"leftTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rightTime\",\"type\":\"uint256\"}],\"name\":\"getTimeWeightedAveRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTimeRewardApplicable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"modificationAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"powersOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalDenominator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rateIntervalNumerator\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"rewardPerToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenStored\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rateInterval\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rateIntervalNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_rateIntervalDenominator\",\"type\":\"uint256\"}],\"name\":\"setConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"setRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setStartTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalPowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userLastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userRewardPerTokenPaid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"inviter_presell/stake.sol\":\"StakingRewards\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"inviter_presell/adminable.sol\":{\"keccak256\":\"0x077c3b664bd79c85f8dcbcfb38594ca46e79324915b0db87e9adff3431025837\",\"urls\":[\"bzz-raw://4a0d86ef7c9f4e8601f58977faa5232d325604963aebb0de4ff455f0bd5b893c\",\"dweb:/ipfs/QmTr9KaGYYdn4FvWKq1RDJL3xY8wZcaJMoJubTDz5YWM2p\"]},\"inviter_presell/stake.sol\":{\"keccak256\":\"0xe81daef51dc413b1794b337c395334878253daf5a4b1e8b770410f47623a8e3e\",\"urls\":[\"bzz-raw://419b3e621dc1540a642ec5a8d6130105fa7cec04c15ae1a57c9f5772032ac507\",\"dweb:/ipfs/Qma9Kh4s6pNkxi4Aiujht4h2xiMFYiMx37HvTnowbpK1nN\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 26,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_admins",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 28,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_owner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 994,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 192,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardsToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)1101"
							},
							{
								"astId": 196,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewards",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 203,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "totalRewards",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 205,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "startTime",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 208,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateInterval",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 211,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalNumerator",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 214,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rateIntervalDenominator",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 216,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 218,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "rewardPerTokenStored",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 222,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userRewardPerTokenPaid",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 226,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "userLastUpdateTime",
								"offset": 0,
								"slot": "13",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 228,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_totalPowers",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 232,
								"contract": "inviter_presell/stake.sol:StakingRewards",
								"label": "_balances",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)1101": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 994,
								"contract": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":645:3915  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A92470C0FDEF6D101DA41CA8B9B 0xBB PUSH16 0x6057FF25E98D5F7F138DFEF9D69F4864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "645:3270:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0x5A92470C0FDEF6D101DA41CA8B9B 0xBB PUSH16 0x6057FF25E98D5F7F138DFEF9D69F4864 PUSH20 0x6F6C634300081100330000000000000000000000 ",
							"sourceMap": "645:3270:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 645,
									"end": 3915,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206d5a92470c0fdef6d101da41ca8b9bbb6f6057ff25e98d5f7f138dfef9d69f4864736f6c63430008110033",
									".code": [
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 645,
											"end": 3915,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xc3d946432c0ddbb1f846a0d3985be71299df331b91d06732152117f62f0be2b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4632c341a06ba5c079b51ca5a915efab4e6ab57735b37839b3e8365ff806a43e\",\"dweb:/ipfs/QmTHT3xHYed2wajEoA5qu7ii2BxLpPhQZHwAhtLK5Z7ANK\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/Address.sol\":179:7908  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP14 PUSH4 0xF3CCD536 RETURNDATACOPY 0xD3 0xE2 0x4B CALLVALUE BLOCKHASH 0xE3 CALLCODE SDIV 0xCD 0xBD 0x2B SWAP8 0xEA 0xFB 0xAC 0xEA 0xC4 0xDD KECCAK256 LOG4 0xDA DUP13 PUSH23 0xE064736F6C634300081100330000000000000000000000 ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP5 DUP14 PUSH4 0xF3CCD536 RETURNDATACOPY 0xD3 0xE2 0x4B CALLVALUE BLOCKHASH 0xE3 CALLCODE SDIV 0xCD 0xBD 0x2B SWAP8 0xEA 0xFB 0xAC 0xEA 0xC4 0xDD KECCAK256 LOG4 0xDA DUP13 PUSH23 0xE064736F6C634300081100330000000000000000000000 ",
							"sourceMap": "179:7729:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 179,
									"end": 7908,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220948d63f3ccd5363ed3e24b3440e3f205cdbd2b97eafbaceac4dd20a4da8c76e064736f6c63430008110033",
									".code": [
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 179,
											"end": 7908,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x51b758a8815ecc9596c66c37d56b1d33883a444631a3f916b9fe65cb863ef7c4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://997ca03557985b3c6f9143a18b6c3a710b3bc1c7f189ee956d305a966ecfb922\",\"dweb:/ipfs/QmQaD3Wb62F88SHqmpLttvF6wKuPDQep2LLUcKPekeRzvz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":467:6768  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xF7 ISZERO 0x1F GASPRICE SWAP16 PUSH11 0xFC566DCC87F72F3197B4C1 SUB GASLIMIT PUSH31 0x5DACFCD99AFF0E986F7B1B64736F6C63430008110033000000000000000000 ",
							"sourceMap": "467:6301:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND 0xF7 ISZERO 0x1F GASPRICE SWAP16 PUSH11 0xFC566DCC87F72F3197B4C1 SUB GASLIMIT PUSH31 0x5DACFCD99AFF0E986F7B1B64736F6C63430008110033000000000000000000 ",
							"sourceMap": "467:6301:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 467,
									"end": 6768,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200bf7151f3a9f6afc566dcc87f72f3197b4c103457e5dacfcd99aff0e986f7b1b64736f6c63430008110033",
									".code": [
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 467,
											"end": 6768,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"inviter_presell/adminable.sol",
								"inviter_presell/stake.sol",
								"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"node_modules/@openzeppelin/contracts/utils/Address.sol",
								"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://973868f808e88e21a1a0a01d4839314515ee337ad096286c88e41b74dcc11fc2\",\"dweb:/ipfs/QmfYuZxRfx2J2xdk4EXN7jKg4bUYEMTaYk9BAw9Bqn4o2Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/adminable.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/adminable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> inviter_presell/stake.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "inviter_presell/stake.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"inviter_presell/adminable.sol": {
				"ast": {
					"absolutePath": "inviter_presell/adminable.sol",
					"exportedSymbols": {
						"Adminable": [
							175
						],
						"Context": [
							20
						]
					},
					"id": 176,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "2:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 20,
							"linearizedBaseContracts": [
								20
							],
							"name": "Context",
							"nameLocation": "48:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "125:36:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "143:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "147:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "143:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "136:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "72:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "82:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "116:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "116:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "115:9:0"
									},
									"scope": 20,
									"src": "63:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 18,
										"nodeType": "Block",
										"src": "236:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 15,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "254:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "258:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "254:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 17,
												"nodeType": "Return",
												"src": "247:15:0"
											}
										]
									},
									"id": 19,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "178:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "220:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "219:16:0"
									},
									"scope": 20,
									"src": "169:101:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 176,
							"src": "30:243:0",
							"usedErrors": []
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 21,
										"name": "Context",
										"nameLocations": [
											"310:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 20,
										"src": "310:7:0"
									},
									"id": 22,
									"nodeType": "InheritanceSpecifier",
									"src": "310:7:0"
								}
							],
							"canonicalName": "Adminable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								20
							],
							"name": "Adminable",
							"nameLocation": "297:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 26,
									"mutability": "mutable",
									"name": "_admins",
									"nameLocation": "358:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "325:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "333:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 24,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "344:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 28,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "388:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 175,
									"src": "372:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 27,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "372:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 34,
									"name": "OwnershipTransferred",
									"nameLocation": "409:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "446:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "430:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 29,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "430:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "461:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 31,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "429:57:0"
									},
									"src": "403:84:0"
								},
								{
									"anonymous": false,
									"eventSelector": "82f1fa40a3d82dea3e406073819290601f436580aa7c69f9feb61f885bdd8854",
									"id": 42,
									"name": "ModificationAdmin",
									"nameLocation": "499:17:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"indexed": true,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "533:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "517:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 35,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldState",
												"nameLocation": "545:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "540:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 37,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "540:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 40,
												"indexed": false,
												"mutability": "mutable",
												"name": "newState",
												"nameLocation": "560:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "555:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 39,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "555:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "516:53:0"
									},
									"src": "493:77:0"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "592:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 46,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "622:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "622:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "603:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "603:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "603:32:0"
											}
										]
									},
									"id": 51,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "589:2:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 175,
									"src": "578:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "672:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 54,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "691:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "691:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 56,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "702:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "702:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "691:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "716:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															},
															"value": "Adminable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a29d9c839228d3107b3fe4dac85420c1ce99a450da6feffbd6943233aa4962bb",
																"typeString": "literal_string \"Adminable: caller is not the owner\""
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "683:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "683:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "683:70:0"
											},
											{
												"id": 62,
												"nodeType": "PlaceholderStatement",
												"src": "764:1:0"
											}
										]
									},
									"id": 64,
									"name": "onlyOwner",
									"nameLocation": "660:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "669:2:0"
									},
									"src": "651:122:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 75,
										"nodeType": "Block",
										"src": "802:99:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 68,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 10,
																		"src": "829:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 69,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "829:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 67,
																"name": "isAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "821:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "821:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41646d696e61626c653a2063616c6c6572206973206e6f74207468652061646d696e",
															"id": 71,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "844:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															},
															"value": "Adminable: caller is not the admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_af0398fed9800d7a9378b51955ae9d41ff550d70971b38f8f9a9ff0b698fa045",
																"typeString": "literal_string \"Adminable: caller is not the admin\""
															}
														],
														"id": 66,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "813:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 72,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 73,
												"nodeType": "ExpressionStatement",
												"src": "813:68:0"
											},
											{
												"id": 74,
												"nodeType": "PlaceholderStatement",
												"src": "892:1:0"
											}
										]
									},
									"id": 76,
									"name": "onlyAdmin",
									"nameLocation": "790:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "799:2:0"
									},
									"src": "781:120:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "964:32:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "975:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "918:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "955:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 78,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "954:9:0"
									},
									"scope": 175,
									"src": "909:87:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 95,
										"nodeType": "Block",
										"src": "1073:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 91,
														"name": "_admins",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1091:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 93,
													"indexExpression": {
														"id": 92,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 86,
														"src": "1099:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1091:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 90,
												"id": 94,
												"nodeType": "Return",
												"src": "1084:23:0"
											}
										]
									},
									"functionSelector": "24d7806c",
									"id": 96,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isAdmin",
									"nameLocation": "1013:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1029:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1021:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1020:17:0"
									},
									"returnParameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 96,
												"src": "1067:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 88,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1067:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1066:6:0"
									},
									"scope": 175,
									"src": "1004:111:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 108,
										"nodeType": "Block",
										"src": "1177:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1207:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 102,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1207:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1207:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 101,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1188:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1188:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "1188:30:0"
											}
										]
									},
									"functionSelector": "715018a6",
									"id": 109,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 99,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 98,
												"name": "onlyOwner",
												"nameLocations": [
													"1167:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1167:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1167:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1132:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1149:2:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1177:0:0"
									},
									"scope": 175,
									"src": "1123:103:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "1304:131:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 117,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 111,
																"src": "1323:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1343:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 119,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1335:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 118,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1335:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1335:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1323:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1347:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 116,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1315:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1315:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 125,
												"nodeType": "ExpressionStatement",
												"src": "1315:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "1418:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 126,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 150,
														"src": "1399:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1399:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "ExpressionStatement",
												"src": "1399:28:0"
											}
										]
									},
									"functionSelector": "f2fde38b",
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "onlyOwner",
												"nameLocations": [
													"1294:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1294:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1294:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1243:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1269:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "1261:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:18:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1304:0:0"
									},
									"scope": 175,
									"src": "1234:201:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "1506:128:0",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "1525:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "1517:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "1517:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 139,
												"initialValue": {
													"id": 138,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "1536:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1517:25:0"
											},
											{
												"expression": {
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 140,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 28,
														"src": "1553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 141,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "1562:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1553:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 143,
												"nodeType": "ExpressionStatement",
												"src": "1553:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 145,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "1607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 146,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "1617:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 144,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 34,
														"src": "1586:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1586:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 148,
												"nodeType": "EmitStatement",
												"src": "1581:45:0"
											}
										]
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "1452:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1479:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "1471:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 132,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1470:18:0"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:0"
									},
									"scope": 175,
									"src": "1443:191:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 173,
										"nodeType": "Block",
										"src": "1721:105:0",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"id": 160,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 161,
																"name": "_admins",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1763:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 163,
															"indexExpression": {
																"id": 162,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "1771:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1763:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 164,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "1779:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 159,
														"name": "ModificationAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "1737:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
															"typeString": "function (address,bool,bool)"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1737:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "EmitStatement",
												"src": "1732:53:0"
											},
											{
												"expression": {
													"id": 171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 167,
															"name": "_admins",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "1796:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "1804:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1796:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 170,
														"name": "state",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "1813:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1796:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 172,
												"nodeType": "ExpressionStatement",
												"src": "1796:22:0"
											}
										]
									},
									"functionSelector": "18e20ecf",
									"id": 174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 157,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 156,
												"name": "onlyOwner",
												"nameLocations": [
													"1711:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1711:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1711:9:0"
										}
									],
									"name": "modificationAdmin",
									"nameLocation": "1651:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1677:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1669:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1669:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "state",
												"nameLocation": "1689:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "1684:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 153,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1684:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1668:27:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1721:0:0"
									},
									"scope": 175,
									"src": "1642:184:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 176,
							"src": "279:1550:0",
							"usedErrors": []
						}
					],
					"src": "2:1829:0"
				},
				"id": 0
			},
			"inviter_presell/stake.sol": {
				"ast": {
					"absolutePath": "inviter_presell/stake.sol",
					"exportedSymbols": {
						"Address": [
							1622
						],
						"Adminable": [
							175
						],
						"Context": [
							20
						],
						"IERC20": [
							1101
						],
						"ReentrancyGuard": [
							1023
						],
						"SafeERC20": [
							1325
						],
						"SafeMath": [
							1934
						],
						"StakingRewards": [
							983
						]
					},
					"id": 984,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"absolutePath": "inviter_presell/adminable.sol",
							"file": "./adminable.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 984,
							"sourceUnit": 176,
							"src": "30:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"file": "../node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 984,
							"sourceUnit": 1935,
							"src": "57:73:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 984,
							"sourceUnit": 1326,
							"src": "132:81:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "../node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 984,
							"sourceUnit": 1024,
							"src": "215:78:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 182,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 984,
							"sourceUnit": 1102,
							"src": "295:72:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 183,
										"name": "Adminable",
										"nameLocations": [
											"398:9:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "398:9:1"
									},
									"id": 184,
									"nodeType": "InheritanceSpecifier",
									"src": "398:9:1"
								},
								{
									"baseName": {
										"id": 185,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"410:15:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1023,
										"src": "410:15:1"
									},
									"id": 186,
									"nodeType": "InheritanceSpecifier",
									"src": "410:15:1"
								}
							],
							"canonicalName": "StakingRewards",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 983,
							"linearizedBaseContracts": [
								983,
								1023,
								175,
								20
							],
							"name": "StakingRewards",
							"nameLocation": "380:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 189,
									"libraryName": {
										"id": 187,
										"name": "SafeMath",
										"nameLocations": [
											"438:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1934,
										"src": "438:8:1"
									},
									"nodeType": "UsingForDirective",
									"src": "432:27:1",
									"typeName": {
										"id": 188,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "451:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "d1af0c7d",
									"id": 192,
									"mutability": "mutable",
									"name": "rewardsToken",
									"nameLocation": "481:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "467:26:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$1101",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 191,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 190,
											"name": "IERC20",
											"nameLocations": [
												"467:6:1"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1101,
											"src": "467:6:1"
										},
										"referencedDeclaration": 1101,
										"src": "467:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$1101",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0700037d",
									"id": 196,
									"mutability": "mutable",
									"name": "rewards",
									"nameLocation": "535:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "500:42:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 195,
										"keyType": {
											"id": 193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "508:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "500:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 194,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "519:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0e15561a",
									"id": 203,
									"mutability": "mutable",
									"name": "totalRewards",
									"nameLocation": "566:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "551:47:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 197,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "551:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										},
										"id": 202,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "313638303030",
											"id": 198,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "581:6:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_168000_by_1",
												"typeString": "int_const 168000"
											},
											"value": "168000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 201,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 199,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "590:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 200,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "596:2:1",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "590:8:1",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "581:17:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_168000000000000000000000_by_1",
											"typeString": "int_const 168000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "78e97925",
									"id": 205,
									"mutability": "mutable",
									"name": "startTime",
									"nameLocation": "620:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "605:24:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "605:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6139d4b4",
									"id": 208,
									"mutability": "mutable",
									"name": "rateInterval",
									"nameLocation": "651:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "636:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "636:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "666:10:1",
										"subdenomination": "minutes",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_600_by_1",
											"typeString": "int_const 600"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c4045cf",
									"id": 211,
									"mutability": "mutable",
									"name": "rateIntervalNumerator",
									"nameLocation": "698:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "683:40:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 209,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "683:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35",
										"id": 210,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "722:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5_by_1",
											"typeString": "int_const 5"
										},
										"value": "5"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a6fcee7",
									"id": 214,
									"mutability": "mutable",
									"name": "rateIntervalDenominator",
									"nameLocation": "745:23:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "730:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 212,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "730:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 213,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "771:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c8f33c91",
									"id": 216,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "797:14:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "782:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 215,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "782:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "df136d65",
									"id": 218,
									"mutability": "mutable",
									"name": "rewardPerTokenStored",
									"nameLocation": "833:20:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "818:35:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 217,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8b876347",
									"id": 222,
									"mutability": "mutable",
									"name": "userRewardPerTokenPaid",
									"nameLocation": "897:22:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "862:57:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 221,
										"keyType": {
											"id": 219,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "870:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "862:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 220,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "881:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8107368b",
									"id": 226,
									"mutability": "mutable",
									"name": "userLastUpdateTime",
									"nameLocation": "961:18:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "926:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 225,
										"keyType": {
											"id": 223,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "934:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "926:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 224,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "945:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 228,
									"mutability": "mutable",
									"name": "_totalPowers",
									"nameLocation": "1004:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "988:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 227,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "988:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1059:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 983,
									"src": "1023:45:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 231,
										"keyType": {
											"id": 229,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1031:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1023:27:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 230,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1042:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "1120:554:1",
										"statements": [
											{
												"assignments": [
													237
												],
												"declarations": [
													{
														"constant": false,
														"id": 237,
														"mutability": "mutable",
														"name": "time",
														"nameLocation": "1139:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "1131:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 236,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1131:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"baseExpression": {
														"id": 238,
														"name": "userLastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1146:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 240,
													"indexExpression": {
														"id": 239,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1165:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1146:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1131:42:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 242,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "1187:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 243,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "1195:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "IfStatement",
												"src": "1184:65:1",
												"trueBody": {
													"id": 249,
													"nodeType": "Block",
													"src": "1206:43:1",
													"statements": [
														{
															"expression": {
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 245,
																	"name": "time",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 237,
																	"src": "1221:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 246,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "1228:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1221:16:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 248,
															"nodeType": "ExpressionStatement",
															"src": "1221:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													252
												],
												"declarations": [
													{
														"constant": false,
														"id": 252,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "1267:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 300,
														"src": "1259:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 251,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1259:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 258,
												"initialValue": {
													"arguments": [
														{
															"id": 254,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "1297:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 255,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1303:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1309:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1303:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 253,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "1274:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1274:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1259:60:1"
											},
											{
												"expression": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 259,
														"name": "rewardPerTokenStored",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "1330:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 261,
																"name": "rate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 252,
																"src": "1368:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 260,
															"name": "rewardPerToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "1353:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) view returns (uint256)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1353:20:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1330:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 264,
												"nodeType": "ExpressionStatement",
												"src": "1330:43:1"
											},
											{
												"expression": {
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 265,
														"name": "lastUpdateTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 216,
														"src": "1384:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 266,
															"name": "lastTimeRewardApplicable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 593,
															"src": "1401:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1401:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1384:43:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "1384:43:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 270,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1442:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1461:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1453:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 271,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1453:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1453:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1442:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 298,
												"nodeType": "IfStatement",
												"src": "1438:217:1",
												"trueBody": {
													"id": 297,
													"nodeType": "Block",
													"src": "1465:190:1",
													"statements": [
														{
															"expression": {
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 276,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "1480:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 278,
																	"indexExpression": {
																		"id": 277,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1488:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1480:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 280,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 234,
																			"src": "1506:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 279,
																		"name": "earned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 666,
																		"src": "1499:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																			"typeString": "function (address) view returns (uint256)"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1499:15:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1480:34:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 283,
															"nodeType": "ExpressionStatement",
															"src": "1480:34:1"
														},
														{
															"expression": {
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 284,
																		"name": "userRewardPerTokenPaid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 222,
																		"src": "1529:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 286,
																	"indexExpression": {
																		"id": 285,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1552:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1529:31:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 287,
																	"name": "rewardPerTokenStored",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "1563:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1529:54:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ExpressionStatement",
															"src": "1529:54:1"
														},
														{
															"expression": {
																"id": 295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 290,
																		"name": "userLastUpdateTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 226,
																		"src": "1598:18:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 292,
																	"indexExpression": {
																		"id": 291,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "1617:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1598:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 293,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1628:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1634:9:1",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1628:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1598:45:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 296,
															"nodeType": "ExpressionStatement",
															"src": "1598:45:1"
														}
													]
												}
											},
											{
												"id": 299,
												"nodeType": "PlaceholderStatement",
												"src": "1665:1:1"
											}
										]
									},
									"id": 301,
									"name": "updateReward",
									"nameLocation": "1090:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1111:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "1103:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1103:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1102:17:1"
									},
									"src": "1081:593:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 324,
										"nodeType": "Block",
										"src": "1809:165:1",
										"statements": [
											{
												"expression": {
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 312,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "1820:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 313,
														"name": "_rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 303,
														"src": "1835:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1820:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "1820:28:1"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "rateIntervalNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "1859:21:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 317,
														"name": "_rateIntervalNumerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "1883:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1859:46:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "1859:46:1"
											},
											{
												"expression": {
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 320,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "1916:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 321,
														"name": "_rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "1942:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1916:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "1916:50:1"
											}
										]
									},
									"functionSelector": "129ee21a",
									"id": 325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 310,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 309,
												"name": "onlyOwner",
												"nameLocations": [
													"1799:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "1799:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1799:9:1"
										}
									],
									"name": "setConfig",
									"nameLocation": "1691:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "_rateInterval",
												"nameLocation": "1709:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "1701:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1701:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "_rateIntervalNumerator",
												"nameLocation": "1732:22:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "1724:30:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1724:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "_rateIntervalDenominator",
												"nameLocation": "1764:24:1",
												"nodeType": "VariableDeclaration",
												"scope": 325,
												"src": "1756:32:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1700:89:1"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1809:0:1"
									},
									"scope": 983,
									"src": "1682:292:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2037:35:1",
										"statements": [
											{
												"expression": {
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 332,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2048:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 333,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "2060:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2048:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "2048:16:1"
											}
										]
									},
									"functionSelector": "3e0a322d",
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 329,
												"name": "onlyAdmin",
												"nameLocations": [
													"2027:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "2027:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "2027:9:1"
										}
									],
									"name": "setStartTime",
									"nameLocation": "1991:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2012:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "2004:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2004:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2003:14:1"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2037:0:1"
									},
									"scope": 983,
									"src": "1982:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 344,
										"nodeType": "Block",
										"src": "2135:38:1",
										"statements": [
											{
												"expression": {
													"id": 342,
													"name": "_totalPowers",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 228,
													"src": "2153:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 341,
												"id": 343,
												"nodeType": "Return",
												"src": "2146:19:1"
											}
										]
									},
									"functionSelector": "6917c501",
									"id": 345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalPowers",
									"nameLocation": "2089:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2100:2:1"
									},
									"returnParameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "2126:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2125:9:1"
									},
									"scope": 983,
									"src": "2080:93:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "2234:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 350,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "2252:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2258:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "2252:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 349,
												"id": 352,
												"nodeType": "Return",
												"src": "2245:22:1"
											}
										]
									},
									"functionSelector": "9a5b17b0",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "curTime",
									"nameLocation": "2190:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2197:2:1"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "2225:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:9:1"
									},
									"scope": 983,
									"src": "2181:94:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "2350:44:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 361,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "2368:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 363,
													"indexExpression": {
														"id": 362,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 356,
														"src": "2378:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2368:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 360,
												"id": 364,
												"nodeType": "Return",
												"src": "2361:25:1"
											}
										]
									},
									"functionSelector": "b79ec812",
									"id": 366,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "powersOf",
									"nameLocation": "2292:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2309:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2301:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 355,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2301:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2300:17:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 366,
												"src": "2341:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2341:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2340:9:1"
									},
									"scope": 983,
									"src": "2283:111:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 376,
										"nodeType": "Block",
										"src": "2460:56:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 372,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "2492:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2498:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "2492:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 371,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "2478:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2478:30:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 370,
												"id": 375,
												"nodeType": "Return",
												"src": "2471:37:1"
											}
										]
									},
									"functionSelector": "9499c549",
									"id": 377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardPool",
									"nameLocation": "2411:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2427:2:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 377,
												"src": "2451:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2451:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2450:9:1"
									},
									"scope": 983,
									"src": "2402:114:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 441,
										"nodeType": "Block",
										"src": "2591:498:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 384,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2605:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 385,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2618:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2605:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 390,
												"nodeType": "IfStatement",
												"src": "2602:65:1",
												"trueBody": {
													"id": 389,
													"nodeType": "Block",
													"src": "2621:46:1",
													"statements": [
														{
															"expression": {
																"id": 387,
																"name": "totalRewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2643:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 383,
															"id": 388,
															"nodeType": "Return",
															"src": "2636:19:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 391,
														"name": "time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "2680:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 392,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "2687:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2680:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 397,
												"nodeType": "IfStatement",
												"src": "2677:56:1",
												"trueBody": {
													"id": 396,
													"nodeType": "Block",
													"src": "2698:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2720:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 383,
															"id": 395,
															"nodeType": "Return",
															"src": "2713:8:1"
														}
													]
												}
											},
											{
												"assignments": [
													399
												],
												"declarations": [
													{
														"constant": false,
														"id": 399,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "2751:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "2743:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 398,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2743:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 408,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 400,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 379,
																		"src": "2760:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 401,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "2767:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2760:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 403,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2759:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 404,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "2780:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2759:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2795:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2759:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2743:53:1"
											},
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "2815:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 441,
														"src": "2807:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 409,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2807:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"id": 411,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2823:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2807:28:1"
											},
											{
												"body": {
													"id": 433,
													"nodeType": "Block",
													"src": "2881:98:1",
													"statements": [
														{
															"expression": {
																"id": 431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 423,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 410,
																	"src": "2896:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 424,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "2904:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 427,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 425,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 410,
																				"src": "2912:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 426,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "2920:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2912:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 428,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "2944:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2912:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2904:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2896:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 432,
															"nodeType": "ExpressionStatement",
															"src": "2896:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 417,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "2865:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 418,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 399,
														"src": "2869:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2865:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 434,
												"initializationExpression": {
													"assignments": [
														414
													],
													"declarations": [
														{
															"constant": false,
															"id": 414,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2858:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 434,
															"src": "2850:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 413,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2850:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 416,
													"initialValue": {
														"hexValue": "30",
														"id": 415,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2862:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2850:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "2876:3:1",
														"subExpression": {
															"id": 420,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 414,
															"src": "2878:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 422,
													"nodeType": "ExpressionStatement",
													"src": "2876:3:1"
												},
												"nodeType": "ForStatement",
												"src": "2846:133:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 439,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 435,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 410,
															"src": "3026:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 436,
															"name": "rateIntervalNumerator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 211,
															"src": "3034:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3026:29:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 438,
														"name": "rateIntervalDenominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "3058:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3026:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 383,
												"id": 440,
												"nodeType": "Return",
												"src": "3019:62:1"
											}
										]
									},
									"functionSelector": "5cfa91f4",
									"id": 442,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardPool",
									"nameLocation": "2533:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "2555:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2547:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 378,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2546:14:1"
									},
									"returnParameters": {
										"id": 383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "2582:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2581:9:1"
									},
									"scope": 983,
									"src": "2524:565:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "3166:349:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 449,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3180:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3193:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3180:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 455,
												"nodeType": "IfStatement",
												"src": "3177:62:1",
												"trueBody": {
													"id": 454,
													"nodeType": "Block",
													"src": "3196:43:1",
													"statements": [
														{
															"expression": {
																"id": 452,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "3218:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 448,
															"id": 453,
															"nodeType": "Return",
															"src": "3211:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													457
												],
												"declarations": [
													{
														"constant": false,
														"id": 457,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "3257:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "3249:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 456,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3249:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 466,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 458,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 444,
																		"src": "3266:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 459,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "3273:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3266:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 461,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3265:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 462,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3286:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3265:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 464,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3301:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3265:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3249:53:1"
											},
											{
												"assignments": [
													468
												],
												"declarations": [
													{
														"constant": false,
														"id": 468,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3321:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "3313:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 467,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3313:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 470,
												"initialValue": {
													"id": 469,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "3329:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3313:28:1"
											},
											{
												"body": {
													"id": 491,
													"nodeType": "Block",
													"src": "3387:98:1",
													"statements": [
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 481,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "3402:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 488,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 482,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "3410:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 487,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 483,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "3418:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 484,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3426:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3418:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 486,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3450:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3418:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3410:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3402:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "3402:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 475,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 472,
														"src": "3371:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 476,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "3375:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3371:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"initializationExpression": {
													"assignments": [
														472
													],
													"declarations": [
														{
															"constant": false,
															"id": 472,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3364:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 492,
															"src": "3356:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 471,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3356:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 474,
													"initialValue": {
														"hexValue": "30",
														"id": 473,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3368:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3356:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 479,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3382:3:1",
														"subExpression": {
															"id": 478,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "3384:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 480,
													"nodeType": "ExpressionStatement",
													"src": "3382:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3352:133:1"
											},
											{
												"expression": {
													"id": 493,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 468,
													"src": "3502:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 448,
												"id": 494,
												"nodeType": "Return",
												"src": "3495:12:1"
											}
										]
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRemainPool",
									"nameLocation": "3106:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3129:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3121:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 443,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:14:1"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "3157:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3157:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3156:9:1"
									},
									"scope": 983,
									"src": "3097:418:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 549,
										"nodeType": "Block",
										"src": "3590:349:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 503,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "3604:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3617:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3604:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 509,
												"nodeType": "IfStatement",
												"src": "3601:62:1",
												"trueBody": {
													"id": 508,
													"nodeType": "Block",
													"src": "3620:43:1",
													"statements": [
														{
															"expression": {
																"id": 506,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "3642:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 502,
															"id": 507,
															"nodeType": "Return",
															"src": "3635:16:1"
														}
													]
												}
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "3681:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3673:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3673:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 514,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 512,
																		"name": "time",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 498,
																		"src": "3690:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 513,
																		"name": "startTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 205,
																		"src": "3697:9:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3690:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 515,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3689:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 516,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "3710:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3689:33:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"hexValue": "31",
														"id": 518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3725:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3689:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3673:53:1"
											},
											{
												"assignments": [
													522
												],
												"declarations": [
													{
														"constant": false,
														"id": 522,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "3745:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 549,
														"src": "3737:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 521,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 524,
												"initialValue": {
													"id": 523,
													"name": "totalRewards",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "3753:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3737:28:1"
											},
											{
												"body": {
													"id": 545,
													"nodeType": "Block",
													"src": "3811:98:1",
													"statements": [
														{
															"expression": {
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 535,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 522,
																	"src": "3826:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 536,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 522,
																		"src": "3834:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 537,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "3842:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 538,
																				"name": "rateIntervalNumerator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "3850:21:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3842:29:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 540,
																			"name": "rateIntervalDenominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 214,
																			"src": "3874:23:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3842:55:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3834:63:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3826:71:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 544,
															"nodeType": "ExpressionStatement",
															"src": "3826:71:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 529,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "3795:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 530,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 511,
														"src": "3799:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3795:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 546,
												"initializationExpression": {
													"assignments": [
														526
													],
													"declarations": [
														{
															"constant": false,
															"id": 526,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3788:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 546,
															"src": "3780:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 525,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "3780:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 528,
													"initialValue": {
														"hexValue": "30",
														"id": 527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3792:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3780:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "3806:3:1",
														"subExpression": {
															"id": 532,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "3808:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 534,
													"nodeType": "ExpressionStatement",
													"src": "3806:3:1"
												},
												"nodeType": "ForStatement",
												"src": "3776:133:1"
											},
											{
												"expression": {
													"id": 547,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 522,
													"src": "3926:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 502,
												"id": 548,
												"nodeType": "Return",
												"src": "3919:12:1"
											}
										]
									},
									"functionSelector": "4dbdc4eb",
									"id": 550,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRemainPool",
									"nameLocation": "3532:13:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "3554:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3546:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3546:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3545:14:1"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 550,
												"src": "3581:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3580:9:1"
									},
									"scope": 983,
									"src": "3523:416:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "4005:57:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 556,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4038:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4044:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4038:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 555,
														"name": "_getRewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "4023:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4023:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 554,
												"id": 559,
												"nodeType": "Return",
												"src": "4016:38:1"
											}
										]
									},
									"functionSelector": "cdda56e0",
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurRewardRate",
									"nameLocation": "3956:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3972:2:1"
									},
									"returnParameters": {
										"id": 554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "3996:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3996:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3995:9:1"
									},
									"scope": 983,
									"src": "3947:115:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "4139:153:1",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "curPoolAmount",
														"nameLocation": "4158:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "4150:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4150:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 573,
												"initialValue": {
													"arguments": [
														{
															"id": 571,
															"name": "time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "4188:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 570,
														"name": "getRewardPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "4174:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4174:19:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4150:43:1"
											},
											{
												"assignments": [
													575
												],
												"declarations": [
													{
														"constant": false,
														"id": 575,
														"mutability": "mutable",
														"name": "rewardRate",
														"nameLocation": "4212:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "4204:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 574,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4204:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 580,
												"initialValue": {
													"arguments": [
														{
															"id": 578,
															"name": "rateInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 208,
															"src": "4243:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 576,
															"name": "curPoolAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "4225:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4239:3:1",
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1843,
														"src": "4225:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4225:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4204:52:1"
											},
											{
												"expression": {
													"id": 581,
													"name": "rewardRate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 575,
													"src": "4274:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 567,
												"id": 582,
												"nodeType": "Return",
												"src": "4267:17:1"
											}
										]
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getRewardRate",
									"nameLocation": "4079:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "4102:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4094:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:14:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "4130:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 565,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4130:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:9:1"
									},
									"scope": 983,
									"src": "4070:222:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "4368:41:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 589,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "4386:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4392:9:1",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "4386:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 588,
												"id": 591,
												"nodeType": "Return",
												"src": "4379:22:1"
											}
										]
									},
									"functionSelector": "80faa57d",
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "lastTimeRewardApplicable",
									"nameLocation": "4311:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4335:2:1"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "4359:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4359:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4358:9:1"
									},
									"scope": 983,
									"src": "4302:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 625,
										"nodeType": "Block",
										"src": "4491:274:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 600,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "4506:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 601,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4522:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4506:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 606,
												"nodeType": "IfStatement",
												"src": "4502:77:1",
												"trueBody": {
													"id": 605,
													"nodeType": "Block",
													"src": "4525:54:1",
													"statements": [
														{
															"expression": {
																"id": 603,
																"name": "rewardPerTokenStored",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "4547:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 599,
															"id": 604,
															"nodeType": "Return",
															"src": "4540:27:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 621,
																	"name": "_totalPowers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 228,
																	"src": "4729:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "31653138",
																			"id": 618,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4719:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			},
																			"value": "1e18"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000000000000000000_by_1",
																				"typeString": "int_const 1000000000000000000"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 615,
																					"name": "rewardRate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 595,
																					"src": "4703:10:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 612,
																							"name": "lastUpdateTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 216,
																							"src": "4683:14:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"expression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 609,
																								"name": "lastTimeRewardApplicable",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 593,
																								"src": "4652:24:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 610,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "4652:26:1",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 611,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "4679:3:1",
																						"memberName": "sub",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1813,
																						"src": "4652:30:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 613,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4652:46:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4699:3:1",
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1828,
																				"src": "4652:50:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4652:62:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4715:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1828,
																		"src": "4652:66:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4652:72:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4725:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1843,
																"src": "4652:76:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4652:90:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 607,
															"name": "rewardPerTokenStored",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "4609:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 608,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4630:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1798,
														"src": "4609:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4609:148:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 599,
												"id": 624,
												"nodeType": "Return",
												"src": "4589:168:1"
											}
										]
									},
									"functionSelector": "874c120b",
									"id": 626,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "rewardPerToken",
									"nameLocation": "4426:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 595,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "4449:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4441:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4441:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4440:20:1"
									},
									"returnParameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 626,
												"src": "4482:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4482:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4481:9:1"
									},
									"scope": 983,
									"src": "4417:348:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 665,
										"nodeType": "Block",
										"src": "4836:233:1",
										"statements": [
											{
												"assignments": [
													634
												],
												"declarations": [
													{
														"constant": false,
														"id": 634,
														"mutability": "mutable",
														"name": "rate",
														"nameLocation": "4855:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 665,
														"src": "4847:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 633,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4847:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 642,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 636,
																"name": "userLastUpdateTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "4885:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 638,
															"indexExpression": {
																"id": 637,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4904:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4885:27:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 639,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4914:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4920:9:1",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4914:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 635,
														"name": "getTimeWeightedAveRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "4862:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) view returns (uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4862:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4847:83:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 660,
																"name": "rewards",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 196,
																"src": "5044:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 662,
															"indexExpression": {
																"id": 661,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "5052:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5044:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"hexValue": "31653138",
																	"id": 657,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5034:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	},
																	"value": "1e18"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_1000000000000000000_by_1",
																		"typeString": "int_const 1000000000000000000"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"baseExpression": {
																						"id": 651,
																						"name": "userRewardPerTokenPaid",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 222,
																						"src": "4996:22:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																							"typeString": "mapping(address => uint256)"
																						}
																					},
																					"id": 653,
																					"indexExpression": {
																						"id": 652,
																						"name": "account",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 628,
																						"src": "5019:7:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4996:31:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 648,
																							"name": "rate",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 634,
																							"src": "4986:4:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						],
																						"id": 647,
																						"name": "rewardPerToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 626,
																						"src": "4971:14:1",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																							"typeString": "function (uint256) view returns (uint256)"
																						}
																					},
																					"id": 649,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "4971:20:1",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4992:3:1",
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1813,
																				"src": "4971:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4971:57:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"baseExpression": {
																				"id": 643,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "4948:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 645,
																			"indexExpression": {
																				"id": 644,
																				"name": "account",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 628,
																				"src": "4958:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4948:18:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4967:3:1",
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1828,
																		"src": "4948:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4948:81:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5030:3:1",
																"memberName": "div",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1843,
																"src": "4948:85:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4948:91:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5040:3:1",
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1798,
														"src": "4948:95:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4948:113:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 632,
												"id": 664,
												"nodeType": "Return",
												"src": "4941:120:1"
											}
										]
									},
									"functionSelector": "008cc262",
									"id": 666,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "earned",
									"nameLocation": "4782:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4797:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4789:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4789:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4788:17:1"
									},
									"returnParameters": {
										"id": 632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 666,
												"src": "4827:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 630,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4826:9:1"
									},
									"scope": 983,
									"src": "4773:296:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "5210:1285:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 675,
																"name": "startTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "5234:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5247:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5234:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 678,
																"name": "leftTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "5252:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 679,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "5264:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5252:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5234:39:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 682,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5277:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5289:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5277:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5234:56:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "5231:96:1",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "5292:35:1",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5314:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 674,
															"id": 687,
															"nodeType": "Return",
															"src": "5307:8:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 690,
														"name": "leftTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "5342:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 691,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "5353:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5342:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 698,
												"nodeType": "IfStatement",
												"src": "5339:72:1",
												"trueBody": {
													"id": 697,
													"nodeType": "Block",
													"src": "5364:47:1",
													"statements": [
														{
															"expression": {
																"id": 695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 693,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "5379:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 694,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5390:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5379:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 696,
															"nodeType": "ExpressionStatement",
															"src": "5379:20:1"
														}
													]
												}
											},
											{
												"assignments": [
													700
												],
												"declarations": [
													{
														"constant": false,
														"id": 700,
														"mutability": "mutable",
														"name": "leftInterval",
														"nameLocation": "5431:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "5423:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 699,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5423:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 712,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 701,
																	"name": "rateInterval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 208,
																	"src": "5447:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 704,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 702,
																					"name": "leftTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 668,
																					"src": "5463:8:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 703,
																					"name": "startTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 205,
																					"src": "5474:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "5463:20:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 705,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "5462:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 706,
																		"name": "rateInterval",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 208,
																		"src": "5487:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5462:37:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5447:52:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 709,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5446:54:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 710,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5503:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5446:69:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5423:92:1"
											},
											{
												"assignments": [
													714
												],
												"declarations": [
													{
														"constant": false,
														"id": 714,
														"mutability": "mutable",
														"name": "leftReward",
														"nameLocation": "5534:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "5526:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 713,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5526:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 719,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 716,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "5561:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 715,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "5547:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 717,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5547:23:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 718,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5573:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5547:38:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 720,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5588:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5547:53:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5526:74:1"
											},
											{
												"assignments": [
													724
												],
												"declarations": [
													{
														"constant": false,
														"id": 724,
														"mutability": "mutable",
														"name": "rightInterval",
														"nameLocation": "5621:13:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "5613:21:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 723,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5613:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 731,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 727,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 725,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5638:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 726,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 205,
																	"src": "5650:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5638:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 728,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5637:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 729,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5663:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5637:38:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5613:62:1"
											},
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "rightReward",
														"nameLocation": "5694:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "5686:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5686:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 735,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "5722:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 734,
																"name": "getRewardPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "5708:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5708:24:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"id": 737,
															"name": "rightInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 724,
															"src": "5735:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5708:40:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 739,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "5751:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5708:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5686:77:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 742,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5779:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 743,
															"name": "leftInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "5790:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5779:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 745,
														"name": "rightTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "5805:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5779:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 752,
												"nodeType": "IfStatement",
												"src": "5776:98:1",
												"trueBody": {
													"id": 751,
													"nodeType": "Block",
													"src": "5816:58:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 748,
																		"name": "leftTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "5853:8:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 747,
																	"name": "_getRewardRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 584,
																	"src": "5838:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view returns (uint256)"
																	}
																},
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5838:24:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 674,
															"id": 750,
															"nodeType": "Return",
															"src": "5831:31:1"
														}
													]
												}
											},
											{
												"assignments": [
													754
												],
												"declarations": [
													{
														"constant": false,
														"id": 754,
														"mutability": "mutable",
														"name": "midInterval",
														"nameLocation": "5894:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "5886:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 753,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5886:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 762,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 759,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "rightTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 670,
																"src": "5908:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 756,
																"name": "rightInterval",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "5920:13:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5908:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"id": 758,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "5936:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5908:36:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 760,
														"name": "leftInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5947:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5908:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5886:73:1"
											},
											{
												"assignments": [
													764
												],
												"declarations": [
													{
														"constant": false,
														"id": 764,
														"mutability": "mutable",
														"name": "startReward",
														"nameLocation": "5978:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "5970:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 763,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5970:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 768,
												"initialValue": {
													"arguments": [
														{
															"id": 766,
															"name": "leftTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 668,
															"src": "6006:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 765,
														"name": "getRemainPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 550,
														"src": "5992:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5992:23:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5970:45:1"
											},
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "midTotalReward",
														"nameLocation": "6035:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "6027:22:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 769,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6027:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"initialValue": {
													"hexValue": "30",
													"id": 771,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6052:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6027:26:1"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "nextReward",
														"nameLocation": "6072:10:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "6064:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6064:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 776,
												"initialValue": {
													"hexValue": "30",
													"id": 775,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6085:1:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6064:22:1"
											},
											{
												"assignments": [
													778
												],
												"declarations": [
													{
														"constant": false,
														"id": 778,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "6105:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "6097:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 777,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6097:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 780,
												"initialValue": {
													"id": 779,
													"name": "startReward",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 764,
													"src": "6113:11:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6097:27:1"
											},
											{
												"assignments": [
													782
												],
												"declarations": [
													{
														"constant": false,
														"id": 782,
														"mutability": "mutable",
														"name": "times",
														"nameLocation": "6143:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 829,
														"src": "6135:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 781,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6135:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 786,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 783,
														"name": "midInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "6151:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 784,
														"name": "rateInterval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "6165:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6151:26:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6135:42:1"
											},
											{
												"body": {
													"id": 815,
													"nodeType": "Block",
													"src": "6223:179:1",
													"statements": [
														{
															"expression": {
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 797,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "6238:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 800,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 798,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 778,
																			"src": "6251:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 799,
																			"name": "rateIntervalNumerator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 211,
																			"src": "6259:21:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6251:29:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 801,
																		"name": "rateIntervalDenominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 214,
																		"src": "6283:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6251:55:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6238:68:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "6238:68:1"
														},
														{
															"expression": {
																"id": 809,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 805,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 778,
																	"src": "6321:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 806,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 778,
																		"src": "6329:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 807,
																		"name": "nextReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 774,
																		"src": "6337:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6329:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6321:26:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 810,
															"nodeType": "ExpressionStatement",
															"src": "6321:26:1"
														},
														{
															"expression": {
																"id": 813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 811,
																	"name": "midTotalReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "6362:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 812,
																	"name": "nextReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 774,
																	"src": "6380:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6362:28:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 814,
															"nodeType": "ExpressionStatement",
															"src": "6362:28:1"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 791,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 788,
														"src": "6207:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 792,
														"name": "times",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "6211:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6207:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 816,
												"initializationExpression": {
													"assignments": [
														788
													],
													"declarations": [
														{
															"constant": false,
															"id": 788,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "6200:1:1",
															"nodeType": "VariableDeclaration",
															"scope": 816,
															"src": "6192:9:1",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 787,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "6192:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 790,
													"initialValue": {
														"hexValue": "30",
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6204:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "6192:13:1"
												},
												"loopExpression": {
													"expression": {
														"id": 795,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "6218:3:1",
														"subExpression": {
															"id": 794,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 788,
															"src": "6220:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 796,
													"nodeType": "ExpressionStatement",
													"src": "6218:3:1"
												},
												"nodeType": "ForStatement",
												"src": "6188:214:1"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 819,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 817,
																		"name": "midTotalReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 770,
																		"src": "6420:14:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 818,
																		"name": "leftReward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 714,
																		"src": "6437:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "6420:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 820,
																	"name": "rightReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "6450:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6420:41:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 822,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6419:43:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 823,
																	"name": "rightTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 670,
																	"src": "6466:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 824,
																	"name": "leftTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 668,
																	"src": "6478:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6466:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 826,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6465:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6419:68:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 674,
												"id": 828,
												"nodeType": "Return",
												"src": "6412:75:1"
											}
										]
									},
									"functionSelector": "da4f8431",
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTimeWeightedAveRate",
									"nameLocation": "5121:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "leftTime",
												"nameLocation": "5152:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "5144:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5144:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "rightTime",
												"nameLocation": "5170:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "5162:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5143:37:1"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 830,
												"src": "5202:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5202:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5201:9:1"
									},
									"scope": 983,
									"src": "5112:1383:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 874,
										"nodeType": "Block",
										"src": "6601:198:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 845,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "6620:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 846,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6629:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6620:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207374616b652030",
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6632:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															},
															"value": "Cannot stake 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2972ce884b95fc24c703b7f04fae79e4ca7287e77fa26ed09d1faa4263e887ab",
																"typeString": "literal_string \"Cannot stake 0\""
															}
														],
														"id": 844,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6612:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6612:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 850,
												"nodeType": "ExpressionStatement",
												"src": "6612:37:1"
											},
											{
												"expression": {
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 851,
														"name": "_totalPowers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "6660:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 854,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "6692:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 852,
																"name": "_totalPowers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "6675:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6688:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1798,
															"src": "6675:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6675:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6660:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "6660:39:1"
											},
											{
												"expression": {
													"id": 867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 858,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "6710:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 860,
														"indexExpression": {
															"id": 859,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "6720:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6710:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 865,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "6748:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 861,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6728:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 863,
																"indexExpression": {
																	"id": 862,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6738:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6728:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6744:3:1",
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1798,
															"src": "6728:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6728:27:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6710:45:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 868,
												"nodeType": "ExpressionStatement",
												"src": "6710:45:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 870,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 832,
															"src": "6778:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 871,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 834,
															"src": "6784:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 869,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "6771:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6771:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "EmitStatement",
												"src": "6766:25:1"
											}
										]
									},
									"functionSelector": "adc9772e",
									"id": 875,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 837,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 836,
												"name": "nonReentrant",
												"nameLocations": [
													"6559:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1022,
												"src": "6559:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6559:12:1"
										},
										{
											"id": 839,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 838,
												"name": "onlyAdmin",
												"nameLocations": [
													"6572:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 76,
												"src": "6572:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6572:9:1"
										},
										{
											"arguments": [
												{
													"id": 841,
													"name": "user",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 832,
													"src": "6595:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 842,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 840,
												"name": "updateReward",
												"nameLocations": [
													"6582:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "6582:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6582:18:1"
										}
									],
									"name": "stake",
									"nameLocation": "6514:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6528:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "6520:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 831,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6520:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6542:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "6534:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 833,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6534:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6519:30:1"
									},
									"returnParameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6601:0:1"
									},
									"scope": 983,
									"src": "6505:294:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "6879:237:1",
										"statements": [
											{
												"assignments": [
													885
												],
												"declarations": [
													{
														"constant": false,
														"id": 885,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "6898:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "6890:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 884,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6890:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 890,
												"initialValue": {
													"baseExpression": {
														"id": 886,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 196,
														"src": "6907:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 889,
													"indexExpression": {
														"expression": {
															"id": 887,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6915:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 888,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6919:6:1",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6915:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6907:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6890:36:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 891,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 885,
														"src": "6941:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6950:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6941:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "6937:172:1",
												"trueBody": {
													"id": 915,
													"nodeType": "Block",
													"src": "6953:156:1",
													"statements": [
														{
															"expression": {
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 894,
																		"name": "rewards",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 196,
																		"src": "6968:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 897,
																	"indexExpression": {
																		"expression": {
																			"id": 895,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6976:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6980:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6976:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6968:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6990:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6968:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 900,
															"nodeType": "ExpressionStatement",
															"src": "6968:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 904,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7028:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 905,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7032:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7028:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 906,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "7040:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 901,
																		"name": "rewardsToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 192,
																		"src": "7006:12:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$1101",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 903,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7019:8:1",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1050,
																	"src": "7006:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7006:41:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 908,
															"nodeType": "ExpressionStatement",
															"src": "7006:41:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 910,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "7078:3:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7082:6:1",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "7078:10:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 912,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 885,
																		"src": "7090:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 909,
																	"name": "RewardPaid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 944,
																	"src": "7067:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 913,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7067:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 914,
															"nodeType": "EmitStatement",
															"src": "7062:35:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "3d18b912",
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 878,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 877,
												"name": "nonReentrant",
												"nameLocations": [
													"6841:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1022,
												"src": "6841:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6841:12:1"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 880,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6867:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6871:6:1",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6867:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 882,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 879,
												"name": "updateReward",
												"nameLocations": [
													"6854:12:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 301,
												"src": "6854:12:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "6854:24:1"
										}
									],
									"name": "getReward",
									"nameLocation": "6820:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 876,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6829:2:1"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6879:0:1"
									},
									"scope": 983,
									"src": "6811:305:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 931,
										"nodeType": "Block",
										"src": "7182:47:1",
										"statements": [
											{
												"expression": {
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 925,
														"name": "rewardsToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "7193:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1101",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 927,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 920,
																"src": "7215:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 926,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1101,
															"src": "7208:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$1101_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7208:13:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$1101",
															"typeString": "contract IERC20"
														}
													},
													"src": "7193:28:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1101",
														"typeString": "contract IERC20"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "7193:28:1"
											}
										]
									},
									"functionSelector": "8aee8127",
									"id": 932,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 923,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 922,
												"name": "onlyOwner",
												"nameLocations": [
													"7172:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7172:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7172:9:1"
										}
									],
									"name": "setRewardToken",
									"nameLocation": "7133:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7156:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 932,
												"src": "7148:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7148:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7147:15:1"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7182:0:1"
									},
									"scope": 983,
									"src": "7124:105:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d",
									"id": 938,
									"name": "Staked",
									"nameLocation": "7249:6:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7272:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "7256:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7256:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 936,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7286:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 938,
												"src": "7278:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 935,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7278:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7255:38:1"
									},
									"src": "7243:51:1"
								},
								{
									"anonymous": false,
									"eventSelector": "e2403640ba68fed3a2f88b7557551d1993f84b99bb10ff833f0cf8db0c5e0486",
									"id": 944,
									"name": "RewardPaid",
									"nameLocation": "7306:10:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7333:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "7317:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7317:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "7347:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "7339:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7339:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7316:38:1"
									},
									"src": "7300:55:1"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "7411:67:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 957,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7456:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_StakingRewards_$983",
																			"typeString": "contract StakingRewards"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_StakingRewards_$983",
																			"typeString": "contract StakingRewards"
																		}
																	],
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7448:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 955,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7448:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7448:13:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7462:7:1",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7448:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 951,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "7430:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 952,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7430:7:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7422:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 949,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7422:8:1",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 953,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7422:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7439:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7422:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7422:48:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "7422:48:1"
											}
										]
									},
									"functionSelector": "db2e21bc",
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 947,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 946,
												"name": "onlyOwner",
												"nameLocations": [
													"7401:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7401:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7401:9:1"
										}
									],
									"name": "emergencyWithdraw",
									"nameLocation": "7372:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7389:2:1"
									},
									"returnParameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7411:0:1"
									},
									"scope": 983,
									"src": "7363:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 981,
										"nodeType": "Block",
										"src": "7568:61:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 976,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7602:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7606:6:1",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7602:10:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 978,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "7614:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 973,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 965,
																	"src": "7586:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 972,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1101,
																"src": "7579:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1101_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 974,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7579:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															}
														},
														"id": 975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7593:8:1",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1050,
														"src": "7579:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7579:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "7579:42:1"
											}
										]
									},
									"functionSelector": "a4c3b091",
									"id": 982,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 970,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 969,
												"name": "onlyOwner",
												"nameLocations": [
													"7558:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 64,
												"src": "7558:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "7558:9:1"
										}
									],
									"name": "emergencyWithdrawToken",
									"nameLocation": "7495:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7526:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "7518:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7518:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "7541:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 982,
												"src": "7533:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7533:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7517:31:1"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7568:0:1"
									},
									"scope": 983,
									"src": "7486:143:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 984,
							"src": "371:7261:1",
							"usedErrors": []
						}
					],
					"src": "0:7632:1"
				},
				"id": 1
			},
			"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1023
						]
					},
					"id": 1024,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 985,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:2"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 986,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:2",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1023,
							"linearizedBaseContracts": [
								1023
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 989,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1023,
									"src": "1661:41:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 987,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 988,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 992,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:2",
									"nodeType": "VariableDeclaration",
									"scope": 1023,
									"src": "1708:37:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 990,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 991,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 994,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1023,
									"src": "1752:23:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 993,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1001,
										"nodeType": "Block",
										"src": "1796:39:2",
										"statements": [
											{
												"expression": {
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 997,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "1806:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 998,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "1816:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:2"
											}
										]
									},
									"id": 1002,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:2"
									},
									"scope": 1023,
									"src": "1782:53:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1021,
										"nodeType": "Block",
										"src": "2236:421:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 994,
																"src": "2325:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1007,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 992,
																"src": "2336:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 1009,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 1005,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1011,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:2"
											},
											{
												"expression": {
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1012,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2455:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1013,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2465:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1015,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:2"
											},
											{
												"id": 1016,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:2"
											},
											{
												"expression": {
													"id": 1019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1017,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2628:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1018,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2638:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1020,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:2"
											}
										]
									},
									"documentation": {
										"id": 1003,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:2",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1022,
									"name": "nonReentrant",
									"nameLocation": "2221:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:2"
									},
									"src": "2212:445:2",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1024,
							"src": "873:1786:2",
							"usedErrors": []
						}
					],
					"src": "97:2563:2"
				},
				"id": 2
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1101
						]
					},
					"id": 1102,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1025,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "91:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1026,
								"nodeType": "StructuredDocumentation",
								"src": "116:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1101,
							"linearizedBaseContracts": [
								1101
							],
							"name": "IERC20",
							"nameLocation": "197:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1027,
										"nodeType": "StructuredDocumentation",
										"src": "210:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1032,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "290:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "301:2:3"
									},
									"returnParameters": {
										"id": 1031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1032,
												"src": "327:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "327:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "326:9:3"
									},
									"scope": 1101,
									"src": "281:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1033,
										"nodeType": "StructuredDocumentation",
										"src": "342:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1040,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "428:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "446:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "438:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "438:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "437:17:3"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "478:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "478:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "477:9:3"
									},
									"scope": 1101,
									"src": "419:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "493:209:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1050,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "716:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "733:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "725:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "752:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "744:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "724:35:3"
									},
									"returnParameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1048,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "778:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1047,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "778:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "777:6:3"
									},
									"scope": 1101,
									"src": "707:77:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1051,
										"nodeType": "StructuredDocumentation",
										"src": "790:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1060,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1068:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1086:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1078:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1052,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1101:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1093:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1054,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:32:3"
									},
									"returnParameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "1133:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1132:9:3"
									},
									"scope": 1101,
									"src": "1059:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "1148:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1804:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1820:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1812:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1837:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1829:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:33:3"
									},
									"returnParameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "1863:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1067,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1863:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1862:6:3"
									},
									"scope": 1101,
									"src": "1795:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "1875:296:3",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1082,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2185:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2215:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2207:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2207:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1075,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2239:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2231:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1074,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2231:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2266:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2258:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2197:81:3"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "2297:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1079,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2297:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2296:6:3"
									},
									"scope": 1101,
									"src": "2176:127:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "2309:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1091,
									"name": "Transfer",
									"nameLocation": "2478:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2503:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2487:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2525:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2509:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2537:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "2529:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:57:3"
									},
									"src": "2472:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "2550:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1100,
									"name": "Approval",
									"nameLocation": "2709:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2734:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2718:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2718:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2757:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2741:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2741:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2774:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "2766:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2766:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2717:63:3"
									},
									"src": "2703:78:3"
								}
							],
							"scope": 1102,
							"src": "187:2596:3",
							"usedErrors": []
						}
					],
					"src": "91:2693:3"
				},
				"id": 3
			},
			"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1622
						],
						"IERC20": [
							1101
						],
						"SafeERC20": [
							1325
						]
					},
					"id": 1326,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1103,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:4"
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1104,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1102,
							"src": "125:23:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 1105,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1326,
							"sourceUnit": 1623,
							"src": "149:36:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1106,
								"nodeType": "StructuredDocumentation",
								"src": "187:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1325,
							"linearizedBaseContracts": [
								1325
							],
							"name": "SafeERC20",
							"nameLocation": "653:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1109,
									"libraryName": {
										"id": 1107,
										"name": "Address",
										"nameLocations": [
											"675:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1622,
										"src": "675:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "669:26:4",
									"typeName": {
										"id": 1108,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "687:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "803:103:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1120,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1112,
															"src": "833:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1123,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1112,
																			"src": "863:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1101",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "869:8:4",
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1050,
																		"src": "863:14:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1125,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "878:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "863:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1126,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "888:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1127,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1116,
																	"src": "892:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1121,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "840:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "844:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "840:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "840:58:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1119,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "813:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1101_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "813:86:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1130,
												"nodeType": "ExpressionStatement",
												"src": "813:86:4"
											}
										]
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "739:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "732:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1101",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1111,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1110,
														"name": "IERC20",
														"nameLocations": [
															"732:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1101,
														"src": "732:6:4"
													},
													"referencedDeclaration": 1101,
													"src": "732:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1101",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1114,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "762:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "754:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "754:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "782:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "774:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "722:71:4"
									},
									"returnParameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "803:0:4"
									},
									"scope": 1325,
									"src": "701:205:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1157,
										"nodeType": "Block",
										"src": "1040:113:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1145,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1135,
															"src": "1070:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1148,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "1100:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1101",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1106:12:4",
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1082,
																		"src": "1100:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1119:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1100:27:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1151,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1137,
																	"src": "1129:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1152,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1139,
																	"src": "1135:2:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1153,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1141,
																	"src": "1139:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1146,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1077:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1081:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1077:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1077:68:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1144,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "1050:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1101_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1050:96:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1156,
												"nodeType": "ExpressionStatement",
												"src": "1050:96:4"
											}
										]
									},
									"id": 1158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "921:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "954:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "947:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1101",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1133,
														"name": "IERC20",
														"nameLocations": [
															"947:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1101,
														"src": "947:6:4"
													},
													"referencedDeclaration": 1101,
													"src": "947:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1101",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "977:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "969:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "999:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "991:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "991:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1141,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1019:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1158,
												"src": "1011:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1140,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "937:93:4"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1040:0:4"
									},
									"scope": 1325,
									"src": "912:241:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1201,
										"nodeType": "Block",
										"src": "1519:497:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1170,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1166,
																			"src": "1768:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1777:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1768:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1173,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1767:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1178,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "1808:4:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1325",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1325",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1177,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1800:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1176,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1800:7:4",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1179,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1800:13:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1180,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1164,
																					"src": "1815:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 1174,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1162,
																					"src": "1784:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1101",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1175,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1790:9:4",
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1060,
																				"src": "1784:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1784:39:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1827:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1784:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1184,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1783:46:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1767:62:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1843:56:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1746:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1746:163:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1188,
												"nodeType": "ExpressionStatement",
												"src": "1746:163:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1190,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1162,
															"src": "1939:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1193,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1162,
																			"src": "1969:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1101",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1975:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "1969:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1983:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "1969:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1196,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1164,
																	"src": "1993:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1197,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "2002:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1191,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1946:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1192,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1950:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "1946:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1946:62:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1189,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "1919:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1101_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1919:90:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "1919:90:4"
											}
										]
									},
									"documentation": {
										"id": 1159,
										"nodeType": "StructuredDocumentation",
										"src": "1159:249:4",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1202,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "1422:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1450:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1443:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1101",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1161,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1160,
														"name": "IERC20",
														"nameLocations": [
															"1443:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1101,
														"src": "1443:6:4"
													},
													"referencedDeclaration": 1101,
													"src": "1443:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1101",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1473:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1465:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "1490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1433:76:4"
									},
									"returnParameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1519:0:4"
									},
									"scope": 1325,
									"src": "1413:603:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1237,
										"nodeType": "Block",
										"src": "2138:194:4",
										"statements": [
											{
												"assignments": [
													1213
												],
												"declarations": [
													{
														"constant": false,
														"id": 1213,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "2156:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 1237,
														"src": "2148:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1212,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2148:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1224,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1218,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2195:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$1325",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$1325",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 1217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2187:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1216,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2187:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 1219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2187:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1220,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1207,
																"src": "2202:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 1214,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "2171:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$1101",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2177:9:4",
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1060,
															"src": "2171:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 1221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2171:39:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1222,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "2213:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2171:47:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2148:70:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1226,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1205,
															"src": "2248:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1229,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1205,
																			"src": "2278:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$1101",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2284:7:4",
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1070,
																		"src": "2278:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2292:8:4",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "2278:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1232,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1207,
																	"src": "2302:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1233,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1213,
																	"src": "2311:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1227,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2255:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1228,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2259:18:4",
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "2255:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2255:69:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$1101",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1225,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1324,
														"src": "2228:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1101_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2228:97:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2228:97:4"
											}
										]
									},
									"id": 1238,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2031:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2069:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2062:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1101",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1204,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1203,
														"name": "IERC20",
														"nameLocations": [
															"2062:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1101,
														"src": "2062:6:4"
													},
													"referencedDeclaration": 1101,
													"src": "2062:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1101",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2092:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2084:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2117:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1238,
												"src": "2109:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2109:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2052:76:4"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2138:0:4"
									},
									"scope": 1325,
									"src": "2022:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1285,
										"nodeType": "Block",
										"src": "2454:370:4",
										"statements": [
											{
												"id": 1284,
												"nodeType": "UncheckedBlock",
												"src": "2464:354:4",
												"statements": [
													{
														"assignments": [
															1249
														],
														"declarations": [
															{
																"constant": false,
																"id": 1249,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "2496:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1284,
																"src": "2488:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1248,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2488:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1258,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2535:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1325",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1325",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2527:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2527:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2527:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1256,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1243,
																	"src": "2542:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1250,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "2511:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1101",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2517:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1060,
																"src": "2511:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2511:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2488:62:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1260,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1249,
																		"src": "2572:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 1261,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1245,
																		"src": "2588:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2572:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2595:43:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 1259,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2564:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2564:75:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1265,
														"nodeType": "ExpressionStatement",
														"src": "2564:75:4"
													},
													{
														"assignments": [
															1267
														],
														"declarations": [
															{
																"constant": false,
																"id": 1267,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "2661:12:4",
																"nodeType": "VariableDeclaration",
																"scope": 1284,
																"src": "2653:20:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1266,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2653:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1271,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1268,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1249,
																"src": "2676:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1269,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1245,
																"src": "2691:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2676:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2653:43:4"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1273,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1241,
																	"src": "2730:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1101",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 1276,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1241,
																					"src": "2760:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$1101",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1277,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "2766:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1070,
																				"src": "2760:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 1278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "2774:8:4",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "2760:22:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 1279,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1243,
																			"src": "2784:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1280,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1267,
																			"src": "2793:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1274,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "2737:3:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "2741:18:4",
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "2737:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 1281,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2737:69:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1101",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1272,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "2710:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$1101_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 1282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2710:97:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1283,
														"nodeType": "ExpressionStatement",
														"src": "2710:97:4"
													}
												]
											}
										]
									},
									"id": 1286,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2347:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2385:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2378:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1101",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1240,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1239,
														"name": "IERC20",
														"nameLocations": [
															"2378:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1101,
														"src": "2378:6:4"
													},
													"referencedDeclaration": 1101,
													"src": "2378:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1101",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2408:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2400:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1245,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2433:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1286,
												"src": "2425:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2425:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2368:76:4"
									},
									"returnParameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:0:4"
									},
									"scope": 1325,
									"src": "2338:486:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1323,
										"nodeType": "Block",
										"src": "3277:636:4",
										"statements": [
											{
												"assignments": [
													1296
												],
												"declarations": [
													{
														"constant": false,
														"id": 1296,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3639:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1323,
														"src": "3626:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1295,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3626:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1305,
												"initialValue": {
													"arguments": [
														{
															"id": 1302,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "3680:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3686:34:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1299,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1290,
																	"src": "3660:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$1101",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$1101",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3652:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3652:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3652:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3667:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1416,
														"src": "3652:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3652:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3626:95:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1306,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "3735:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3746:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3735:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3755:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3735:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "3731:176:4",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "3758:149:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1313,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1296,
																				"src": "3830:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1315,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3843:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1314,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3843:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1316,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3842:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1311,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3819:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3823:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "3819:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1317,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3819:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3851:44:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1310,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3811:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3811:85:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1320,
															"nodeType": "ExpressionStatement",
															"src": "3811:85:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1287,
										"nodeType": "StructuredDocumentation",
										"src": "2830:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1324,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "3216:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3243:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "3236:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$1101",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1289,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1288,
														"name": "IERC20",
														"nameLocations": [
															"3236:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1101,
														"src": "3236:6:4"
													},
													"referencedDeclaration": 1101,
													"src": "3236:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$1101",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3263:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "3250:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3250:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3235:33:4"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3277:0:4"
									},
									"scope": 1325,
									"src": "3207:706:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1326,
							"src": "645:3270:4",
							"usedErrors": []
						}
					],
					"src": "100:3816:4"
				},
				"id": 4
			},
			"node_modules/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1622
						]
					},
					"id": 1623,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1327,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1328,
								"nodeType": "StructuredDocumentation",
								"src": "111:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1622,
							"linearizedBaseContracts": [
								1622
							],
							"name": "Address",
							"nameLocation": "187:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1344,
										"nodeType": "Block",
										"src": "837:311:5",
										"statements": [
											{
												"assignments": [
													1337
												],
												"declarations": [
													{
														"constant": false,
														"id": 1337,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "1042:4:5",
														"nodeType": "VariableDeclaration",
														"scope": 1344,
														"src": "1034:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1034:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1338,
												"nodeType": "VariableDeclarationStatement",
												"src": "1034:12:5"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "1065:52:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1079:28:5",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "1099:7:5"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "1087:11:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:20:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1079:4:5"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1331,
														"isOffset": false,
														"isSlot": false,
														"src": "1099:7:5",
														"valueSize": 1
													},
													{
														"declaration": 1337,
														"isOffset": false,
														"isSlot": false,
														"src": "1079:4:5",
														"valueSize": 1
													}
												],
												"id": 1339,
												"nodeType": "InlineAssembly",
												"src": "1056:61:5"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1340,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1337,
														"src": "1133:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1140:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1133:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1335,
												"id": 1343,
												"nodeType": "Return",
												"src": "1126:15:5"
											}
										]
									},
									"documentation": {
										"id": 1329,
										"nodeType": "StructuredDocumentation",
										"src": "201:565:5",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 1345,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "780:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1331,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "799:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "791:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "791:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:17:5"
									},
									"returnParameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1345,
												"src": "831:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "831:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:6:5"
									},
									"scope": 1622,
									"src": "771:377:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1378,
										"nodeType": "Block",
										"src": "2136:241:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1356,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2162:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1622",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1622",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1355,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2154:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1354,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2154:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2154:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2168:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2154:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1359,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "2179:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2154:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2187:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2146:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2146:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1363,
												"nodeType": "ExpressionStatement",
												"src": "2146:73:5"
											},
											{
												"assignments": [
													1365,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1365,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2236:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1378,
														"src": "2231:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1364,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2231:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1372,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1370,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2279:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1366,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1348,
																"src": "2249:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2259:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2249:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1368,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1350,
																"src": "2271:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2249:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2230:52:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1374,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "2300:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2309:60:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1373,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2292:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2292:78:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "2292:78:5"
											}
										]
									},
									"documentation": {
										"id": 1346,
										"nodeType": "StructuredDocumentation",
										"src": "1154:906:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2074:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2100:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2084:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2084:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1350,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2119:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1379,
												"src": "2111:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2111:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2083:43:5"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2136:0:5"
									},
									"scope": 1622,
									"src": "2065:312:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1395,
										"nodeType": "Block",
										"src": "3208:84:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1390,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "3238:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1391,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1384,
															"src": "3246:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3252:32:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1389,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1396,
															1416
														],
														"referencedDeclaration": 1416,
														"src": "3225:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3225:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1388,
												"id": 1394,
												"nodeType": "Return",
												"src": "3218:67:5"
											}
										]
									},
									"documentation": {
										"id": 1380,
										"nodeType": "StructuredDocumentation",
										"src": "2383:731:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1396,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3128:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3149:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "3141:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1381,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1384,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3170:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "3157:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1383,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3157:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3140:35:5"
									},
									"returnParameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1396,
												"src": "3194:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3194:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3193:14:5"
									},
									"scope": 1622,
									"src": "3119:173:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1415,
										"nodeType": "Block",
										"src": "3661:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1409,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "3700:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "3708:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3714:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1412,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "3717:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1408,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1436,
															1486
														],
														"referencedDeclaration": 1486,
														"src": "3678:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3678:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1407,
												"id": 1414,
												"nodeType": "Return",
												"src": "3671:59:5"
											}
										]
									},
									"documentation": {
										"id": 1397,
										"nodeType": "StructuredDocumentation",
										"src": "3298:211:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3523:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "3545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3545:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3582:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "3569:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3569:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "3610:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "3596:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1402,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3596:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:93:5"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1416,
												"src": "3647:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1405,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3647:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3646:14:5"
									},
									"scope": 1622,
									"src": "3514:223:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1435,
										"nodeType": "Block",
										"src": "4242:111:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1429,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "4281:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1430,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "4289:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1431,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "4295:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4302:43:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1428,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1436,
															1486
														],
														"referencedDeclaration": 1486,
														"src": "4259:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4259:87:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1434,
												"nodeType": "Return",
												"src": "4252:94:5"
											}
										]
									},
									"documentation": {
										"id": 1417,
										"nodeType": "StructuredDocumentation",
										"src": "3743:351:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1436,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4108:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "4139:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "4163:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1420,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4198:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "4190:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4190:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:80:5"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1436,
												"src": "4228:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1425,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4228:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4227:14:5"
									},
									"scope": 1622,
									"src": "4099:254:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "4780:320:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1453,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4806:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1622",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1622",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4798:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1451,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4798:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1454,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4798:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4812:7:5",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "4798:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1456,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "4823:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4798:30:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4830:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1450,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4790:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:81:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "4790:81:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1463,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "4900:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1462,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "4889:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4889:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:31:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 1461,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4881:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4881:60:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1467,
												"nodeType": "ExpressionStatement",
												"src": "4881:60:5"
											},
											{
												"assignments": [
													1469,
													1471
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4958:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "4953:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1468,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4953:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1471,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4980:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1485,
														"src": "4967:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1470,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4967:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1478,
												"initialValue": {
													"arguments": [
														{
															"id": 1476,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "5020:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1472,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "4994:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5001:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4994:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1474,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1443,
																"src": "5013:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4994:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4994:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4952:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1480,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "5059:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1481,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1471,
															"src": "5068:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1482,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1445,
															"src": "5080:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1479,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "5042:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1449,
												"id": 1484,
												"nodeType": "Return",
												"src": "5035:58:5"
											}
										]
									},
									"documentation": {
										"id": 1437,
										"nodeType": "StructuredDocumentation",
										"src": "4359:237:5",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4610:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4649:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "4641:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1438,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4641:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4678:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "4665:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4665:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4700:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "4692:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4729:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "4715:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4715:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4631:116:5"
									},
									"returnParameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "4766:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1447,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4766:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4765:14:5"
									},
									"scope": 1622,
									"src": "4601:499:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1502,
										"nodeType": "Block",
										"src": "5377:97:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1497,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1489,
															"src": "5413:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1498,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1491,
															"src": "5421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5427:39:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1496,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1503,
															1538
														],
														"referencedDeclaration": 1538,
														"src": "5394:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5394:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1501,
												"nodeType": "Return",
												"src": "5387:80:5"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "5106:166:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5286:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5313:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "5305:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5305:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5334:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "5321:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5321:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5304:35:5"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "5363:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1493,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5363:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5362:14:5"
									},
									"scope": 1622,
									"src": "5277:197:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "5816:228:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1517,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "5845:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1516,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "5834:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1518,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5834:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5854:38:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 1515,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5826:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5826:67:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1521,
												"nodeType": "ExpressionStatement",
												"src": "5826:67:5"
											},
											{
												"assignments": [
													1523,
													1525
												],
												"declarations": [
													{
														"constant": false,
														"id": 1523,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5910:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "5905:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1522,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5905:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1525,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5932:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1537,
														"src": "5919:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1524,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5919:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1530,
												"initialValue": {
													"arguments": [
														{
															"id": 1528,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1508,
															"src": "5964:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1526,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "5946:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1527,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5953:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "5946:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5904:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1532,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1523,
															"src": "6003:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1533,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1525,
															"src": "6012:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1534,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1510,
															"src": "6024:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1531,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "5986:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5986:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1536,
												"nodeType": "Return",
												"src": "5979:58:5"
											}
										]
									},
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "5480:173:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5667:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5703:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5695:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5732:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5719:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1507,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5760:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5746:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1509,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5746:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5685:93:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "5802:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1512,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5802:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5801:14:5"
									},
									"scope": 1622,
									"src": "5658:386:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "6320:101:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1549,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1541,
															"src": "6358:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1550,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "6366:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1551,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6372:41:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1548,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1555,
															1590
														],
														"referencedDeclaration": 1590,
														"src": "6337:20:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1552,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6337:77:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1547,
												"id": 1553,
												"nodeType": "Return",
												"src": "6330:84:5"
											}
										]
									},
									"documentation": {
										"id": 1539,
										"nodeType": "StructuredDocumentation",
										"src": "6050:168:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6232:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1541,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6261:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6253:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6253:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6282:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6269:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1542,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6269:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6252:35:5"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "6306:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1545,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6306:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6305:14:5"
									},
									"scope": 1622,
									"src": "6223:198:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "6762:232:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1569,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1558,
																	"src": "6791:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1568,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "6780:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6780:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6800:40:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 1567,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6772:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6772:69:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1573,
												"nodeType": "ExpressionStatement",
												"src": "6772:69:5"
											},
											{
												"assignments": [
													1575,
													1577
												],
												"declarations": [
													{
														"constant": false,
														"id": 1575,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6858:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "6853:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1574,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6853:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1577,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6880:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 1589,
														"src": "6867:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1576,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6867:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1582,
												"initialValue": {
													"arguments": [
														{
															"id": 1580,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "6914:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1578,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "6894:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6901:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "6894:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6852:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1584,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "6953:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1585,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1577,
															"src": "6962:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1586,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "6974:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1583,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "6936:16:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6936:51:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1566,
												"id": 1588,
												"nodeType": "Return",
												"src": "6929:58:5"
											}
										]
									},
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "6427:175:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6616:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6654:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "6646:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6646:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "6670:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1559,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6670:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6711:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "6697:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6697:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6636:93:5"
									},
									"returnParameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "6748:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1564,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6748:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6747:14:5"
									},
									"scope": 1622,
									"src": "6607:387:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1620,
										"nodeType": "Block",
										"src": "7374:532:5",
										"statements": [
											{
												"condition": {
													"id": 1602,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1593,
													"src": "7388:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1618,
													"nodeType": "Block",
													"src": "7445:455:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1609,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1606,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1595,
																		"src": "7529:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1607,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7540:6:5",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7529:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7549:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7529:21:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1616,
																"nodeType": "Block",
																"src": "7837:53:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1613,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1597,
																					"src": "7862:12:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 1612,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "7855:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 1614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7855:20:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1615,
																		"nodeType": "ExpressionStatement",
																		"src": "7855:20:5"
																	}
																]
															},
															"id": 1617,
															"nodeType": "IfStatement",
															"src": "7525:365:5",
															"trueBody": {
																"id": 1611,
																"nodeType": "Block",
																"src": "7552:279:5",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "7672:145:5",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "7694:40:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "7723:10:5"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "7717:5:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7717:17:5"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "7698:15:5",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7766:2:5",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "7770:10:5"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7762:3:5"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7762:19:5"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "7783:15:5"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "7755:6:5"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7755:44:5"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "7755:44:5"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 1595,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7723:10:5",
																				"valueSize": 1
																			},
																			{
																				"declaration": 1595,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "7770:10:5",
																				"valueSize": 1
																			}
																		],
																		"id": 1610,
																		"nodeType": "InlineAssembly",
																		"src": "7663:154:5"
																	}
																]
															}
														}
													]
												},
												"id": 1619,
												"nodeType": "IfStatement",
												"src": "7384:516:5",
												"trueBody": {
													"id": 1605,
													"nodeType": "Block",
													"src": "7397:42:5",
													"statements": [
														{
															"expression": {
																"id": 1603,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1595,
																"src": "7418:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1601,
															"id": 1604,
															"nodeType": "Return",
															"src": "7411:17:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "7000:209:5",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 1621,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "7223:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7254:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7249:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1592,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7249:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7284:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7271:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1594,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7271:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7318:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7304:26:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1596,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7304:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7239:97:5"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1621,
												"src": "7360:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7360:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7359:14:5"
									},
									"scope": 1622,
									"src": "7214:692:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1623,
							"src": "179:7729:5",
							"usedErrors": []
						}
					],
					"src": "86:7823:5"
				},
				"id": 5
			},
			"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1934
						]
					},
					"id": 1935,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1624,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:23:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1625,
								"nodeType": "StructuredDocumentation",
								"src": "270:196:6",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1934,
							"linearizedBaseContracts": [
								1934
							],
							"name": "SafeMath",
							"nameLocation": "475:8:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1656,
										"nodeType": "Block",
										"src": "702:140:6",
										"statements": [
											{
												"id": 1655,
												"nodeType": "UncheckedBlock",
												"src": "712:124:6",
												"statements": [
													{
														"assignments": [
															1638
														],
														"declarations": [
															{
																"constant": false,
																"id": 1638,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "744:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1655,
																"src": "736:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1637,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "736:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1642,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1639,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "748:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1640,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1630,
																"src": "752:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "748:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "736:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1643,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1638,
																"src": "771:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1644,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1628,
																"src": "775:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "771:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1650,
														"nodeType": "IfStatement",
														"src": "767:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "786:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "793:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1648,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "785:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1636,
															"id": 1649,
															"nodeType": "Return",
															"src": "778:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "817:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1652,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1638,
																	"src": "823:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1653,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "816:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1636,
														"id": 1654,
														"nodeType": "Return",
														"src": "809:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1626,
										"nodeType": "StructuredDocumentation",
										"src": "490:131:6",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1657,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "635:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "650:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "642:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "661:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "653:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "653:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:22:6"
									},
									"returnParameters": {
										"id": 1636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "687:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "687:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1657,
												"src": "693:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1634,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "686:15:6"
									},
									"scope": 1934,
									"src": "626:216:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1684,
										"nodeType": "Block",
										"src": "1064:113:6",
										"statements": [
											{
												"id": 1683,
												"nodeType": "UncheckedBlock",
												"src": "1074:97:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1669,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1662,
																"src": "1102:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1670,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1660,
																"src": "1106:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1102:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1676,
														"nodeType": "IfStatement",
														"src": "1098:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1672,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1117:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1124:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1674,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1116:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1668,
															"id": 1675,
															"nodeType": "Return",
															"src": "1109:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1148:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1678,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1660,
																		"src": "1154:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1679,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1662,
																		"src": "1158:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1154:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1681,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1147:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1668,
														"id": 1682,
														"nodeType": "Return",
														"src": "1140:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1658,
										"nodeType": "StructuredDocumentation",
										"src": "848:135:6",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "997:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1660,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1012:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1004:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1659,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1004:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1023:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1015:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1015:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:22:6"
									},
									"returnParameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1049:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1049:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "1055:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1055:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1048:15:6"
									},
									"scope": 1934,
									"src": "988:189:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1726,
										"nodeType": "Block",
										"src": "1401:417:6",
										"statements": [
											{
												"id": 1725,
												"nodeType": "UncheckedBlock",
												"src": "1411:401:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1697,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "1669:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1674:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1669:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1704,
														"nodeType": "IfStatement",
														"src": "1665:28:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1700,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1685:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1691:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1702,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1684:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1696,
															"id": 1703,
															"nodeType": "Return",
															"src": "1677:16:6"
														}
													},
													{
														"assignments": [
															1706
														],
														"declarations": [
															{
																"constant": false,
																"id": 1706,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1715:1:6",
																"nodeType": "VariableDeclaration",
																"scope": 1725,
																"src": "1707:9:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1705,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1707:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1710,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1709,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1707,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "1719:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1708,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "1723:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1719:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1707:17:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1711,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "1742:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1712,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "1746:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1742:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1714,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1690,
																"src": "1751:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1742:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1720,
														"nodeType": "IfStatement",
														"src": "1738:33:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1716,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1762:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1717,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1769:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1718,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1761:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1696,
															"id": 1719,
															"nodeType": "Return",
															"src": "1754:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1721,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1793:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1722,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1706,
																	"src": "1799:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1723,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1792:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1696,
														"id": 1724,
														"nodeType": "Return",
														"src": "1785:16:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "1183:137:6",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 1727,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1334:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1349:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "1341:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1341:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1360:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "1352:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1340:22:6"
									},
									"returnParameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "1386:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "1392:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1385:15:6"
									},
									"scope": 1934,
									"src": "1325:493:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1754,
										"nodeType": "Block",
										"src": "2043:114:6",
										"statements": [
											{
												"id": 1753,
												"nodeType": "UncheckedBlock",
												"src": "2053:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1739,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1732,
																"src": "2081:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2086:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2081:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1746,
														"nodeType": "IfStatement",
														"src": "2077:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2097:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2104:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1744,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2096:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1738,
															"id": 1745,
															"nodeType": "Return",
															"src": "2089:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1747,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2128:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1748,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1730,
																		"src": "2134:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1749,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1732,
																		"src": "2138:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2134:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1751,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2127:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1738,
														"id": 1752,
														"nodeType": "Return",
														"src": "2120:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1728,
										"nodeType": "StructuredDocumentation",
										"src": "1824:138:6",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1976:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1991:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "1983:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2002:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "1994:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1731,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:22:6"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2028:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1734,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2028:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1755,
												"src": "2034:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2034:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:6"
									},
									"scope": 1934,
									"src": "1967:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1782,
										"nodeType": "Block",
										"src": "2392:114:6",
										"statements": [
											{
												"id": 1781,
												"nodeType": "UncheckedBlock",
												"src": "2402:98:6",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1767,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1760,
																"src": "2430:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2435:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2430:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1774,
														"nodeType": "IfStatement",
														"src": "2426:29:6",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2446:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2453:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1772,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2445:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1766,
															"id": 1773,
															"nodeType": "Return",
															"src": "2438:17:6"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2477:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1778,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1776,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "2483:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1777,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1760,
																		"src": "2487:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2483:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1779,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2476:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1766,
														"id": 1780,
														"nodeType": "Return",
														"src": "2469:20:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1756,
										"nodeType": "StructuredDocumentation",
										"src": "2163:148:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2325:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2340:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2332:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2332:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2351:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2343:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1759,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2331:22:6"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1763,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2377:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1762,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1783,
												"src": "2383:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2383:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:15:6"
									},
									"scope": 1934,
									"src": "2316:190:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "2808:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1793,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1786,
														"src": "2825:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1794,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "2829:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2825:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1792,
												"id": 1796,
												"nodeType": "Return",
												"src": "2818:12:6"
											}
										]
									},
									"documentation": {
										"id": 1784,
										"nodeType": "StructuredDocumentation",
										"src": "2512:224:6",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "2750:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1786,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2762:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2754:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2754:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2773:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2765:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2765:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2753:22:6"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "2799:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2798:9:6"
									},
									"scope": 1934,
									"src": "2741:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "3175:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1808,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1801,
														"src": "3192:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1809,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1803,
														"src": "3196:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3192:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1807,
												"id": 1811,
												"nodeType": "Return",
												"src": "3185:12:6"
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "2843:260:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "3117:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3129:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "3121:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3140:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "3132:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3120:22:6"
									},
									"returnParameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "3166:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3166:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3165:9:6"
									},
									"scope": 1934,
									"src": "3108:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "3518:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1823,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1816,
														"src": "3535:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1824,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1818,
														"src": "3539:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3535:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1822,
												"id": 1826,
												"nodeType": "Return",
												"src": "3528:12:6"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "3210:236:6",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "3460:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1819,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3472:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3464:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3464:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1818,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3483:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3475:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1817,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3463:22:6"
									},
									"returnParameters": {
										"id": 1822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3509:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1820,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3509:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3508:9:6"
									},
									"scope": 1934,
									"src": "3451:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1842,
										"nodeType": "Block",
										"src": "3903:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1838,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "3920:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1839,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1833,
														"src": "3924:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3920:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1837,
												"id": 1841,
												"nodeType": "Return",
												"src": "3913:12:6"
											}
										]
									},
									"documentation": {
										"id": 1829,
										"nodeType": "StructuredDocumentation",
										"src": "3553:278:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "3845:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3857:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "3849:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3849:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3868:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "3860:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3860:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3848:22:6"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1843,
												"src": "3894:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:9:6"
									},
									"scope": 1934,
									"src": "3836:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "4452:29:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1853,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1846,
														"src": "4469:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1854,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "4473:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4469:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1852,
												"id": 1856,
												"nodeType": "Return",
												"src": "4462:12:6"
											}
										]
									},
									"documentation": {
										"id": 1844,
										"nodeType": "StructuredDocumentation",
										"src": "3938:442:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "4394:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1846,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4406:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "4398:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1845,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4398:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4417:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "4409:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4409:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4397:22:6"
									},
									"returnParameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "4443:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4443:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4442:9:6"
									},
									"scope": 1934,
									"src": "4385:96:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1882,
										"nodeType": "Block",
										"src": "5070:106:6",
										"statements": [
											{
												"id": 1881,
												"nodeType": "UncheckedBlock",
												"src": "5080:90:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1871,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1863,
																		"src": "5112:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1872,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1861,
																		"src": "5117:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5112:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1874,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "5120:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1870,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5104:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5104:29:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1876,
														"nodeType": "ExpressionStatement",
														"src": "5104:29:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1877,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "5154:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "5158:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5154:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1869,
														"id": 1880,
														"nodeType": "Return",
														"src": "5147:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "4487:453:6",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "4954:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "4975:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "4967:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4967:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "4994:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "4986:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4986:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5019:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "5005:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1864,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5005:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:80:6"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1883,
												"src": "5061:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:9:6"
									},
									"scope": 1934,
									"src": "4945:231:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1907,
										"nodeType": "Block",
										"src": "5785:105:6",
										"statements": [
											{
												"id": 1906,
												"nodeType": "UncheckedBlock",
												"src": "5795:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1896,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1888,
																		"src": "5827:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5831:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5827:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1899,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1890,
																	"src": "5834:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1895,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "5819:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5819:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1901,
														"nodeType": "ExpressionStatement",
														"src": "5819:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1886,
																"src": "5868:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1903,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1888,
																"src": "5872:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5868:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1894,
														"id": 1905,
														"nodeType": "Return",
														"src": "5861:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "5182:473:6",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "5669:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "5690:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5682:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "5709:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5701:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5734:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5720:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1889,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5720:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5672:80:6"
									},
									"returnParameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1908,
												"src": "5776:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5776:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5775:9:6"
									},
									"scope": 1934,
									"src": "5660:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1932,
										"nodeType": "Block",
										"src": "6661:105:6",
										"statements": [
											{
												"id": 1931,
												"nodeType": "UncheckedBlock",
												"src": "6671:89:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1921,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "6703:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6707:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "6703:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1924,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "6710:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1920,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "6695:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6695:28:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1926,
														"nodeType": "ExpressionStatement",
														"src": "6695:28:6"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1927,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1911,
																"src": "6744:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1928,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1913,
																"src": "6748:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6744:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1919,
														"id": 1930,
														"nodeType": "Return",
														"src": "6737:12:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1909,
										"nodeType": "StructuredDocumentation",
										"src": "5896:635:6",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "6545:3:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1911,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6566:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "6558:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6558:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "6585:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "6577:9:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6577:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6610:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "6596:26:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1914,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6596:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:80:6"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1933,
												"src": "6652:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1917,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6652:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6651:9:6"
									},
									"scope": 1934,
									"src": "6536:230:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1935,
							"src": "467:6301:6",
							"usedErrors": []
						}
					],
					"src": "92:6677:6"
				},
				"id": 6
			}
		}
	}
}